using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Xml;
using System.Xml.Serialization;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Netcode;
using StardewValley;
using StardewValley.BellsAndWhistles;
using StardewValley.Buildings;
using StardewValley.Characters;
using StardewValley.Locations;
using StardewValley.Minigames;
using StardewValley.Monsters;
using StardewValley.Network;
using StardewValley.Objects;
using StardewValley.Projectiles;
using StardewValley.Quests;
using StardewValley.TerrainFeatures;
using StardewValley.Tools;
using StardewValley.Util;
using TinyTween;

namespace Microsoft.Xml.Serialization.GeneratedAssembly
{
	public class XmlSerializationWriter1 : XmlSerializationWriter
	{
		public void Write393_WalkDirection(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("WalkDirection", "");
			}
			else
			{
				WriteElementString("WalkDirection", "", Write1_WalkDirection((WalkDirection)o));
			}
		}

		public void Write394_ObjectID(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ObjectID", "");
			}
			else
			{
				Write3_ObjectID("ObjectID", "", (ObjectID)o, needType: false);
			}
		}

		public void Write395_BigCraftableID(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("BigCraftableID", "");
			}
			else
			{
				Write4_BigCraftableID("BigCraftableID", "", (BigCraftableID)o, needType: false);
			}
		}

		public void Write396_FurnitureID(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("FurnitureID", "");
			}
			else
			{
				Write5_FurnitureID("FurnitureID", "", (FurnitureID)o, needType: false);
			}
		}

		public void Write397_MouseCursor(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("MouseCursor", "");
			}
			else
			{
				WriteElementString("MouseCursor", "", Write6_MouseCursor((MouseCursor)o));
			}
		}

		public void Write398_TapState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("TapState", "");
			}
			else
			{
				WriteElementString("TapState", "", Write7_TapState((TapState)o));
			}
		}

		public void Write399_DistanceToTarget(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("DistanceToTarget", "");
			}
			else
			{
				WriteElementString("DistanceToTarget", "", Write8_DistanceToTarget((DistanceToTarget)o));
			}
		}

		public void Write400_WeaponControl(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("WeaponControl", "");
			}
			else
			{
				WriteElementString("WeaponControl", "", Write9_WeaponControl((WeaponControl)o));
			}
		}

		public void Write401_tutorialType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("tutorialType", "");
			}
			else
			{
				WriteElementString("tutorialType", "", Write10_tutorialType((tutorialType)o));
			}
		}

		public void Write402_TutorialShopLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("TutorialShopLocation", "");
			}
			else
			{
				WriteElementString("TutorialShopLocation", "", Write11_TutorialShopLocation((TutorialShopLocation)o));
			}
		}

		public void Write403_LocationWeather(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LocationWeather", "");
				return;
			}
			TopLevelElement();
			Write12_LocationWeather("LocationWeather", "", (LocationWeather)o, isNullable: true, needType: false);
		}

		public void Write404_DontLoadDefaultSetting(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DontLoadDefaultSetting", "");
				return;
			}
			TopLevelElement();
			Write14_DontLoadDefaultSetting("DontLoadDefaultSetting", "", (DontLoadDefaultSetting)o, isNullable: true, needType: false);
		}

		public void Write405_WaterTileData(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("WaterTileData", "");
			}
			else
			{
				Write15_WaterTileData("WaterTileData", "", (WaterTiles.WaterTileData)o, needType: false);
			}
		}

		public void Write406_TweenState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("TweenState", "");
			}
			else
			{
				WriteElementString("TweenState", "", Write16_TweenState((TweenState)o));
			}
		}

		public void Write407_StopBehavior(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("StopBehavior", "");
			}
			else
			{
				WriteElementString("StopBehavior", "", Write17_StopBehavior((StopBehavior)o));
			}
		}

		public void Write408_FloatTween(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FloatTween", "");
				return;
			}
			TopLevelElement();
			Write19_FloatTween("FloatTween", "", (FloatTween)o, isNullable: true, needType: false);
		}

		public void Write409_Vector2Tween(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Vector2Tween", "");
				return;
			}
			TopLevelElement();
			Write21_Vector2Tween("Vector2Tween", "", (Vector2Tween)o, isNullable: true, needType: false);
		}

		public void Write410_Vector3Tween(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Vector3Tween", "");
				return;
			}
			TopLevelElement();
			Write23_Vector3Tween("Vector3Tween", "", (Vector3Tween)o, isNullable: true, needType: false);
		}

		public void Write411_Vector4Tween(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Vector4Tween", "");
				return;
			}
			TopLevelElement();
			Write25_Vector4Tween("Vector4Tween", "", (Vector4Tween)o, isNullable: true, needType: false);
		}

		public void Write412_ColorTween(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ColorTween", "");
				return;
			}
			TopLevelElement();
			Write27_ColorTween("ColorTween", "", (ColorTween)o, isNullable: true, needType: false);
		}

		public void Write413_QuaternionTween(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("QuaternionTween", "");
				return;
			}
			TopLevelElement();
			Write29_QuaternionTween("QuaternionTween", "", (QuaternionTween)o, isNullable: true, needType: false);
		}

		public void Write414_BuildingPainter(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BuildingPainter", "");
				return;
			}
			TopLevelElement();
			Write31_BuildingPainter("BuildingPainter", "", (BuildingPainter)o, isNullable: true, needType: false);
		}

		public void Write415_BuildingPaintColor(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BuildingPaintColor", "");
				return;
			}
			TopLevelElement();
			Write30_BuildingPaintColor("BuildingPaintColor", "", (BuildingPaintColor)o, isNullable: true, needType: false);
		}

		public void Write416_AnimationType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("AnimationType", "");
			}
			else
			{
				WriteElementString("AnimationType", "", Write32_AnimationType((HouseRenovation.AnimationType)o));
			}
		}

		public void Write417_IslandGemBird(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandGemBird", "");
				return;
			}
			TopLevelElement();
			Write35_IslandGemBird("IslandGemBird", "", (IslandGemBird)o, isNullable: true, needType: false);
		}

		public void Write418_GemBirdType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("GemBirdType", "");
			}
			else
			{
				WriteElementString("GemBirdType", "", Write36_GemBirdType((IslandGemBird.GemBirdType)o));
			}
		}

		public void Write419_InstanceStatics(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("InstanceStatics", "");
				return;
			}
			TopLevelElement();
			Write37_InstanceStatics("InstanceStatics", "", (InstanceStatics)o, isNullable: true, needType: false);
		}

		public void Write420_InstancedStatic(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("InstancedStatic", "");
				return;
			}
			TopLevelElement();
			Write38_InstancedStatic("InstancedStatic", "", (InstancedStatic)o, isNullable: true, needType: false);
		}

		public void Write421_NonInstancedStatic(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NonInstancedStatic", "");
				return;
			}
			TopLevelElement();
			Write39_NonInstancedStatic("NonInstancedStatic", "", (NonInstancedStatic)o, isNullable: true, needType: false);
		}

		public void Write422_LocalMultiplayer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LocalMultiplayer", "");
				return;
			}
			TopLevelElement();
			Write40_LocalMultiplayer("LocalMultiplayer", "", (LocalMultiplayer)o, isNullable: true, needType: false);
		}

		public void Write423_LocationName(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LocationName", "");
				return;
			}
			TopLevelElement();
			Write41_LocationName("LocationName", "", (LocationName)o, isNullable: true, needType: false);
		}

		public void Write424_Options(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Options", "");
				return;
			}
			TopLevelElement();
			Write48_Options("Options", "", (Options)o, isNullable: true, needType: false);
		}

		public void Write425_ItemStowingModes(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ItemStowingModes", "");
			}
			else
			{
				WriteElementString("ItemStowingModes", "", Write43_ItemStowingModes((Options.ItemStowingModes)o));
			}
		}

		public void Write426_GamepadModes(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("GamepadModes", "");
			}
			else
			{
				WriteElementString("GamepadModes", "", Write44_GamepadModes((Options.GamepadModes)o));
			}
		}

		public void Write427_MapSeat(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MapSeat", "");
				return;
			}
			TopLevelElement();
			Write49_MapSeat("MapSeat", "", (MapSeat)o, isNullable: true, needType: false);
		}

		public void Write428_SpecialOrder(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SpecialOrder", "");
				return;
			}
			TopLevelElement();
			Write159_SpecialOrder("SpecialOrder", "", (SpecialOrder)o, isNullable: true, needType: false);
		}

		public void Write429_QuestState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("QuestState", "");
			}
			else
			{
				WriteElementString("QuestState", "", Write160_QuestState((SpecialOrder.QuestState)o));
			}
		}

		public void Write430_QuestDuration(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("QuestDuration", "");
			}
			else
			{
				WriteElementString("QuestDuration", "", Write161_QuestDuration((SpecialOrder.QuestDuration)o));
			}
		}

		public void Write431_OrderObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("OrderObjective", "");
				return;
			}
			TopLevelElement();
			Write50_OrderObjective("OrderObjective", "", (OrderObjective)o, isNullable: true, needType: false);
		}

		public void Write432_CollectObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CollectObjective", "");
				return;
			}
			TopLevelElement();
			Write152_CollectObjective("CollectObjective", "", (CollectObjective)o, isNullable: true, needType: false);
		}

		public void Write433_DonateObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DonateObjective", "");
				return;
			}
			TopLevelElement();
			Write153_DonateObjective("DonateObjective", "", (DonateObjective)o, isNullable: true, needType: false);
		}

		public void Write434_ShipObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShipObjective", "");
				return;
			}
			TopLevelElement();
			Write145_ShipObjective("ShipObjective", "", (ShipObjective)o, isNullable: true, needType: false);
		}

		public void Write435_SlayObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SlayObjective", "");
				return;
			}
			TopLevelElement();
			Write146_SlayObjective("SlayObjective", "", (SlayObjective)o, isNullable: true, needType: false);
		}

		public void Write436_FishObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishObjective", "");
				return;
			}
			TopLevelElement();
			Write148_FishObjective("FishObjective", "", (FishObjective)o, isNullable: true, needType: false);
		}

		public void Write437_DeliverObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DeliverObjective", "");
				return;
			}
			TopLevelElement();
			Write147_DeliverObjective("DeliverObjective", "", (DeliverObjective)o, isNullable: true, needType: false);
		}

		public void Write438_GiftObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GiftObjective", "");
				return;
			}
			TopLevelElement();
			Write149_GiftObjective("GiftObjective", "", (GiftObjective)o, isNullable: true, needType: false);
		}

		public void Write439_LikeLevels(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("LikeLevels", "");
			}
			else
			{
				WriteElementString("LikeLevels", "", Write162_LikeLevels((GiftObjective.LikeLevels)o));
			}
		}

		public void Write440_ReachMineFloorObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ReachMineFloorObjective", "");
				return;
			}
			TopLevelElement();
			Write151_ReachMineFloorObjective("ReachMineFloorObjective", "", (ReachMineFloorObjective)o, isNullable: true, needType: false);
		}

		public void Write441_JKScoreObjective(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("JKScoreObjective", "");
				return;
			}
			TopLevelElement();
			Write150_JKScoreObjective("JKScoreObjective", "", (JKScoreObjective)o, isNullable: true, needType: false);
		}

		public void Write442_OrderReward(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("OrderReward", "");
				return;
			}
			TopLevelElement();
			Write144_OrderReward("OrderReward", "", (OrderReward)o, isNullable: true, needType: false);
		}

		public void Write443_MailReward(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MailReward", "");
				return;
			}
			TopLevelElement();
			Write154_MailReward("MailReward", "", (MailReward)o, isNullable: true, needType: false);
		}

		public void Write444_ResetEventReward(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ResetEventReward", "");
				return;
			}
			TopLevelElement();
			Write157_ResetEventReward("ResetEventReward", "", (ResetEventReward)o, isNullable: true, needType: false);
		}

		public void Write445_GemsReward(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GemsReward", "");
				return;
			}
			TopLevelElement();
			Write156_GemsReward("GemsReward", "", (GemsReward)o, isNullable: true, needType: false);
		}

		public void Write446_MoneyReward(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MoneyReward", "");
				return;
			}
			TopLevelElement();
			Write155_MoneyReward("MoneyReward", "", (MoneyReward)o, isNullable: true, needType: false);
		}

		public void Write447_FriendshipReward(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FriendshipReward", "");
				return;
			}
			TopLevelElement();
			Write158_FriendshipReward("FriendshipReward", "", (FriendshipReward)o, isNullable: true, needType: false);
		}

		public void Write448_BaseEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BaseEnchantment", "");
				return;
			}
			TopLevelElement();
			Write99_BaseEnchantment("BaseEnchantment", "", (BaseEnchantment)o, isNullable: true, needType: false);
		}

		public void Write449_BaseWeaponEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BaseWeaponEnchantment", "");
				return;
			}
			TopLevelElement();
			Write65_BaseWeaponEnchantment("BaseWeaponEnchantment", "", (BaseWeaponEnchantment)o, isNullable: true, needType: false);
		}

		public void Write450_MagicEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MagicEnchantment", "");
				return;
			}
			TopLevelElement();
			Write69_MagicEnchantment("MagicEnchantment", "", (MagicEnchantment)o, isNullable: true, needType: false);
		}

		public void Write451_AmethystEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AmethystEnchantment", "");
				return;
			}
			TopLevelElement();
			Write91_AmethystEnchantment("AmethystEnchantment", "", (AmethystEnchantment)o, isNullable: true, needType: false);
		}

		public void Write452_TopazEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("TopazEnchantment", "");
				return;
			}
			TopLevelElement();
			Write92_TopazEnchantment("TopazEnchantment", "", (TopazEnchantment)o, isNullable: true, needType: false);
		}

		public void Write453_AquamarineEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AquamarineEnchantment", "");
				return;
			}
			TopLevelElement();
			Write93_AquamarineEnchantment("AquamarineEnchantment", "", (AquamarineEnchantment)o, isNullable: true, needType: false);
		}

		public void Write454_JadeEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("JadeEnchantment", "");
				return;
			}
			TopLevelElement();
			Write94_JadeEnchantment("JadeEnchantment", "", (JadeEnchantment)o, isNullable: true, needType: false);
		}

		public void Write455_DiamondEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DiamondEnchantment", "");
				return;
			}
			TopLevelElement();
			Write97_DiamondEnchantment("DiamondEnchantment", "", (DiamondEnchantment)o, isNullable: true, needType: false);
		}

		public void Write456_GalaxySoulEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GalaxySoulEnchantment", "");
				return;
			}
			TopLevelElement();
			Write98_GalaxySoulEnchantment("GalaxySoulEnchantment", "", (GalaxySoulEnchantment)o, isNullable: true, needType: false);
		}

		public void Write457_RubyEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("RubyEnchantment", "");
				return;
			}
			TopLevelElement();
			Write96_RubyEnchantment("RubyEnchantment", "", (RubyEnchantment)o, isNullable: true, needType: false);
		}

		public void Write458_EmeraldEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("EmeraldEnchantment", "");
				return;
			}
			TopLevelElement();
			Write95_EmeraldEnchantment("EmeraldEnchantment", "", (EmeraldEnchantment)o, isNullable: true, needType: false);
		}

		public void Write459_ArtfulEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArtfulEnchantment", "");
				return;
			}
			TopLevelElement();
			Write66_ArtfulEnchantment("ArtfulEnchantment", "", (ArtfulEnchantment)o, isNullable: true, needType: false);
		}

		public void Write460_HaymakerEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("HaymakerEnchantment", "");
				return;
			}
			TopLevelElement();
			Write68_HaymakerEnchantment("HaymakerEnchantment", "", (HaymakerEnchantment)o, isNullable: true, needType: false);
		}

		public void Write461_BugKillerEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BugKillerEnchantment", "");
				return;
			}
			TopLevelElement();
			Write67_BugKillerEnchantment("BugKillerEnchantment", "", (BugKillerEnchantment)o, isNullable: true, needType: false);
		}

		public void Write462_VampiricEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("VampiricEnchantment", "");
				return;
			}
			TopLevelElement();
			Write70_VampiricEnchantment("VampiricEnchantment", "", (VampiricEnchantment)o, isNullable: true, needType: false);
		}

		public void Write463_CrusaderEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CrusaderEnchantment", "");
				return;
			}
			TopLevelElement();
			Write71_CrusaderEnchantment("CrusaderEnchantment", "", (CrusaderEnchantment)o, isNullable: true, needType: false);
		}

		public void Write464_PickaxeEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("PickaxeEnchantment", "");
				return;
			}
			TopLevelElement();
			Write78_PickaxeEnchantment("PickaxeEnchantment", "", (PickaxeEnchantment)o, isNullable: true, needType: false);
		}

		public void Write465_HoeEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("HoeEnchantment", "");
				return;
			}
			TopLevelElement();
			Write77_HoeEnchantment("HoeEnchantment", "", (HoeEnchantment)o, isNullable: true, needType: false);
		}

		public void Write466_AxeEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AxeEnchantment", "");
				return;
			}
			TopLevelElement();
			Write76_AxeEnchantment("AxeEnchantment", "", (AxeEnchantment)o, isNullable: true, needType: false);
		}

		public void Write467_FishingRodEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishingRodEnchantment", "");
				return;
			}
			TopLevelElement();
			Write87_FishingRodEnchantment("FishingRodEnchantment", "", (FishingRodEnchantment)o, isNullable: true, needType: false);
		}

		public void Write468_WateringCanEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("WateringCanEnchantment", "");
				return;
			}
			TopLevelElement();
			Write75_WateringCanEnchantment("WateringCanEnchantment", "", (WateringCanEnchantment)o, isNullable: true, needType: false);
		}

		public void Write469_PanEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("PanEnchantment", "");
				return;
			}
			TopLevelElement();
			Write74_PanEnchantment("PanEnchantment", "", (PanEnchantment)o, isNullable: true, needType: false);
		}

		public void Write470_MilkPailEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MilkPailEnchantment", "");
				return;
			}
			TopLevelElement();
			Write73_MilkPailEnchantment("MilkPailEnchantment", "", (MilkPailEnchantment)o, isNullable: true, needType: false);
		}

		public void Write471_ShearsEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShearsEnchantment", "");
				return;
			}
			TopLevelElement();
			Write72_ShearsEnchantment("ShearsEnchantment", "", (ShearsEnchantment)o, isNullable: true, needType: false);
		}

		public void Write472_PowerfulEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("PowerfulEnchantment", "");
				return;
			}
			TopLevelElement();
			Write85_PowerfulEnchantment("PowerfulEnchantment", "", (PowerfulEnchantment)o, isNullable: true, needType: false);
		}

		public void Write473_EfficientToolEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("EfficientToolEnchantment", "");
				return;
			}
			TopLevelElement();
			Write84_EfficientToolEnchantment("EfficientToolEnchantment", "", (EfficientToolEnchantment)o, isNullable: true, needType: false);
		}

		public void Write474_SwiftToolEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SwiftToolEnchantment", "");
				return;
			}
			TopLevelElement();
			Write79_SwiftToolEnchantment("SwiftToolEnchantment", "", (SwiftToolEnchantment)o, isNullable: true, needType: false);
		}

		public void Write475_ReachingToolEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ReachingToolEnchantment", "");
				return;
			}
			TopLevelElement();
			Write80_ReachingToolEnchantment("ReachingToolEnchantment", "", (ReachingToolEnchantment)o, isNullable: true, needType: false);
		}

		public void Write476_BottomlessEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BottomlessEnchantment", "");
				return;
			}
			TopLevelElement();
			Write81_BottomlessEnchantment("BottomlessEnchantment", "", (BottomlessEnchantment)o, isNullable: true, needType: false);
		}

		public void Write477_ShavingEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShavingEnchantment", "");
				return;
			}
			TopLevelElement();
			Write82_ShavingEnchantment("ShavingEnchantment", "", (ShavingEnchantment)o, isNullable: true, needType: false);
		}

		public void Write478_ArchaeologistEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArchaeologistEnchantment", "");
				return;
			}
			TopLevelElement();
			Write83_ArchaeologistEnchantment("ArchaeologistEnchantment", "", (ArchaeologistEnchantment)o, isNullable: true, needType: false);
		}

		public void Write479_GenerousEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GenerousEnchantment", "");
				return;
			}
			TopLevelElement();
			Write86_GenerousEnchantment("GenerousEnchantment", "", (GenerousEnchantment)o, isNullable: true, needType: false);
		}

		public void Write480_MasterEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MasterEnchantment", "");
				return;
			}
			TopLevelElement();
			Write88_MasterEnchantment("MasterEnchantment", "", (MasterEnchantment)o, isNullable: true, needType: false);
		}

		public void Write481_AutoHookEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AutoHookEnchantment", "");
				return;
			}
			TopLevelElement();
			Write89_AutoHookEnchantment("AutoHookEnchantment", "", (AutoHookEnchantment)o, isNullable: true, needType: false);
		}

		public void Write482_PreservingEnchantment(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("PreservingEnchantment", "");
				return;
			}
			TopLevelElement();
			Write90_PreservingEnchantment("PreservingEnchantment", "", (PreservingEnchantment)o, isNullable: true, needType: false);
		}

		public void Write483_StackDrawType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("StackDrawType", "");
			}
			else
			{
				WriteElementString("StackDrawType", "", Write163_StackDrawType((StackDrawType)o));
			}
		}

		public void Write484_MovieInvitation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MovieInvitation", "");
				return;
			}
			TopLevelElement();
			Write184_MovieInvitation("MovieInvitation", "", (MovieInvitation)o, isNullable: true, needType: false);
		}

		public void Write485_StartMovieEvent(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("StartMovieEvent", "");
				return;
			}
			TopLevelElement();
			Write185_StartMovieEvent("StartMovieEvent", "", (StartMovieEvent)o, isNullable: true, needType: false);
		}

		public void Write486_MovieViewerLockEvent(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MovieViewerLockEvent", "");
				return;
			}
			TopLevelElement();
			Write186_MovieViewerLockEvent("MovieViewerLockEvent", "", (MovieViewerLockEvent)o, isNullable: true, needType: false);
		}

		public void Write487_WorldDate(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("WorldDate", "");
				return;
			}
			TopLevelElement();
			Write187_WorldDate("WorldDate", "", (WorldDate)o, isNullable: true, needType: false);
		}

		public void Write488_FriendshipStatus(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("FriendshipStatus", "");
			}
			else
			{
				WriteElementString("FriendshipStatus", "", Write188_FriendshipStatus((FriendshipStatus)o));
			}
		}

		public void Write489_Friendship(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Friendship", "");
				return;
			}
			TopLevelElement();
			Write189_Friendship("Friendship", "", (Friendship)o, isNullable: true, needType: false);
		}

		public void Write490_LanguageCode(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("LanguageCode", "");
			}
			else
			{
				WriteElementString("LanguageCode", "", Write190_LanguageCode((LocalizedContentManager.LanguageCode)o));
			}
		}

		public void Write491_AnimalHouse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AnimalHouse", "");
				return;
			}
			TopLevelElement();
			Write259_AnimalHouse("AnimalHouse", "", (AnimalHouse)o, isNullable: true, needType: false);
		}

		public void Write492_BuildingUpgrade(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BuildingUpgrade", "");
				return;
			}
			TopLevelElement();
			Write181_BuildingUpgrade("BuildingUpgrade", "", (BuildingUpgrade)o, isNullable: true, needType: false);
		}

		public void Write493_Character(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Character", "");
				return;
			}
			TopLevelElement();
			Write164_Character("Character", "", (Character)o, isNullable: true, needType: false);
		}

		public void Write494_Chunk(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Chunk", "");
				return;
			}
			TopLevelElement();
			Write262_Chunk("Chunk", "", (Chunk)o, isNullable: true, needType: false);
		}

		public void Write495_FarmerRenderer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FarmerRenderer", "");
				return;
			}
			TopLevelElement();
			Write263_FarmerRenderer("FarmerRenderer", "", (FarmerRenderer)o, isNullable: true, needType: false);
		}

		public void Write496_Shed(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Shed", "");
				return;
			}
			TopLevelElement();
			Write205_Shed("Shed", "", (Shed)o, isNullable: true, needType: false);
		}

		public void Write497_SlimeHutch(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SlimeHutch", "");
				return;
			}
			TopLevelElement();
			Write203_SlimeHutch("SlimeHutch", "", (SlimeHutch)o, isNullable: true, needType: false);
		}

		public void Write498_Farm(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Farm", "");
				return;
			}
			TopLevelElement();
			Write201_Farm("Farm", "", (Farm)o, isNullable: true, needType: false);
		}

		public void Write499_LightningStrikeEvent(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LightningStrikeEvent", "");
				return;
			}
			TopLevelElement();
			Write264_LightningStrikeEvent("LightningStrikeEvent", "", (Farm.LightningStrikeEvent)o, isNullable: true, needType: false);
		}

		public void Write500_FarmAnimal(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FarmAnimal", "");
				return;
			}
			TopLevelElement();
			Write265_FarmAnimal("FarmAnimal", "", (FarmAnimal)o, isNullable: true, needType: false);
		}

		public void Write501_NetLogger(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetLogger", "");
				return;
			}
			TopLevelElement();
			Write266_NetLogger("NetLogger", "", (NetLogger)o, isNullable: true, needType: false);
		}

		public void Write502_Noise(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Noise", "");
				return;
			}
			TopLevelElement();
			Write267_Noise("Noise", "", (Noise)o, isNullable: true, needType: false);
		}

		public void Write503_NumberSprite(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NumberSprite", "");
				return;
			}
			TopLevelElement();
			Write268_NumberSprite("NumberSprite", "", (NumberSprite)o, isNullable: true, needType: false);
		}

		public void Write504_Fence(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Fence", "");
				return;
			}
			TopLevelElement();
			Write52_Fence("Fence", "", (Fence)o, isNullable: true, needType: false);
		}

		public void Write505_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Item", "");
				return;
			}
			TopLevelElement();
			Write143_Item("Item", "", (Item)o, isNullable: true, needType: false);
		}

		public void Write506_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfStringString", "");
				return;
			}
			TopLevelElement();
			ModDataDictionary modDataDictionary = (ModDataDictionary)o;
			if (modDataDictionary == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfStringString", "");
				return;
			}
			WriteStartElement("ArrayOfSerializableDictionaryOfStringString", "", null, writePrefixed: false);
			IEnumerator enumerator = modDataDictionary.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
					WriteSerializable(serializable, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
				}
			}
			WriteEndElement();
		}

		public void Write507_LightSource(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LightSource", "");
				return;
			}
			TopLevelElement();
			Write272_LightSource("LightSource", "", (LightSource)o, isNullable: true, needType: false);
		}

		public void Write508_LightContext(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("LightContext", "");
			}
			else
			{
				WriteElementString("LightContext", "", Write273_LightContext((LightSource.LightContext)o));
			}
		}

		public void Write509_Torch(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Torch", "");
				return;
			}
			TopLevelElement();
			Write53_Torch("Torch", "", (Torch)o, isNullable: true, needType: false);
		}

		public void Write510_InputButton(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("InputButton", "");
			}
			else
			{
				Write47_InputButton("InputButton", "", (InputButton)o, needType: false);
			}
		}

		public void Write511_ServerPrivacy(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ServerPrivacy", "");
			}
			else
			{
				WriteElementString("ServerPrivacy", "", Write45_ServerPrivacy((ServerPrivacy)o));
			}
		}

		public void Write512_NameSelect(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NameSelect", "");
				return;
			}
			TopLevelElement();
			Write274_NameSelect("NameSelect", "", (NameSelect)o, isNullable: true, needType: false);
		}

		public void Write513_PriorityQueue(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("PriorityQueue", "");
				return;
			}
			TopLevelElement();
			Write275_PriorityQueue("PriorityQueue", "", (PriorityQueue)o, isNullable: true, needType: false);
		}

		public void Write514_Crop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Crop", "");
				return;
			}
			TopLevelElement();
			Write138_Crop("Crop", "", (Crop)o, isNullable: true, needType: false);
		}

		public void Write515_Farmer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Farmer", "");
				return;
			}
			TopLevelElement();
			Write183_Farmer("Farmer", "", (Farmer)o, isNullable: true, needType: false);
		}

		public void Write516_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfInt32ArrayOfInt32", "");
				return;
			}
			TopLevelElement();
			NetIntIntArrayDictionary netIntIntArrayDictionary = (NetIntIntArrayDictionary)o;
			if (netIntIntArrayDictionary == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfInt32ArrayOfInt32", "");
				return;
			}
			WriteStartElement("ArrayOfSerializableDictionaryOfInt32ArrayOfInt32", "", null, writePrefixed: false);
			IEnumerator enumerator = netIntIntArrayDictionary.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					SerializableDictionary<int, int[]> serializable = (SerializableDictionary<int, int[]>)enumerator.Current;
					WriteSerializable(serializable, "SerializableDictionaryOfInt32ArrayOfInt32", "", isNullable: true, wrapped: true);
				}
			}
			WriteEndElement();
		}

		public void Write517_HairStyleMetadata(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("HairStyleMetadata", "");
				return;
			}
			TopLevelElement();
			Write276_HairStyleMetadata("HairStyleMetadata", "", (HairStyleMetadata)o, isNullable: true, needType: false);
		}

		public void Write518_FarmerPair(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("FarmerPair", "");
			}
			else
			{
				Write277_FarmerPair("FarmerPair", "", (FarmerPair)o, needType: false);
			}
		}

		public void Write519_NutDropRequest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NutDropRequest", "");
				return;
			}
			TopLevelElement();
			Write278_NutDropRequest("NutDropRequest", "", (NutDropRequest)o, isNullable: true, needType: false);
		}

		public void Write520_RemoteBuildingPermissions(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("RemoteBuildingPermissions", "");
			}
			else
			{
				WriteElementString("RemoteBuildingPermissions", "", Write279_RemoteBuildingPermissions((FarmerTeam.RemoteBuildingPermissions)o));
			}
		}

		public void Write521_SleepAnnounceModes(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("SleepAnnounceModes", "");
			}
			else
			{
				WriteElementString("SleepAnnounceModes", "", Write280_SleepAnnounceModes((FarmerTeam.SleepAnnounceModes)o));
			}
		}

		public void Write522_ArrayOfBoolean(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfBoolean", "");
				return;
			}
			TopLevelElement();
			InteriorDoor interiorDoor = (InteriorDoor)o;
			if ((object)interiorDoor == null)
			{
				WriteNullTagLiteral("ArrayOfBoolean", "");
				return;
			}
			WriteStartElement("ArrayOfBoolean", "", null, writePrefixed: false);
			IEnumerator enumerator = interiorDoor.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					bool flag = (bool)enumerator.Current;
					WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
				}
			}
			WriteEndElement();
		}

		public void Write523_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfPointBoolean", "");
				return;
			}
			TopLevelElement();
			InteriorDoorDictionary interiorDoorDictionary = (InteriorDoorDictionary)o;
			if (interiorDoorDictionary == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfPointBoolean", "");
				return;
			}
			WriteStartElement("ArrayOfSerializableDictionaryOfPointBoolean", "", null, writePrefixed: false);
			IEnumerator enumerator = interiorDoorDictionary.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					SerializableDictionary<Point, bool> serializable = (SerializableDictionary<Point, bool>)enumerator.Current;
					WriteSerializable(serializable, "SerializableDictionaryOfPointBoolean", "", isNullable: true, wrapped: true);
				}
			}
			WriteEndElement();
		}

		public void Write524_GameLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GameLocation", "");
				return;
			}
			TopLevelElement();
			Write258_GameLocation("GameLocation", "", (GameLocation)o, isNullable: true, needType: false);
		}

		public void Write525_LocationContext(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("LocationContext", "");
			}
			else
			{
				WriteElementString("LocationContext", "", Write281_LocationContext((GameLocation.LocationContext)o));
			}
		}

		public void Write526_NPC(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NPC", "");
				return;
			}
			TopLevelElement();
			Write168_NPC("NPC", "", (NPC)o, isNullable: true, needType: false);
		}

		public void Write527_MarriageDialogueReference(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MarriageDialogueReference", "");
				return;
			}
			TopLevelElement();
			Write282_MarriageDialogueReference("MarriageDialogueReference", "", (MarriageDialogueReference)o, isNullable: true, needType: false);
		}

		public void Write528_FarmActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FarmActivity", "");
				return;
			}
			TopLevelElement();
			Write283_FarmActivity("FarmActivity", "", (FarmActivity)o, isNullable: true, needType: false);
		}

		public void Write529_ArtifactSpotWatchActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArtifactSpotWatchActivity", "");
				return;
			}
			TopLevelElement();
			Write284_ArtifactSpotWatchActivity("ArtifactSpotWatchActivity", "", (ArtifactSpotWatchActivity)o, isNullable: true, needType: false);
		}

		public void Write530_CropWatchActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CropWatchActivity", "");
				return;
			}
			TopLevelElement();
			Write285_CropWatchActivity("CropWatchActivity", "", (CropWatchActivity)o, isNullable: true, needType: false);
		}

		public void Write531_FlowerWatchActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FlowerWatchActivity", "");
				return;
			}
			TopLevelElement();
			Write286_FlowerWatchActivity("FlowerWatchActivity", "", (FlowerWatchActivity)o, isNullable: true, needType: false);
		}

		public void Write532_ShrineActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShrineActivity", "");
				return;
			}
			TopLevelElement();
			Write287_ShrineActivity("ShrineActivity", "", (ShrineActivity)o, isNullable: true, needType: false);
		}

		public void Write533_MailActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MailActivity", "");
				return;
			}
			TopLevelElement();
			Write288_MailActivity("MailActivity", "", (MailActivity)o, isNullable: true, needType: false);
		}

		public void Write534_TreeActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("TreeActivity", "");
				return;
			}
			TopLevelElement();
			Write289_TreeActivity("TreeActivity", "", (TreeActivity)o, isNullable: true, needType: false);
		}

		public void Write535_ClearingActivity(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ClearingActivity", "");
				return;
			}
			TopLevelElement();
			Write290_ClearingActivity("ClearingActivity", "", (ClearingActivity)o, isNullable: true, needType: false);
		}

		public void Write536_Object(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Object", "");
				return;
			}
			TopLevelElement();
			Write142_Object("Object", "", (StardewValley.Object)o, isNullable: true, needType: false);
		}

		public void Write537_PreserveType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("PreserveType", "");
			}
			else
			{
				WriteElementString("PreserveType", "", Write291_PreserveType((StardewValley.Object.PreserveType)o));
			}
		}

		public void Write538_HoneyType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("HoneyType", "");
			}
			else
			{
				WriteElementString("HoneyType", "", Write292_HoneyType((StardewValley.Object.HoneyType)o));
			}
		}

		public void Write539_RainDrop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("RainDrop", "");
				return;
			}
			TopLevelElement();
			Write293_RainDrop("RainDrop", "", (RainDrop)o, isNullable: true, needType: false);
		}

		public void Write540_MineChestType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("MineChestType", "");
			}
			else
			{
				WriteElementString("MineChestType", "", Write294_MineChestType((MineChestType)o));
			}
		}

		public void Write541_Vector2Reader(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Vector2Reader", "");
				return;
			}
			TopLevelElement();
			Write297_Vector2Reader("Vector2Reader", "", (Vector2Reader)o, isNullable: true, needType: false);
		}

		public void Write542_Vector2Writer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Vector2Writer", "");
				return;
			}
			TopLevelElement();
			Write299_Vector2Writer("Vector2Writer", "", (Vector2Writer)o, isNullable: true, needType: false);
		}

		public void Write543_Vector2Serializer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Vector2Serializer", "");
				return;
			}
			TopLevelElement();
			Write301_Vector2Serializer("Vector2Serializer", "", (Vector2Serializer)o, isNullable: true, needType: false);
		}

		public void Write544_SaveGame(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SaveGame", "");
				return;
			}
			TopLevelElement();
			Write304_SaveGame("SaveGame", "", (SaveGame)o, isNullable: true, needType: false);
		}

		public void Write545_SaveFixes(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("SaveFixes", "");
			}
			else
			{
				WriteElementString("SaveFixes", "", Write305_SaveFixes((SaveGame.SaveFixes)o));
			}
		}

		public void Write546_ChangeType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ChangeType", "");
			}
			else
			{
				WriteElementString("ChangeType", "", Write306_ChangeType((ChangeType)o));
			}
		}

		public void Write547_StartupPreferences(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("StartupPreferences", "");
				return;
			}
			TopLevelElement();
			Write307_StartupPreferences("StartupPreferences", "", (StartupPreferences)o, isNullable: true, needType: false);
		}

		public void Write548_Stats(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Stats", "");
				return;
			}
			TopLevelElement();
			Write180_Stats("Stats", "", (Stats)o, isNullable: true, needType: false);
		}

		public void Write549_Tool(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Tool", "");
				return;
			}
			TopLevelElement();
			Write112_Tool("Tool", "", (Tool)o, isNullable: true, needType: false);
		}

		public void Write550_Warp(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Warp", "");
				return;
			}
			TopLevelElement();
			Write216_Warp("Warp", "", (Warp)o, isNullable: true, needType: false);
		}

		public void Write551_WeatherDebris(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("WeatherDebris", "");
				return;
			}
			TopLevelElement();
			Write308_WeatherDebris("WeatherDebris", "", (WeatherDebris)o, isNullable: true, needType: false);
		}

		public void Write552_Bush(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Bush", "");
				return;
			}
			TopLevelElement();
			Write136_Bush("Bush", "", (Bush)o, isNullable: true, needType: false);
		}

		public void Write553_CosmeticPlant(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CosmeticPlant", "");
				return;
			}
			TopLevelElement();
			Write131_CosmeticPlant("CosmeticPlant", "", (CosmeticPlant)o, isNullable: true, needType: false);
		}

		public void Write554_Flooring(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Flooring", "");
				return;
			}
			TopLevelElement();
			Write130_Flooring("Flooring", "", (Flooring)o, isNullable: true, needType: false);
		}

		public void Write555_FruitTree(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FruitTree", "");
				return;
			}
			TopLevelElement();
			Write134_FruitTree("FruitTree", "", (FruitTree)o, isNullable: true, needType: false);
		}

		public void Write556_GiantCrop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GiantCrop", "");
				return;
			}
			TopLevelElement();
			Write133_GiantCrop("GiantCrop", "", (GiantCrop)o, isNullable: true, needType: false);
		}

		public void Write557_HoeDirt(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("HoeDirt", "");
				return;
			}
			TopLevelElement();
			Write139_HoeDirt("HoeDirt", "", (HoeDirt)o, isNullable: true, needType: false);
		}

		public void Write558_LargeTerrainFeature(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LargeTerrainFeature", "");
				return;
			}
			TopLevelElement();
			Write135_LargeTerrainFeature("LargeTerrainFeature", "", (LargeTerrainFeature)o, isNullable: true, needType: false);
		}

		public void Write559_ResourceClump(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ResourceClump", "");
				return;
			}
			TopLevelElement();
			Write132_ResourceClump("ResourceClump", "", (ResourceClump)o, isNullable: true, needType: false);
		}

		public void Write560_Grass(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Grass", "");
				return;
			}
			TopLevelElement();
			Write126_Grass("Grass", "", (Grass)o, isNullable: true, needType: false);
		}

		public void Write561_Quartz(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Quartz", "");
				return;
			}
			TopLevelElement();
			Write129_Quartz("Quartz", "", (Quartz)o, isNullable: true, needType: false);
		}

		public void Write562_TerrainFeature(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("TerrainFeature", "");
				return;
			}
			TopLevelElement();
			Write137_TerrainFeature("TerrainFeature", "", (TerrainFeature)o, isNullable: true, needType: false);
		}

		public void Write563_Tree(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Tree", "");
				return;
			}
			TopLevelElement();
			Write128_Tree("Tree", "", (Tree)o, isNullable: true, needType: false);
		}

		public void Write564_BasicProjectile(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BasicProjectile", "");
				return;
			}
			TopLevelElement();
			Write310_BasicProjectile("BasicProjectile", "", (BasicProjectile)o, isNullable: true, needType: false);
		}

		public void Write565_DebuffingProjectile(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DebuffingProjectile", "");
				return;
			}
			TopLevelElement();
			Write311_DebuffingProjectile("DebuffingProjectile", "", (DebuffingProjectile)o, isNullable: true, needType: false);
		}

		public void Write566_Projectile(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Projectile", "");
				return;
			}
			TopLevelElement();
			Write309_Projectile("Projectile", "", (Projectile)o, isNullable: true, needType: false);
		}

		public void Write567_GenericTool(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GenericTool", "");
				return;
			}
			TopLevelElement();
			Write111_GenericTool("GenericTool", "", (GenericTool)o, isNullable: true, needType: false);
		}

		public void Write568_Axe(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Axe", "");
				return;
			}
			TopLevelElement();
			Write103_Axe("Axe", "", (Axe)o, isNullable: true, needType: false);
		}

		public void Write569_Blueprints(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Blueprints", "");
				return;
			}
			TopLevelElement();
			Write312_Blueprints("Blueprints", "", (Blueprints)o, isNullable: true, needType: false);
		}

		public void Write570_Pan(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Pan", "");
				return;
			}
			TopLevelElement();
			Write107_Pan("Pan", "", (Pan)o, isNullable: true, needType: false);
		}

		public void Write571_FishingRod(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishingRod", "");
				return;
			}
			TopLevelElement();
			Write106_FishingRod("FishingRod", "", (FishingRod)o, isNullable: true, needType: false);
		}

		public void Write572_Lantern(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Lantern", "");
				return;
			}
			TopLevelElement();
			Write313_Lantern("Lantern", "", (Lantern)o, isNullable: true, needType: false);
		}

		public void Write573_MagnifyingGlass(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MagnifyingGlass", "");
				return;
			}
			TopLevelElement();
			Write100_MagnifyingGlass("MagnifyingGlass", "", (MagnifyingGlass)o, isNullable: true, needType: false);
		}

		public void Write574_MeleeWeapon(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MeleeWeapon", "");
				return;
			}
			TopLevelElement();
			Write113_MeleeWeapon("MeleeWeapon", "", (MeleeWeapon)o, isNullable: true, needType: false);
		}

		public void Write575_MilkPail(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MilkPail", "");
				return;
			}
			TopLevelElement();
			Write102_MilkPail("MilkPail", "", (MilkPail)o, isNullable: true, needType: false);
		}

		public void Write576_Pickaxe(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Pickaxe", "");
				return;
			}
			TopLevelElement();
			Write108_Pickaxe("Pickaxe", "", (Pickaxe)o, isNullable: true, needType: false);
		}

		public void Write577_Hoe(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Hoe", "");
				return;
			}
			TopLevelElement();
			Write105_Hoe("Hoe", "", (Hoe)o, isNullable: true, needType: false);
		}

		public void Write578_Raft(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Raft", "");
				return;
			}
			TopLevelElement();
			Write314_Raft("Raft", "", (Raft)o, isNullable: true, needType: false);
		}

		public void Write579_Seeds(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Seeds", "");
				return;
			}
			TopLevelElement();
			Write316_Seeds("Seeds", "", (Seeds)o, isNullable: true, needType: false);
		}

		public void Write580_Shears(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Shears", "");
				return;
			}
			TopLevelElement();
			Write101_Shears("Shears", "", (Shears)o, isNullable: true, needType: false);
		}

		public void Write581_Slingshot(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Slingshot", "");
				return;
			}
			TopLevelElement();
			Write110_Slingshot("Slingshot", "", (Slingshot)o, isNullable: true, needType: false);
		}

		public void Write582_Stackable(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Stackable", "");
				return;
			}
			TopLevelElement();
			Write315_Stackable("Stackable", "", (Stackable)o, isNullable: true, needType: false);
		}

		public void Write583_Sword(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Sword", "");
				return;
			}
			TopLevelElement();
			Write317_Sword("Sword", "", (Sword)o, isNullable: true, needType: false);
		}

		public void Write584_ToolDescription(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ToolDescription", "");
			}
			else
			{
				Write318_ToolDescription("ToolDescription", "", (ToolDescription)o, needType: false);
			}
		}

		public void Write585_ToolFactory(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ToolFactory", "");
				return;
			}
			TopLevelElement();
			Write319_ToolFactory("ToolFactory", "", (ToolFactory)o, isNullable: true, needType: false);
		}

		public void Write586_Wand(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Wand", "");
				return;
			}
			TopLevelElement();
			Write104_Wand("Wand", "", (Wand)o, isNullable: true, needType: false);
		}

		public void Write587_WateringCan(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("WateringCan", "");
				return;
			}
			TopLevelElement();
			Write109_WateringCan("WateringCan", "", (WateringCan)o, isNullable: true, needType: false);
		}

		public void Write588_BoundingBoxGroup(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BoundingBoxGroup", "");
				return;
			}
			TopLevelElement();
			Write320_BoundingBoxGroup("BoundingBoxGroup", "", (BoundingBoxGroup)o, isNullable: true, needType: false);
		}

		public void Write589_ToolSpamInputSimulator(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ToolSpamInputSimulator", "");
				return;
			}
			TopLevelElement();
			Write321_ToolSpamInputSimulator("ToolSpamInputSimulator", "", (ToolSpamInputSimulator)o, isNullable: true, needType: false);
		}

		public void Write590_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LeftRightClickSpamInputSimulator", "");
				return;
			}
			TopLevelElement();
			Write322_Item("LeftRightClickSpamInputSimulator", "", (LeftRightClickSpamInputSimulator)o, isNullable: true, needType: false);
		}

		public void Write591_SynchronizedShopStock(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SynchronizedShopStock", "");
				return;
			}
			TopLevelElement();
			Write323_SynchronizedShopStock("SynchronizedShopStock", "", (SynchronizedShopStock)o, isNullable: true, needType: false);
		}

		public void Write592_SynchedShop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("SynchedShop", "");
			}
			else
			{
				WriteElementString("SynchedShop", "", Write324_SynchedShop((SynchronizedShopStock.SynchedShop)o));
			}
		}

		public void Write593_SecretLostItemQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SecretLostItemQuest", "");
				return;
			}
			TopLevelElement();
			Write178_SecretLostItemQuest("SecretLostItemQuest", "", (SecretLostItemQuest)o, isNullable: true, needType: false);
		}

		public void Write594_ArrayOfDescriptionElement(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfDescriptionElement", "");
				return;
			}
			TopLevelElement();
			NetDescriptionElementRef netDescriptionElementRef = (NetDescriptionElementRef)o;
			if ((object)netDescriptionElementRef == null)
			{
				WriteNullTagLiteral("ArrayOfDescriptionElement", "");
				return;
			}
			WriteStartElement("ArrayOfDescriptionElement", "", null, writePrefixed: false);
			IEnumerator enumerator = netDescriptionElementRef.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					DescriptionElement o2 = (DescriptionElement)enumerator.Current;
					Write165_DescriptionElement("DescriptionElement", "", o2, isNullable: true, needType: false);
				}
			}
			WriteEndElement();
		}

		public void Write595_ArrayOfDescriptionElement(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfDescriptionElement", "");
				return;
			}
			TopLevelElement();
			NetDescriptionElementRef netDescriptionElementRef = (NetDescriptionElementRef)o;
			if ((object)netDescriptionElementRef == null)
			{
				WriteNullTagLiteral("ArrayOfDescriptionElement", "");
				return;
			}
			WriteStartElement("ArrayOfDescriptionElement", "", null, writePrefixed: false);
			IEnumerator enumerator = netDescriptionElementRef.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					DescriptionElement o2 = (DescriptionElement)enumerator.Current;
					Write165_DescriptionElement("DescriptionElement", "", o2, isNullable: true, needType: false);
				}
			}
			WriteEndElement();
		}

		public void Write596_DescriptionElement(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DescriptionElement", "");
				return;
			}
			TopLevelElement();
			Write165_DescriptionElement("DescriptionElement", "", (DescriptionElement)o, isNullable: true, needType: false);
		}

		public void Write597_LostItemQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LostItemQuest", "");
				return;
			}
			TopLevelElement();
			Write177_LostItemQuest("LostItemQuest", "", (LostItemQuest)o, isNullable: true, needType: false);
		}

		public void Write598_ItemHarvestQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ItemHarvestQuest", "");
				return;
			}
			TopLevelElement();
			Write173_ItemHarvestQuest("ItemHarvestQuest", "", (ItemHarvestQuest)o, isNullable: true, needType: false);
		}

		public void Write599_GoSomewhereQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GoSomewhereQuest", "");
				return;
			}
			TopLevelElement();
			Write176_GoSomewhereQuest("GoSomewhereQuest", "", (GoSomewhereQuest)o, isNullable: true, needType: false);
		}

		public void Write600_CraftingQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CraftingQuest", "");
				return;
			}
			TopLevelElement();
			Write174_CraftingQuest("CraftingQuest", "", (CraftingQuest)o, isNullable: true, needType: false);
		}

		public void Write601_SocializeQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SocializeQuest", "");
				return;
			}
			TopLevelElement();
			Write166_SocializeQuest("SocializeQuest", "", (SocializeQuest)o, isNullable: true, needType: false);
		}

		public void Write602_FishingQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishingQuest", "");
				return;
			}
			TopLevelElement();
			Write175_FishingQuest("FishingQuest", "", (FishingQuest)o, isNullable: true, needType: false);
		}

		public void Write603_SlayMonsterQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SlayMonsterQuest", "");
				return;
			}
			TopLevelElement();
			Write170_SlayMonsterQuest("SlayMonsterQuest", "", (SlayMonsterQuest)o, isNullable: true, needType: false);
		}

		public void Write604_ResourceCollectionQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ResourceCollectionQuest", "");
				return;
			}
			TopLevelElement();
			Write171_ResourceCollectionQuest("ResourceCollectionQuest", "", (ResourceCollectionQuest)o, isNullable: true, needType: false);
		}

		public void Write605_ItemDeliveryQuest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ItemDeliveryQuest", "");
				return;
			}
			TopLevelElement();
			Write172_ItemDeliveryQuest("ItemDeliveryQuest", "", (ItemDeliveryQuest)o, isNullable: true, needType: false);
		}

		public void Write606_Quest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Quest", "");
				return;
			}
			TopLevelElement();
			Write179_Quest("Quest", "", (Quest)o, isNullable: true, needType: false);
		}

		public void Write607_BedFurniture(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BedFurniture", "");
				return;
			}
			TopLevelElement();
			Write121_BedFurniture("BedFurniture", "", (BedFurniture)o, isNullable: true, needType: false);
		}

		public void Write608_BedType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("BedType", "");
			}
			else
			{
				WriteElementString("BedType", "", Write120_BedType((BedFurniture.BedType)o));
			}
		}

		public void Write609_FishTankFurniture(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishTankFurniture", "");
				return;
			}
			TopLevelElement();
			Write119_FishTankFurniture("FishTankFurniture", "", (FishTankFurniture)o, isNullable: true, needType: false);
		}

		public void Write610_FishTankCategories(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("FishTankCategories", "");
			}
			else
			{
				WriteElementString("FishTankCategories", "", Write325_FishTankCategories((FishTankFurniture.FishTankCategories)o));
			}
		}

		public void Write611_FishType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("FishType", "");
			}
			else
			{
				WriteElementString("FishType", "", Write326_FishType((TankFish.FishType)o));
			}
		}

		public void Write612_ItemPedestal(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ItemPedestal", "");
				return;
			}
			TopLevelElement();
			Write58_ItemPedestal("ItemPedestal", "", (ItemPedestal)o, isNullable: true, needType: false);
		}

		public void Write613_Phone(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Phone", "");
				return;
			}
			TopLevelElement();
			Write117_Phone("Phone", "", (Phone)o, isNullable: true, needType: false);
		}

		public void Write614_PhoneCalls(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("PhoneCalls", "");
			}
			else
			{
				WriteElementString("PhoneCalls", "", Write327_PhoneCalls((Phone.PhoneCalls)o));
			}
		}

		public void Write615_StorageFurniture(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("StorageFurniture", "");
				return;
			}
			TopLevelElement();
			Write118_StorageFurniture("StorageFurniture", "", (StorageFurniture)o, isNullable: true, needType: false);
		}

		public void Write616_WoodChipper(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("WoodChipper", "");
				return;
			}
			TopLevelElement();
			Write122_WoodChipper("WoodChipper", "", (WoodChipper)o, isNullable: true, needType: false);
		}

		public void Write617_Clothing(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Clothing", "");
				return;
			}
			TopLevelElement();
			Write59_Clothing("Clothing", "", (Clothing)o, isNullable: true, needType: false);
		}

		public void Write618_ClothesType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ClothesType", "");
			}
			else
			{
				WriteElementString("ClothesType", "", Write328_ClothesType((Clothing.ClothesType)o));
			}
		}

		public void Write619_IndoorPot(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IndoorPot", "");
				return;
			}
			TopLevelElement();
			Write140_IndoorPot("IndoorPot", "", (IndoorPot)o, isNullable: true, needType: false);
		}

		public void Write620_MiniJukebox(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MiniJukebox", "");
				return;
			}
			TopLevelElement();
			Write116_MiniJukebox("MiniJukebox", "", (MiniJukebox)o, isNullable: true, needType: false);
		}

		public void Write621_Sign(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Sign", "");
				return;
			}
			TopLevelElement();
			Write141_Sign("Sign", "", (Sign)o, isNullable: true, needType: false);
		}

		public void Write622_Workbench(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Workbench", "");
				return;
			}
			TopLevelElement();
			Write115_Workbench("Workbench", "", (Workbench)o, isNullable: true, needType: false);
		}

		public void Write623_Boots(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Boots", "");
				return;
			}
			TopLevelElement();
			Write56_Boots("Boots", "", (Boots)o, isNullable: true, needType: false);
		}

		public void Write624_BreakableContainer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BreakableContainer", "");
				return;
			}
			TopLevelElement();
			Write329_BreakableContainer("BreakableContainer", "", (BreakableContainer)o, isNullable: true, needType: false);
		}

		public void Write625_Cask(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Cask", "");
				return;
			}
			TopLevelElement();
			Write123_Cask("Cask", "", (Cask)o, isNullable: true, needType: false);
		}

		public void Write626_Chest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Chest", "");
				return;
			}
			TopLevelElement();
			Write114_Chest("Chest", "", (Chest)o, isNullable: true, needType: false);
		}

		public void Write627_SpecialChestTypes(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("SpecialChestTypes", "");
			}
			else
			{
				WriteElementString("SpecialChestTypes", "", Write330_SpecialChestTypes((Chest.SpecialChestTypes)o));
			}
		}

		public void Write628_ColoredObject(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ColoredObject", "");
				return;
			}
			TopLevelElement();
			Write125_ColoredObject("ColoredObject", "", (ColoredObject)o, isNullable: true, needType: false);
		}

		public void Write629_SpecialItem(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SpecialItem", "");
				return;
			}
			TopLevelElement();
			Write54_SpecialItem("SpecialItem", "", (SpecialItem)o, isNullable: true, needType: false);
		}

		public void Write630_TV(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("TV", "");
				return;
			}
			TopLevelElement();
			Write63_TV("TV", "", (TV)o, isNullable: true, needType: false);
		}

		public void Write631_Wallpaper(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Wallpaper", "");
				return;
			}
			TopLevelElement();
			Write55_Wallpaper("Wallpaper", "", (Wallpaper)o, isNullable: true, needType: false);
		}

		public void Write632_Furniture(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Furniture", "");
				return;
			}
			TopLevelElement();
			Write62_Furniture("Furniture", "", (Furniture)o, isNullable: true, needType: false);
		}

		public void Write633_CrabPot(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CrabPot", "");
				return;
			}
			TopLevelElement();
			Write64_CrabPot("CrabPot", "", (CrabPot)o, isNullable: true, needType: false);
		}

		public void Write634_Hat(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Hat", "");
				return;
			}
			TopLevelElement();
			Write57_Hat("Hat", "", (Hat)o, isNullable: true, needType: false);
		}

		public void Write635_HairDrawType(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("HairDrawType", "");
			}
			else
			{
				WriteElementString("HairDrawType", "", Write331_HairDrawType((Hat.HairDrawType)o));
			}
		}

		public void Write636_ItemDescription(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("ItemDescription", "");
			}
			else
			{
				Write332_ItemDescription("ItemDescription", "", (ItemDescription)o, needType: false);
			}
		}

		public void Write637_ObjectFactory(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ObjectFactory", "");
				return;
			}
			TopLevelElement();
			Write333_ObjectFactory("ObjectFactory", "", (ObjectFactory)o, isNullable: true, needType: false);
		}

		public void Write638_Ring(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Ring", "");
				return;
			}
			TopLevelElement();
			Write60_Ring("Ring", "", (Ring)o, isNullable: true, needType: false);
		}

		public void Write639_CombinedRing(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CombinedRing", "");
				return;
			}
			TopLevelElement();
			Write61_CombinedRing("CombinedRing", "", (CombinedRing)o, isNullable: true, needType: false);
		}

		public void Write640_SwitchFloor(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SwitchFloor", "");
				return;
			}
			TopLevelElement();
			Write124_SwitchFloor("SwitchFloor", "", (SwitchFloor)o, isNullable: true, needType: false);
		}

		public void Write641_IncomingMessage(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IncomingMessage", "");
				return;
			}
			TopLevelElement();
			Write334_IncomingMessage("IncomingMessage", "", (IncomingMessage)o, isNullable: true, needType: false);
		}

		public void Write642_SoundContext(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("SoundContext", "");
			}
			else
			{
				WriteElementString("SoundContext", "", Write335_SoundContext((NetAudio.SoundContext)o));
			}
		}

		public void Write643_ArrayOfInt(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfInt", "");
				return;
			}
			TopLevelElement();
			NetDirection netDirection = (NetDirection)o;
			if ((object)netDirection == null)
			{
				WriteNullTagLiteral("ArrayOfInt", "");
				return;
			}
			WriteStartElement("ArrayOfInt", "", null, writePrefixed: false);
			IEnumerator enumerator = netDirection.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					int num = (int)enumerator.Current;
					WriteElementStringRaw("int", "", XmlConvert.ToString(num));
				}
			}
			WriteEndElement();
		}

		public void Write644_NetLocationRef(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetLocationRef", "");
				return;
			}
			TopLevelElement();
			Write336_NetLocationRef("NetLocationRef", "", (NetLocationRef)o, isNullable: true, needType: false);
		}

		public void Write645_NetPosition(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetPosition", "");
				return;
			}
			TopLevelElement();
			Write261_NetPosition("NetPosition", "", (NetPosition)o, isNullable: true, needType: false);
		}

		public void Write646_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfInt32ArrayOfBoolean", "");
				return;
			}
			TopLevelElement();
			NetBundles netBundles = (NetBundles)o;
			if (netBundles == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfInt32ArrayOfBoolean", "");
				return;
			}
			WriteStartElement("ArrayOfSerializableDictionaryOfInt32ArrayOfBoolean", "", null, writePrefixed: false);
			IEnumerator enumerator = netBundles.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					SerializableDictionary<int, bool[]> serializable = (SerializableDictionary<int, bool[]>)enumerator.Current;
					WriteSerializable(serializable, "SerializableDictionaryOfInt32ArrayOfBoolean", "", isNullable: true, wrapped: true);
				}
			}
			WriteEndElement();
		}

		public void Write647_ArrayOfFarmer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfFarmer", "");
				return;
			}
			TopLevelElement();
			NetFarmerCollection netFarmerCollection = (NetFarmerCollection)o;
			if (netFarmerCollection == null)
			{
				WriteNullTagLiteral("ArrayOfFarmer", "");
				return;
			}
			WriteStartElement("ArrayOfFarmer", "", null, writePrefixed: false);
			IEnumerator enumerator = netFarmerCollection.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					Farmer o2 = (Farmer)enumerator.Current;
					Write183_Farmer("Farmer", "", o2, isNullable: true, needType: false);
				}
			}
			WriteEndElement();
		}

		public void Write648_NetMutex(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetMutex", "");
				return;
			}
			TopLevelElement();
			Write337_NetMutex("NetMutex", "", (NetMutex)o, isNullable: true, needType: false);
		}

		public void Write649_NetWitnessedLock(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetWitnessedLock", "");
				return;
			}
			TopLevelElement();
			Write338_NetWitnessedLock("NetWitnessedLock", "", (NetWitnessedLock)o, isNullable: true, needType: false);
		}

		public void Write650_ArrayOfFarmer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfFarmer", "");
				return;
			}
			TopLevelElement();
			NetFarmerCollection netFarmerCollection = (NetFarmerCollection)o;
			if (netFarmerCollection == null)
			{
				WriteNullTagLiteral("ArrayOfFarmer", "");
				return;
			}
			WriteStartElement("ArrayOfFarmer", "", null, writePrefixed: false);
			IEnumerator enumerator = netFarmerCollection.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					Farmer o2 = (Farmer)enumerator.Current;
					Write183_Farmer("Farmer", "", o2, isNullable: true, needType: false);
				}
			}
			WriteEndElement();
		}

		public void Write651_NetNPCRef(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetNPCRef", "");
				return;
			}
			TopLevelElement();
			Write339_NetNPCRef("NetNPCRef", "", (NetNPCRef)o, isNullable: true, needType: false);
		}

		public void Write652_NetCharacterRef(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetCharacterRef", "");
				return;
			}
			TopLevelElement();
			Write340_NetCharacterRef("NetCharacterRef", "", (NetCharacterRef)o, isNullable: true, needType: false);
		}

		public void Write653_NetDancePartner(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetDancePartner", "");
				return;
			}
			TopLevelElement();
			Write341_NetDancePartner("NetDancePartner", "", (NetDancePartner)o, isNullable: true, needType: false);
		}

		public void Write654_Item(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfVector2Object", "");
				return;
			}
			TopLevelElement();
			OverlaidDictionary overlaidDictionary = (OverlaidDictionary)o;
			if (overlaidDictionary == null)
			{
				WriteNullTagLiteral("ArrayOfSerializableDictionaryOfVector2Object", "");
				return;
			}
			WriteStartElement("ArrayOfSerializableDictionaryOfVector2Object", "", null, writePrefixed: false);
			IEnumerator enumerator = overlaidDictionary.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator.Current;
					WriteSerializable(serializable, "SerializableDictionaryOfVector2Object", "", isNullable: true, wrapped: true);
				}
			}
			WriteEndElement();
		}

		public void Write655_AngryRoger(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AngryRoger", "");
				return;
			}
			TopLevelElement();
			Write342_AngryRoger("AngryRoger", "", (AngryRoger)o, isNullable: true, needType: false);
		}

		public void Write656_HotHead(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("HotHead", "");
				return;
			}
			TopLevelElement();
			Write344_HotHead("HotHead", "", (HotHead)o, isNullable: true, needType: false);
		}

		public void Write657_LavaLurk(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LavaLurk", "");
				return;
			}
			TopLevelElement();
			Write345_LavaLurk("LavaLurk", "", (LavaLurk)o, isNullable: true, needType: false);
		}

		public void Write658_LavaLurkState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("LavaLurk.State", "");
			}
			else
			{
				WriteElementString("LavaLurk.State", "", Write346_State((LavaLurk.State)o));
			}
		}

		public void Write659_Leaper(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Leaper", "");
				return;
			}
			TopLevelElement();
			Write347_Leaper("Leaper", "", (Leaper)o, isNullable: true, needType: false);
		}

		public void Write660_Shooter(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Shooter", "");
				return;
			}
			TopLevelElement();
			Write348_Shooter("Shooter", "", (Shooter)o, isNullable: true, needType: false);
		}

		public void Write661_Spiker(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Spiker", "");
				return;
			}
			TopLevelElement();
			Write349_Spiker("Spiker", "", (Spiker)o, isNullable: true, needType: false);
		}

		public void Write662_DwarvishSentry(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DwarvishSentry", "");
				return;
			}
			TopLevelElement();
			Write350_DwarvishSentry("DwarvishSentry", "", (DwarvishSentry)o, isNullable: true, needType: false);
		}

		public void Write663_BlueSquid(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BlueSquid", "");
				return;
			}
			TopLevelElement();
			Write351_BlueSquid("BlueSquid", "", (BlueSquid)o, isNullable: true, needType: false);
		}

		public void Write664_DinoMonster(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DinoMonster", "");
				return;
			}
			TopLevelElement();
			Write352_DinoMonster("DinoMonster", "", (DinoMonster)o, isNullable: true, needType: false);
		}

		public void Write665_AttackState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("AttackState", "");
			}
			else
			{
				WriteElementString("AttackState", "", Write353_AttackState((DinoMonster.AttackState)o));
			}
		}

		public void Write666_Bug(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Bug", "");
				return;
			}
			TopLevelElement();
			Write354_Bug("Bug", "", (Bug)o, isNullable: true, needType: false);
		}

		public void Write667_BigSlime(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BigSlime", "");
				return;
			}
			TopLevelElement();
			Write355_BigSlime("BigSlime", "", (BigSlime)o, isNullable: true, needType: false);
		}

		public void Write668_Mummy(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Mummy", "");
				return;
			}
			TopLevelElement();
			Write356_Mummy("Mummy", "", (Mummy)o, isNullable: true, needType: false);
		}

		public void Write669_Serpent(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Serpent", "");
				return;
			}
			TopLevelElement();
			Write358_Serpent("Serpent", "", (Serpent)o, isNullable: true, needType: false);
		}

		public void Write670_MetalHead(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MetalHead", "");
				return;
			}
			TopLevelElement();
			Write343_MetalHead("MetalHead", "", (MetalHead)o, isNullable: true, needType: false);
		}

		public void Write671_ShadowBrute(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShadowBrute", "");
				return;
			}
			TopLevelElement();
			Write359_ShadowBrute("ShadowBrute", "", (ShadowBrute)o, isNullable: true, needType: false);
		}

		public void Write672_ShadowShaman(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShadowShaman", "");
				return;
			}
			TopLevelElement();
			Write360_ShadowShaman("ShadowShaman", "", (ShadowShaman)o, isNullable: true, needType: false);
		}

		public void Write673_Skeleton(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Skeleton", "");
				return;
			}
			TopLevelElement();
			Write361_Skeleton("Skeleton", "", (Skeleton)o, isNullable: true, needType: false);
		}

		public void Write674_DustSpirit(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DustSpirit", "");
				return;
			}
			TopLevelElement();
			Write362_DustSpirit("DustSpirit", "", (DustSpirit)o, isNullable: true, needType: false);
		}

		public void Write675_Bat(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Bat", "");
				return;
			}
			TopLevelElement();
			Write363_Bat("Bat", "", (Bat)o, isNullable: true, needType: false);
		}

		public void Write676_Fly(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Fly", "");
				return;
			}
			TopLevelElement();
			Write364_Fly("Fly", "", (Fly)o, isNullable: true, needType: false);
		}

		public void Write677_Grub(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Grub", "");
				return;
			}
			TopLevelElement();
			Write365_Grub("Grub", "", (Grub)o, isNullable: true, needType: false);
		}

		public void Write678_RockGolem(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("RockGolem", "");
				return;
			}
			TopLevelElement();
			Write366_RockGolem("RockGolem", "", (RockGolem)o, isNullable: true, needType: false);
		}

		public void Write679_ShadowGirl(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShadowGirl", "");
				return;
			}
			TopLevelElement();
			Write367_ShadowGirl("ShadowGirl", "", (ShadowGirl)o, isNullable: true, needType: false);
		}

		public void Write680_SquidKid(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SquidKid", "");
				return;
			}
			TopLevelElement();
			Write368_SquidKid("SquidKid", "", (SquidKid)o, isNullable: true, needType: false);
		}

		public void Write681_LavaCrab(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LavaCrab", "");
				return;
			}
			TopLevelElement();
			Write369_LavaCrab("LavaCrab", "", (LavaCrab)o, isNullable: true, needType: false);
		}

		public void Write682_RockCrab(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("RockCrab", "");
				return;
			}
			TopLevelElement();
			Write370_RockCrab("RockCrab", "", (RockCrab)o, isNullable: true, needType: false);
		}

		public void Write683_Duggy(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Duggy", "");
				return;
			}
			TopLevelElement();
			Write371_Duggy("Duggy", "", (Duggy)o, isNullable: true, needType: false);
		}

		public void Write684_Ghost(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Ghost", "");
				return;
			}
			TopLevelElement();
			Write372_Ghost("Ghost", "", (Ghost)o, isNullable: true, needType: false);
		}

		public void Write685_GhostVariant(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("GhostVariant", "");
			}
			else
			{
				WriteElementString("GhostVariant", "", Write373_GhostVariant((Ghost.GhostVariant)o));
			}
		}

		public void Write686_ShadowGuy(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShadowGuy", "");
				return;
			}
			TopLevelElement();
			Write374_ShadowGuy("ShadowGuy", "", (ShadowGuy)o, isNullable: true, needType: false);
		}

		public void Write687_GreenSlime(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GreenSlime", "");
				return;
			}
			TopLevelElement();
			Write375_GreenSlime("GreenSlime", "", (GreenSlime)o, isNullable: true, needType: false);
		}

		public void Write688_Monster(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Monster", "");
				return;
			}
			TopLevelElement();
			Write169_Monster("Monster", "", (Monster)o, isNullable: true, needType: false);
		}

		public void Write689_NetLeaderboards(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetLeaderboards", "");
				return;
			}
			TopLevelElement();
			Write303_NetLeaderboards("NetLeaderboards", "", (NetLeaderboards)o, isNullable: true, needType: false);
		}

		public void Write690_NetLeaderboardsEntry(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("NetLeaderboardsEntry", "");
				return;
			}
			TopLevelElement();
			Write302_NetLeaderboardsEntry("NetLeaderboardsEntry", "", (NetLeaderboardsEntry)o, isNullable: true, needType: false);
		}

		public void Write691_GameKeys(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("GameKeys", "");
			}
			else
			{
				WriteElementString("GameKeys", "", Write376_GameKeys((AbigailGame.GameKeys)o));
			}
		}

		public void Write692_JOTPKProgress(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("JOTPKProgress", "");
				return;
			}
			TopLevelElement();
			Write182_JOTPKProgress("JOTPKProgress", "", (AbigailGame.JOTPKProgress)o, isNullable: true, needType: false);
		}

		public void Write693_Dracula(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Dracula", "");
				return;
			}
			TopLevelElement();
			Write378_Dracula("Dracula", "", (AbigailGame.Dracula)o, isNullable: true, needType: false);
		}

		public void Write694_AbandonedJojaMart(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AbandonedJojaMart", "");
				return;
			}
			TopLevelElement();
			Write236_AbandonedJojaMart("AbandonedJojaMart", "", (AbandonedJojaMart)o, isNullable: true, needType: false);
		}

		public void Write695_BoatTunnel(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BoatTunnel", "");
				return;
			}
			TopLevelElement();
			Write239_BoatTunnel("BoatTunnel", "", (BoatTunnel)o, isNullable: true, needType: false);
		}

		public void Write696_TunnelAnimationState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("TunnelAnimationState", "");
			}
			else
			{
				WriteElementString("TunnelAnimationState", "", Write238_TunnelAnimationState((BoatTunnel.TunnelAnimationState)o));
			}
		}

		public void Write697_BugLand(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BugLand", "");
				return;
			}
			TopLevelElement();
			Write257_BugLand("BugLand", "", (BugLand)o, isNullable: true, needType: false);
		}

		public void Write698_Caldera(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Caldera", "");
				return;
			}
			TopLevelElement();
			Write256_Caldera("Caldera", "", (Caldera)o, isNullable: true, needType: false);
		}

		public void Write699_FishShop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishShop", "");
				return;
			}
			TopLevelElement();
			Write214_FishShop("FishShop", "", (FishShop)o, isNullable: true, needType: false);
		}

		public void Write700_IslandEast(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandEast", "");
				return;
			}
			TopLevelElement();
			Write244_IslandEast("IslandEast", "", (IslandEast)o, isNullable: true, needType: false);
		}

		public void Write701_IslandFarmCave(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandFarmCave", "");
				return;
			}
			TopLevelElement();
			Write249_IslandFarmCave("IslandFarmCave", "", (IslandFarmCave)o, isNullable: true, needType: false);
		}

		public void Write702_IslandFarmHouse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandFarmHouse", "");
				return;
			}
			TopLevelElement();
			Write253_IslandFarmHouse("IslandFarmHouse", "", (IslandFarmHouse)o, isNullable: true, needType: false);
		}

		public void Write703_IslandFieldOffice(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandFieldOffice", "");
				return;
			}
			TopLevelElement();
			Write251_IslandFieldOffice("IslandFieldOffice", "", (IslandFieldOffice)o, isNullable: true, needType: false);
		}

		public void Write704_IslandForestLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandForestLocation", "");
				return;
			}
			TopLevelElement();
			Write243_IslandForestLocation("IslandForestLocation", "", (IslandForestLocation)o, isNullable: true, needType: false);
		}

		public void Write705_IslandHut(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandHut", "");
				return;
			}
			TopLevelElement();
			Write252_IslandHut("IslandHut", "", (IslandHut)o, isNullable: true, needType: false);
		}

		public void Write706_IslandLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandLocation", "");
				return;
			}
			TopLevelElement();
			Write240_IslandLocation("IslandLocation", "", (IslandLocation)o, isNullable: true, needType: false);
		}

		public void Write707_IslandNorth(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandNorth", "");
				return;
			}
			TopLevelElement();
			Write246_IslandNorth("IslandNorth", "", (IslandNorth)o, isNullable: true, needType: false);
		}

		public void Write708_IslandSecret(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandSecret", "");
				return;
			}
			TopLevelElement();
			Write254_IslandSecret("IslandSecret", "", (IslandSecret)o, isNullable: true, needType: false);
		}

		public void Write709_IslandShrine(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandShrine", "");
				return;
			}
			TopLevelElement();
			Write255_IslandShrine("IslandShrine", "", (IslandShrine)o, isNullable: true, needType: false);
		}

		public void Write710_IslandSouth(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandSouth", "");
				return;
			}
			TopLevelElement();
			Write245_IslandSouth("IslandSouth", "", (IslandSouth)o, isNullable: true, needType: false);
		}

		public void Write711_IslandSouthEast(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandSouthEast", "");
				return;
			}
			TopLevelElement();
			Write247_IslandSouthEast("IslandSouthEast", "", (IslandSouthEast)o, isNullable: true, needType: false);
		}

		public void Write712_IslandSouthEastCave(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandSouthEastCave", "");
				return;
			}
			TopLevelElement();
			Write248_IslandSouthEastCave("IslandSouthEastCave", "", (IslandSouthEastCave)o, isNullable: true, needType: false);
		}

		public void Write713_IslandWest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandWest", "");
				return;
			}
			TopLevelElement();
			Write242_IslandWest("IslandWest", "", (IslandWest)o, isNullable: true, needType: false);
		}

		public void Write714_IslandWestCave1(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("IslandWestCave1", "");
				return;
			}
			TopLevelElement();
			Write250_IslandWestCave1("IslandWestCave1", "", (IslandWestCave1)o, isNullable: true, needType: false);
		}

		public void Write715_CaveCrystal(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CaveCrystal", "");
				return;
			}
			TopLevelElement();
			Write379_CaveCrystal("CaveCrystal", "", (IslandWestCave1.CaveCrystal)o, isNullable: true, needType: false);
		}

		public void Write716_Mine(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Mine", "");
				return;
			}
			TopLevelElement();
			Write237_Mine("Mine", "", (Mine)o, isNullable: true, needType: false);
		}

		public void Write717_ShopLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShopLocation", "");
				return;
			}
			TopLevelElement();
			Write212_ShopLocation("ShopLocation", "", (ShopLocation)o, isNullable: true, needType: false);
		}

		public void Write718_TileNeighbors(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("TileNeighbors", "");
			}
			else
			{
				WriteElementString("TileNeighbors", "", Write380_TileNeighbors((VolcanoDungeon.TileNeighbors)o));
			}
		}

		public void Write719_BeachNightMarket(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BeachNightMarket", "");
				return;
			}
			TopLevelElement();
			Write233_BeachNightMarket("BeachNightMarket", "", (BeachNightMarket)o, isNullable: true, needType: false);
		}

		public void Write720_ManorHouse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ManorHouse", "");
				return;
			}
			TopLevelElement();
			Write235_ManorHouse("ManorHouse", "", (ManorHouse)o, isNullable: true, needType: false);
		}

		public void Write721_MermaidHouse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MermaidHouse", "");
				return;
			}
			TopLevelElement();
			Write232_MermaidHouse("MermaidHouse", "", (MermaidHouse)o, isNullable: true, needType: false);
		}

		public void Write722_MovieTheater(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MovieTheater", "");
				return;
			}
			TopLevelElement();
			Write234_MovieTheater("MovieTheater", "", (MovieTheater)o, isNullable: true, needType: false);
		}

		public void Write723_MovieStates(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("MovieStates", "");
			}
			else
			{
				WriteElementString("MovieStates", "", Write381_MovieStates((MovieTheater.MovieStates)o));
			}
		}

		public void Write724_Submarine(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Submarine", "");
				return;
			}
			TopLevelElement();
			Write231_Submarine("Submarine", "", (Submarine)o, isNullable: true, needType: false);
		}

		public void Write725_AdventureGuild(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("AdventureGuild", "");
				return;
			}
			TopLevelElement();
			Write207_AdventureGuild("AdventureGuild", "", (AdventureGuild)o, isNullable: true, needType: false);
		}

		public void Write726_Bus(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Bus", "");
				return;
			}
			TopLevelElement();
			Write382_Bus("Bus", "", (Bus)o, isNullable: true, needType: false);
		}

		public void Write727_BuildableGameLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BuildableGameLocation", "");
				return;
			}
			TopLevelElement();
			Write200_BuildableGameLocation("BuildableGameLocation", "", (BuildableGameLocation)o, isNullable: true, needType: false);
		}

		public void Write728_BathHousePool(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BathHousePool", "");
				return;
			}
			TopLevelElement();
			Write215_BathHousePool("BathHousePool", "", (BathHousePool)o, isNullable: true, needType: false);
		}

		public void Write729_Club(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Club", "");
				return;
			}
			TopLevelElement();
			Write219_Club("Club", "", (Club)o, isNullable: true, needType: false);
		}

		public void Write730_Cellar(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Cellar", "");
				return;
			}
			TopLevelElement();
			Write230_Cellar("Cellar", "", (Cellar)o, isNullable: true, needType: false);
		}

		public void Write731_ArrayOfInt(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ArrayOfInt", "");
				return;
			}
			TopLevelElement();
			NetDirection netDirection = (NetDirection)o;
			if ((object)netDirection == null)
			{
				WriteNullTagLiteral("ArrayOfInt", "");
				return;
			}
			WriteStartElement("ArrayOfInt", "", null, writePrefixed: false);
			IEnumerator enumerator = netDirection.GetEnumerator();
			if (enumerator != null)
			{
				while (enumerator.MoveNext())
				{
					int num = (int)enumerator.Current;
					WriteElementStringRaw("int", "", XmlConvert.ToString(num));
				}
			}
			WriteEndElement();
		}

		public void Write732_DecoratableLocation(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("DecoratableLocation", "");
				return;
			}
			TopLevelElement();
			Write204_DecoratableLocation("DecoratableLocation", "", (DecoratableLocation)o, isNullable: true, needType: false);
		}

		public void Write733_Cabin(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Cabin", "");
				return;
			}
			TopLevelElement();
			Write218_Cabin("Cabin", "", (Cabin)o, isNullable: true, needType: false);
		}

		public void Write734_FarmCave(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FarmCave", "");
				return;
			}
			TopLevelElement();
			Write223_FarmCave("FarmCave", "", (FarmCave)o, isNullable: true, needType: false);
		}

		public void Write735_WizardHouse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("WizardHouse", "");
				return;
			}
			TopLevelElement();
			Write228_WizardHouse("WizardHouse", "", (WizardHouse)o, isNullable: true, needType: false);
		}

		public void Write736_Sewer(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Sewer", "");
				return;
			}
			TopLevelElement();
			Write227_Sewer("Sewer", "", (Sewer)o, isNullable: true, needType: false);
		}

		public void Write737_CommunityCenter(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("CommunityCenter", "");
				return;
			}
			TopLevelElement();
			Write221_CommunityCenter("CommunityCenter", "", (CommunityCenter)o, isNullable: true, needType: false);
		}

		public void Write738_BusStop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BusStop", "");
				return;
			}
			TopLevelElement();
			Write220_BusStop("BusStop", "", (BusStop)o, isNullable: true, needType: false);
		}

		public void Write739_MineShaft(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MineShaft", "");
				return;
			}
			TopLevelElement();
			Write225_MineShaft("MineShaft", "", (MineShaft)o, isNullable: true, needType: false);
		}

		public void Write740_MineInfo(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("MineInfo", "");
				return;
			}
			TopLevelElement();
			Write383_MineInfo("MineInfo", "", (MineInfo)o, isNullable: true, needType: false);
		}

		public void Write741_FarmHouse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FarmHouse", "");
				return;
			}
			TopLevelElement();
			Write217_FarmHouse("FarmHouse", "", (FarmHouse)o, isNullable: true, needType: false);
		}

		public void Write742_JojaMart(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("JojaMart", "");
				return;
			}
			TopLevelElement();
			Write224_JojaMart("JojaMart", "", (JojaMart)o, isNullable: true, needType: false);
		}

		public void Write743_Desert(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Desert", "");
				return;
			}
			TopLevelElement();
			Write222_Desert("Desert", "", (Desert)o, isNullable: true, needType: false);
		}

		public void Write744_Town(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Town", "");
				return;
			}
			TopLevelElement();
			Write229_Town("Town", "", (Town)o, isNullable: true, needType: false);
		}

		public void Write745_Mountain(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Mountain", "");
				return;
			}
			TopLevelElement();
			Write226_Mountain("Mountain", "", (Mountain)o, isNullable: true, needType: false);
		}

		public void Write746_Forest(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Forest", "");
				return;
			}
			TopLevelElement();
			Write211_Forest("Forest", "", (Forest)o, isNullable: true, needType: false);
		}

		public void Write747_LibraryMuseum(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("LibraryMuseum", "");
				return;
			}
			TopLevelElement();
			Write206_LibraryMuseum("LibraryMuseum", "", (LibraryMuseum)o, isNullable: true, needType: false);
		}

		public void Write748_Railroad(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Railroad", "");
				return;
			}
			TopLevelElement();
			Write209_Railroad("Railroad", "", (Railroad)o, isNullable: true, needType: false);
		}

		public void Write749_SeedShop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SeedShop", "");
				return;
			}
			TopLevelElement();
			Write213_SeedShop("SeedShop", "", (SeedShop)o, isNullable: true, needType: false);
		}

		public void Write750_Summit(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Summit", "");
				return;
			}
			TopLevelElement();
			Write210_Summit("Summit", "", (Summit)o, isNullable: true, needType: false);
		}

		public void Write751_Woods(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Woods", "");
				return;
			}
			TopLevelElement();
			Write208_Woods("Woods", "", (Woods)o, isNullable: true, needType: false);
		}

		public void Write752_Beach(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Beach", "");
				return;
			}
			TopLevelElement();
			Write202_Beach("Beach", "", (Beach)o, isNullable: true, needType: false);
		}

		public void Write753_TrashBear(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("TrashBear", "");
				return;
			}
			TopLevelElement();
			Write384_TrashBear("TrashBear", "", (TrashBear)o, isNullable: true, needType: false);
		}

		public void Write754_Cat(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Cat", "");
				return;
			}
			TopLevelElement();
			Write386_Cat("Cat", "", (Cat)o, isNullable: true, needType: false);
		}

		public void Write755_Child(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Child", "");
				return;
			}
			TopLevelElement();
			Write387_Child("Child", "", (Child)o, isNullable: true, needType: false);
		}

		public void Write756_BotchedNetInt(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BotchedNetInt", "");
				return;
			}
			TopLevelElement();
			WriteSerializable((BotchedNetInt)o, "BotchedNetInt", "", isNullable: true, wrapped: true);
		}

		public void Write757_BotchedNetBool(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BotchedNetBool", "");
				return;
			}
			TopLevelElement();
			WriteSerializable((BotchedNetBool)o, "BotchedNetBool", "", isNullable: true, wrapped: true);
		}

		public void Write758_BotchedNetLong(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("BotchedNetLong", "");
				return;
			}
			TopLevelElement();
			WriteSerializable((BotchedNetLong)o, "BotchedNetLong", "", isNullable: true, wrapped: true);
		}

		public void Write759_Dog(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Dog", "");
				return;
			}
			TopLevelElement();
			Write388_Dog("Dog", "", (Dog)o, isNullable: true, needType: false);
		}

		public void Write760_Horse(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Horse", "");
				return;
			}
			TopLevelElement();
			Write389_Horse("Horse", "", (Horse)o, isNullable: true, needType: false);
		}

		public void Write761_Junimo(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Junimo", "");
				return;
			}
			TopLevelElement();
			Write390_Junimo("Junimo", "", (Junimo)o, isNullable: true, needType: false);
		}

		public void Write762_JunimoHarvester(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("JunimoHarvester", "");
				return;
			}
			TopLevelElement();
			Write391_JunimoHarvester("JunimoHarvester", "", (JunimoHarvester)o, isNullable: true, needType: false);
		}

		public void Write763_Pet(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Pet", "");
				return;
			}
			TopLevelElement();
			Write385_Pet("Pet", "", (Pet)o, isNullable: true, needType: false);
		}

		public void Write764_FishPond(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("FishPond", "");
				return;
			}
			TopLevelElement();
			Write198_FishPond("FishPond", "", (FishPond)o, isNullable: true, needType: false);
		}

		public void Write765_GreenhouseBuilding(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("GreenhouseBuilding", "");
				return;
			}
			TopLevelElement();
			Write197_GreenhouseBuilding("GreenhouseBuilding", "", (GreenhouseBuilding)o, isNullable: true, needType: false);
		}

		public void Write766_JunimoHut(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("JunimoHut", "");
				return;
			}
			TopLevelElement();
			Write195_JunimoHut("JunimoHut", "", (JunimoHut)o, isNullable: true, needType: false);
		}

		public void Write767_Mill(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Mill", "");
				return;
			}
			TopLevelElement();
			Write194_Mill("Mill", "", (Mill)o, isNullable: true, needType: false);
		}

		public void Write768_ShippingBin(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("ShippingBin", "");
				return;
			}
			TopLevelElement();
			Write196_ShippingBin("ShippingBin", "", (ShippingBin)o, isNullable: true, needType: false);
		}

		public void Write769_Stable(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Stable", "");
				return;
			}
			TopLevelElement();
			Write193_Stable("Stable", "", (Stable)o, isNullable: true, needType: false);
		}

		public void Write770_Building(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Building", "");
				return;
			}
			TopLevelElement();
			Write199_Building("Building", "", (Building)o, isNullable: true, needType: false);
		}

		public void Write771_Coop(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Coop", "");
				return;
			}
			TopLevelElement();
			Write191_Coop("Coop", "", (Coop)o, isNullable: true, needType: false);
		}

		public void Write772_Barn(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("Barn", "");
				return;
			}
			TopLevelElement();
			Write192_Barn("Barn", "", (Barn)o, isNullable: true, needType: false);
		}

		public void Write773_SandDuggy(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteNullTagLiteral("SandDuggy", "");
				return;
			}
			TopLevelElement();
			Write241_SandDuggy("SandDuggy", "", (SandDuggy)o, isNullable: true, needType: false);
		}

		public void Write774_SandDuggyState(object o)
		{
			WriteStartDocument();
			if (o == null)
			{
				WriteEmptyTag("SandDuggy.State", "");
			}
			else
			{
				WriteElementString("SandDuggy.State", "", Write392_State((SandDuggy.State)o));
			}
		}

		private string Write392_State(SandDuggy.State v)
		{
			string text = null;
			return v switch
			{
				SandDuggy.State.DigUp => "DigUp", 
				SandDuggy.State.Idle => "Idle", 
				SandDuggy.State.DigDown => "DigDown", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.BellsAndWhistles.SandDuggy.State"), 
			};
		}

		private void Write241_SandDuggy(string n, string ns, SandDuggy o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SandDuggy)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SandDuggy", "");
			}
			NetBool whacked = o.whacked;
			if (whacked != null)
			{
				IEnumerator enumerator = whacked.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						bool flag = (bool)enumerator.Current;
						WriteElementStringRaw("whacked", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write192_Barn(string n, string ns, Barn o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Barn)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Barn", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			WriteEndElement(o);
		}

		private void Write34_Color(string n, string ns, Color o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Color)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Color", "");
			}
			WriteElementStringRaw("R", "", XmlConvert.ToString(o.R));
			WriteElementStringRaw("G", "", XmlConvert.ToString(o.G));
			WriteElementStringRaw("B", "", XmlConvert.ToString(o.B));
			WriteElementStringRaw("A", "", XmlConvert.ToString(o.A));
			WriteElementStringRaw("PackedValue", "", XmlConvert.ToString(o.PackedValue));
			WriteEndElement(o);
		}

		private void Write42_Point(string n, string ns, Point o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Point)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Point", "");
			}
			WriteElementStringRaw("X", "", XmlConvert.ToString(o.X));
			WriteElementStringRaw("Y", "", XmlConvert.ToString(o.Y));
			WriteEndElement(o);
		}

		private void Write30_BuildingPaintColor(string n, string ns, BuildingPaintColor o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BuildingPaintColor)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BuildingPaintColor", "");
			}
			NetString colorName = o.ColorName;
			if (colorName != null)
			{
				WriteStartElement("ColorName", "", null, writePrefixed: false);
				IEnumerator enumerator = colorName.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteNullableStringLiteral("string", "", value);
					}
				}
				WriteEndElement();
			}
			NetBool color1Default = o.Color1Default;
			if (color1Default != null)
			{
				WriteStartElement("Color1Default", "", null, writePrefixed: false);
				IEnumerator enumerator2 = color1Default.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			NetInt color1Hue = o.Color1Hue;
			if (color1Hue != null)
			{
				WriteStartElement("Color1Hue", "", null, writePrefixed: false);
				IEnumerator enumerator3 = color1Hue.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num = (int)enumerator3.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetInt color1Saturation = o.Color1Saturation;
			if (color1Saturation != null)
			{
				WriteStartElement("Color1Saturation", "", null, writePrefixed: false);
				IEnumerator enumerator4 = color1Saturation.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num2 = (int)enumerator4.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetInt color1Lightness = o.Color1Lightness;
			if (color1Lightness != null)
			{
				WriteStartElement("Color1Lightness", "", null, writePrefixed: false);
				IEnumerator enumerator5 = color1Lightness.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num3 = (int)enumerator5.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetBool color2Default = o.Color2Default;
			if (color2Default != null)
			{
				WriteStartElement("Color2Default", "", null, writePrefixed: false);
				IEnumerator enumerator6 = color2Default.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag2 = (bool)enumerator6.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			NetInt color2Hue = o.Color2Hue;
			if (color2Hue != null)
			{
				WriteStartElement("Color2Hue", "", null, writePrefixed: false);
				IEnumerator enumerator7 = color2Hue.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			NetInt color2Saturation = o.Color2Saturation;
			if (color2Saturation != null)
			{
				WriteStartElement("Color2Saturation", "", null, writePrefixed: false);
				IEnumerator enumerator8 = color2Saturation.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num5));
					}
				}
				WriteEndElement();
			}
			NetInt color2Lightness = o.Color2Lightness;
			if (color2Lightness != null)
			{
				WriteStartElement("Color2Lightness", "", null, writePrefixed: false);
				IEnumerator enumerator9 = color2Lightness.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num6 = (int)enumerator9.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			NetBool color3Default = o.Color3Default;
			if (color3Default != null)
			{
				WriteStartElement("Color3Default", "", null, writePrefixed: false);
				IEnumerator enumerator10 = color3Default.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag3));
					}
				}
				WriteEndElement();
			}
			NetInt color3Hue = o.Color3Hue;
			if (color3Hue != null)
			{
				WriteStartElement("Color3Hue", "", null, writePrefixed: false);
				IEnumerator enumerator11 = color3Hue.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num7 = (int)enumerator11.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num7));
					}
				}
				WriteEndElement();
			}
			NetInt color3Saturation = o.Color3Saturation;
			if (color3Saturation != null)
			{
				WriteStartElement("Color3Saturation", "", null, writePrefixed: false);
				IEnumerator enumerator12 = color3Saturation.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num8 = (int)enumerator12.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num8));
					}
				}
				WriteEndElement();
			}
			NetInt color3Lightness = o.Color3Lightness;
			if (color3Lightness != null)
			{
				WriteStartElement("Color3Lightness", "", null, writePrefixed: false);
				IEnumerator enumerator13 = color3Lightness.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num9 = (int)enumerator13.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num9));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write258_GameLocation(string n, string ns, GameLocation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GameLocation)))
				{
					if (type == typeof(Bus))
					{
						Write382_Bus(n, ns, (Bus)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AnimalHouse))
					{
						Write259_AnimalHouse(n, ns, (AnimalHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BugLand))
					{
						Write257_BugLand(n, ns, (BugLand)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandLocation))
					{
						Write240_IslandLocation(n, ns, (IslandLocation)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Caldera))
					{
						Write256_Caldera(n, ns, (Caldera)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSecret))
					{
						Write254_IslandSecret(n, ns, (IslandSecret)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandHut))
					{
						Write252_IslandHut(n, ns, (IslandHut)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandFieldOffice))
					{
						Write251_IslandFieldOffice(n, ns, (IslandFieldOffice)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandWestCave1))
					{
						Write250_IslandWestCave1(n, ns, (IslandWestCave1)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandFarmCave))
					{
						Write249_IslandFarmCave(n, ns, (IslandFarmCave)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSouthEastCave))
					{
						Write248_IslandSouthEastCave(n, ns, (IslandSouthEastCave)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSouthEast))
					{
						Write247_IslandSouthEast(n, ns, (IslandSouthEast)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandNorth))
					{
						Write246_IslandNorth(n, ns, (IslandNorth)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSouth))
					{
						Write245_IslandSouth(n, ns, (IslandSouth)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandForestLocation))
					{
						Write243_IslandForestLocation(n, ns, (IslandForestLocation)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandShrine))
					{
						Write255_IslandShrine(n, ns, (IslandShrine)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandEast))
					{
						Write244_IslandEast(n, ns, (IslandEast)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandWest))
					{
						Write242_IslandWest(n, ns, (IslandWest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BoatTunnel))
					{
						Write239_BoatTunnel(n, ns, (BoatTunnel)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Mine))
					{
						Write237_Mine(n, ns, (Mine)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AbandonedJojaMart))
					{
						Write236_AbandonedJojaMart(n, ns, (AbandonedJojaMart)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ManorHouse))
					{
						Write235_ManorHouse(n, ns, (ManorHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MovieTheater))
					{
						Write234_MovieTheater(n, ns, (MovieTheater)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BeachNightMarket))
					{
						Write233_BeachNightMarket(n, ns, (BeachNightMarket)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MermaidHouse))
					{
						Write232_MermaidHouse(n, ns, (MermaidHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Submarine))
					{
						Write231_Submarine(n, ns, (Submarine)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cellar))
					{
						Write230_Cellar(n, ns, (Cellar)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Town))
					{
						Write229_Town(n, ns, (Town)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(WizardHouse))
					{
						Write228_WizardHouse(n, ns, (WizardHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Sewer))
					{
						Write227_Sewer(n, ns, (Sewer)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Mountain))
					{
						Write226_Mountain(n, ns, (Mountain)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MineShaft))
					{
						Write225_MineShaft(n, ns, (MineShaft)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(JojaMart))
					{
						Write224_JojaMart(n, ns, (JojaMart)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FarmCave))
					{
						Write223_FarmCave(n, ns, (FarmCave)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Desert))
					{
						Write222_Desert(n, ns, (Desert)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CommunityCenter))
					{
						Write221_CommunityCenter(n, ns, (CommunityCenter)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BusStop))
					{
						Write220_BusStop(n, ns, (BusStop)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Club))
					{
						Write219_Club(n, ns, (Club)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BathHousePool))
					{
						Write215_BathHousePool(n, ns, (BathHousePool)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShopLocation))
					{
						Write212_ShopLocation(n, ns, (ShopLocation)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FishShop))
					{
						Write214_FishShop(n, ns, (FishShop)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SeedShop))
					{
						Write213_SeedShop(n, ns, (SeedShop)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Forest))
					{
						Write211_Forest(n, ns, (Forest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Summit))
					{
						Write210_Summit(n, ns, (Summit)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Railroad))
					{
						Write209_Railroad(n, ns, (Railroad)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Woods))
					{
						Write208_Woods(n, ns, (Woods)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AdventureGuild))
					{
						Write207_AdventureGuild(n, ns, (AdventureGuild)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LibraryMuseum))
					{
						Write206_LibraryMuseum(n, ns, (LibraryMuseum)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DecoratableLocation))
					{
						Write204_DecoratableLocation(n, ns, (DecoratableLocation)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandFarmHouse))
					{
						Write253_IslandFarmHouse(n, ns, (IslandFarmHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FarmHouse))
					{
						Write217_FarmHouse(n, ns, (FarmHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cabin))
					{
						Write218_Cabin(n, ns, (Cabin)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Shed))
					{
						Write205_Shed(n, ns, (Shed)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SlimeHutch))
					{
						Write203_SlimeHutch(n, ns, (SlimeHutch)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Beach))
					{
						Write202_Beach(n, ns, (Beach)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BuildableGameLocation))
					{
						Write200_BuildableGameLocation(n, ns, (BuildableGameLocation)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Farm))
					{
						Write201_Farm(n, ns, (Farm)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GameLocation", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write62_Furniture(string n, string ns, Furniture o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Furniture)))
				{
					if (type == typeof(BedFurniture))
					{
						Write121_BedFurniture(n, ns, (BedFurniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(StorageFurniture))
					{
						Write118_StorageFurniture(n, ns, (StorageFurniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FishTankFurniture))
					{
						Write119_FishTankFurniture(n, ns, (FishTankFurniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TV))
					{
						Write63_TV(n, ns, (TV)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Furniture", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt furniture_type = o.furniture_type;
			if (furniture_type != null)
			{
				IEnumerator enumerator38 = furniture_type.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("furniture_type", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt rotations = o.rotations;
			if (rotations != null)
			{
				IEnumerator enumerator39 = rotations.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num14 = (int)enumerator39.Current;
						WriteElementStringRaw("rotations", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt currentRotation = o.currentRotation;
			if (currentRotation != null)
			{
				IEnumerator enumerator40 = currentRotation.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("currentRotation", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetRectangle sourceRect = o.sourceRect;
			if (sourceRect != null)
			{
				IEnumerator enumerator41 = sourceRect.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator41.Current;
						Write51_Rectangle("sourceRect", "", o5, needType: false);
					}
				}
			}
			NetRectangle defaultSourceRect = o.defaultSourceRect;
			if (defaultSourceRect != null)
			{
				IEnumerator enumerator42 = defaultSourceRect.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Rectangle o6 = (Rectangle)enumerator42.Current;
						Write51_Rectangle("defaultSourceRect", "", o6, needType: false);
					}
				}
			}
			NetRectangle defaultBoundingBox = o.defaultBoundingBox;
			if (defaultBoundingBox != null)
			{
				IEnumerator enumerator43 = defaultBoundingBox.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Rectangle o7 = (Rectangle)enumerator43.Current;
						Write51_Rectangle("defaultBoundingBox", "", o7, needType: false);
					}
				}
			}
			NetBool drawHeldObjectLow = o.drawHeldObjectLow;
			if (drawHeldObjectLow != null)
			{
				IEnumerator enumerator44 = drawHeldObjectLow.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag17 = (bool)enumerator44.Current;
						WriteElementStringRaw("drawHeldObjectLow", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write51_Rectangle(string n, string ns, Rectangle o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Rectangle)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Rectangle", "");
			}
			WriteElementStringRaw("X", "", XmlConvert.ToString(o.X));
			WriteElementStringRaw("Y", "", XmlConvert.ToString(o.Y));
			WriteElementStringRaw("Width", "", XmlConvert.ToString(o.Width));
			WriteElementStringRaw("Height", "", XmlConvert.ToString(o.Height));
			Write42_Point("Location", "", o.Location, needType: false);
			WriteEndElement(o);
		}

		private void Write33_Vector2(string n, string ns, Vector2 o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector2)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector2", "");
			}
			WriteElementStringRaw("X", "", XmlConvert.ToString(o.X));
			WriteElementStringRaw("Y", "", XmlConvert.ToString(o.Y));
			WriteEndElement(o);
		}

		private void Write142_Object(string n, string ns, StardewValley.Object o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(StardewValley.Object)))
				{
					if (type == typeof(BreakableContainer))
					{
						Write329_BreakableContainer(n, ns, (BreakableContainer)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Sign))
					{
						Write141_Sign(n, ns, (Sign)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IndoorPot))
					{
						Write140_IndoorPot(n, ns, (IndoorPot)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ColoredObject))
					{
						Write125_ColoredObject(n, ns, (ColoredObject)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SwitchFloor))
					{
						Write124_SwitchFloor(n, ns, (SwitchFloor)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cask))
					{
						Write123_Cask(n, ns, (Cask)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(WoodChipper))
					{
						Write122_WoodChipper(n, ns, (WoodChipper)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Phone))
					{
						Write117_Phone(n, ns, (Phone)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MiniJukebox))
					{
						Write116_MiniJukebox(n, ns, (MiniJukebox)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Workbench))
					{
						Write115_Workbench(n, ns, (Workbench)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Chest))
					{
						Write114_Chest(n, ns, (Chest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CrabPot))
					{
						Write64_CrabPot(n, ns, (CrabPot)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Furniture))
					{
						Write62_Furniture(n, ns, (Furniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BedFurniture))
					{
						Write121_BedFurniture(n, ns, (BedFurniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(StorageFurniture))
					{
						Write118_StorageFurniture(n, ns, (StorageFurniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FishTankFurniture))
					{
						Write119_FishTankFurniture(n, ns, (FishTankFurniture)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TV))
					{
						Write63_TV(n, ns, (TV)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ItemPedestal))
					{
						Write58_ItemPedestal(n, ns, (ItemPedestal)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Wallpaper))
					{
						Write55_Wallpaper(n, ns, (Wallpaper)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Torch))
					{
						Write53_Torch(n, ns, (Torch)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Fence))
					{
						Write52_Fence(n, ns, (Fence)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Object", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			WriteEndElement(o);
		}

		private void Write52_Fence(string n, string ns, Fence o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Fence)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Fence", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetFloat health = o.health;
			if (health != null)
			{
				IEnumerator enumerator38 = health.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						float num13 = (float)enumerator38.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetFloat maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator39 = maxHealth.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						float num14 = (float)enumerator39.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt whichType = o.whichType;
			if (whichType != null)
			{
				IEnumerator enumerator40 = whichType.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("whichType", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt gatePosition = o.gatePosition;
			if (gatePosition != null)
			{
				IEnumerator enumerator41 = gatePosition.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						int num16 = (int)enumerator41.Current;
						WriteElementStringRaw("gatePosition", "", XmlConvert.ToString(num16));
					}
				}
			}
			WriteElementStringRaw("gateMotion", "", XmlConvert.ToString(o.gateMotion));
			NetBool isGate = o.isGate;
			if (isGate != null)
			{
				IEnumerator enumerator42 = isGate.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag17 = (bool)enumerator42.Current;
						WriteElementStringRaw("isGate", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write53_Torch(string n, string ns, Torch o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Torch)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Torch", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			WriteEndElement(o);
		}

		private void Write55_Wallpaper(string n, string ns, Wallpaper o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Wallpaper)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Wallpaper", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetRectangle sourceRect = o.sourceRect;
			if (sourceRect != null)
			{
				IEnumerator enumerator38 = sourceRect.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator38.Current;
						Write51_Rectangle("sourceRect", "", o5, needType: false);
					}
				}
			}
			NetBool isFloor = o.isFloor;
			if (isFloor != null)
			{
				IEnumerator enumerator39 = isFloor.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag17 = (bool)enumerator39.Current;
						WriteElementStringRaw("isFloor", "", XmlConvert.ToString(flag17));
					}
				}
			}
			NetString modDataID = o.modDataID;
			if (modDataID != null)
			{
				IEnumerator enumerator40 = modDataID.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						string value6 = (string)enumerator40.Current;
						WriteElementString("sourceTexture", "", value6);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write58_ItemPedestal(string n, string ns, ItemPedestal o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ItemPedestal)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ItemPedestal", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt pedestalType = o.pedestalType;
			if (pedestalType != null)
			{
				IEnumerator enumerator38 = pedestalType.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("pedestalType", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetRef<StardewValley.Object> requiredItem = o.requiredItem;
			if (requiredItem != null)
			{
				IEnumerator enumerator39 = requiredItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						StardewValley.Object o5 = (StardewValley.Object)enumerator39.Current;
						Write142_Object("requiredItem", "", o5, isNullable: false, needType: false);
					}
				}
			}
			NetColor successColor = o.successColor;
			if (successColor != null)
			{
				IEnumerator enumerator40 = successColor.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						Color o6 = (Color)enumerator40.Current;
						Write34_Color("successColor", "", o6, needType: false);
					}
				}
			}
			NetBool lockOnSuccess = o.lockOnSuccess;
			if (lockOnSuccess != null)
			{
				IEnumerator enumerator41 = lockOnSuccess.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag17 = (bool)enumerator41.Current;
						WriteElementStringRaw("lockOnSuccess", "", XmlConvert.ToString(flag17));
					}
				}
			}
			NetBool locked = o.locked;
			if (locked != null)
			{
				IEnumerator enumerator42 = locked.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag18 = (bool)enumerator42.Current;
						WriteElementStringRaw("locked", "", XmlConvert.ToString(flag18));
					}
				}
			}
			NetBool match = o.match;
			if (match != null)
			{
				IEnumerator enumerator43 = match.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag19 = (bool)enumerator43.Current;
						WriteElementStringRaw("match", "", XmlConvert.ToString(flag19));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write63_TV(string n, string ns, TV o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(TV)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TV", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt furniture_type = o.furniture_type;
			if (furniture_type != null)
			{
				IEnumerator enumerator38 = furniture_type.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("furniture_type", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt rotations = o.rotations;
			if (rotations != null)
			{
				IEnumerator enumerator39 = rotations.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num14 = (int)enumerator39.Current;
						WriteElementStringRaw("rotations", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt currentRotation = o.currentRotation;
			if (currentRotation != null)
			{
				IEnumerator enumerator40 = currentRotation.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("currentRotation", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetRectangle sourceRect = o.sourceRect;
			if (sourceRect != null)
			{
				IEnumerator enumerator41 = sourceRect.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator41.Current;
						Write51_Rectangle("sourceRect", "", o5, needType: false);
					}
				}
			}
			NetRectangle defaultSourceRect = o.defaultSourceRect;
			if (defaultSourceRect != null)
			{
				IEnumerator enumerator42 = defaultSourceRect.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Rectangle o6 = (Rectangle)enumerator42.Current;
						Write51_Rectangle("defaultSourceRect", "", o6, needType: false);
					}
				}
			}
			NetRectangle defaultBoundingBox = o.defaultBoundingBox;
			if (defaultBoundingBox != null)
			{
				IEnumerator enumerator43 = defaultBoundingBox.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Rectangle o7 = (Rectangle)enumerator43.Current;
						Write51_Rectangle("defaultBoundingBox", "", o7, needType: false);
					}
				}
			}
			NetBool drawHeldObjectLow = o.drawHeldObjectLow;
			if (drawHeldObjectLow != null)
			{
				IEnumerator enumerator44 = drawHeldObjectLow.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag17 = (bool)enumerator44.Current;
						WriteElementStringRaw("drawHeldObjectLow", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write119_FishTankFurniture(string n, string ns, FishTankFurniture o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishTankFurniture)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishTankFurniture", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt furniture_type = o.furniture_type;
			if (furniture_type != null)
			{
				IEnumerator enumerator38 = furniture_type.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("furniture_type", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt rotations = o.rotations;
			if (rotations != null)
			{
				IEnumerator enumerator39 = rotations.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num14 = (int)enumerator39.Current;
						WriteElementStringRaw("rotations", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt currentRotation = o.currentRotation;
			if (currentRotation != null)
			{
				IEnumerator enumerator40 = currentRotation.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("currentRotation", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetRectangle sourceRect = o.sourceRect;
			if (sourceRect != null)
			{
				IEnumerator enumerator41 = sourceRect.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator41.Current;
						Write51_Rectangle("sourceRect", "", o5, needType: false);
					}
				}
			}
			NetRectangle defaultSourceRect = o.defaultSourceRect;
			if (defaultSourceRect != null)
			{
				IEnumerator enumerator42 = defaultSourceRect.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Rectangle o6 = (Rectangle)enumerator42.Current;
						Write51_Rectangle("defaultSourceRect", "", o6, needType: false);
					}
				}
			}
			NetRectangle defaultBoundingBox = o.defaultBoundingBox;
			if (defaultBoundingBox != null)
			{
				IEnumerator enumerator43 = defaultBoundingBox.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Rectangle o7 = (Rectangle)enumerator43.Current;
						Write51_Rectangle("defaultBoundingBox", "", o7, needType: false);
					}
				}
			}
			NetBool drawHeldObjectLow = o.drawHeldObjectLow;
			if (drawHeldObjectLow != null)
			{
				IEnumerator enumerator44 = drawHeldObjectLow.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag17 = (bool)enumerator44.Current;
						WriteElementStringRaw("drawHeldObjectLow", "", XmlConvert.ToString(flag17));
					}
				}
			}
			NetObjectList<Item> heldItems = o.heldItems;
			if (heldItems != null)
			{
				IEnumerator enumerator45 = heldItems.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						Item o8 = (Item)enumerator45.Current;
						Write143_Item("heldItems", "", o8, isNullable: false, needType: false);
					}
				}
			}
			NetInt generationSeed = o.generationSeed;
			if (generationSeed != null)
			{
				WriteStartElement("generationSeed", "", null, writePrefixed: false);
				IEnumerator enumerator46 = generationSeed.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						int num16 = (int)enumerator46.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num16));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write143_Item(string n, string ns, Item o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(Item))
				{
					return;
				}
				if (type == typeof(Tool))
				{
					Write112_Tool(n, ns, (Tool)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Sword))
				{
					Write317_Sword(n, ns, (Sword)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Stackable))
				{
					Write315_Stackable(n, ns, (Stackable)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Seeds))
				{
					Write316_Seeds(n, ns, (Seeds)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Raft))
				{
					Write314_Raft(n, ns, (Raft)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Lantern))
				{
					Write313_Lantern(n, ns, (Lantern)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Blueprints))
				{
					Write312_Blueprints(n, ns, (Blueprints)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(MeleeWeapon))
				{
					Write113_MeleeWeapon(n, ns, (MeleeWeapon)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(GenericTool))
				{
					Write111_GenericTool(n, ns, (GenericTool)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Slingshot))
				{
					Write110_Slingshot(n, ns, (Slingshot)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(WateringCan))
				{
					Write109_WateringCan(n, ns, (WateringCan)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Pickaxe))
				{
					Write108_Pickaxe(n, ns, (Pickaxe)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Pan))
				{
					Write107_Pan(n, ns, (Pan)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(FishingRod))
				{
					Write106_FishingRod(n, ns, (FishingRod)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Hoe))
				{
					Write105_Hoe(n, ns, (Hoe)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Wand))
				{
					Write104_Wand(n, ns, (Wand)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Axe))
				{
					Write103_Axe(n, ns, (Axe)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(MilkPail))
				{
					Write102_MilkPail(n, ns, (MilkPail)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Shears))
				{
					Write101_Shears(n, ns, (Shears)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(MagnifyingGlass))
				{
					Write100_MagnifyingGlass(n, ns, (MagnifyingGlass)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Ring))
				{
					Write60_Ring(n, ns, (Ring)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(CombinedRing))
				{
					Write61_CombinedRing(n, ns, (CombinedRing)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Clothing))
				{
					Write59_Clothing(n, ns, (Clothing)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Hat))
				{
					Write57_Hat(n, ns, (Hat)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Boots))
				{
					Write56_Boots(n, ns, (Boots)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(SpecialItem))
				{
					Write54_SpecialItem(n, ns, (SpecialItem)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(StardewValley.Object))
				{
					Write142_Object(n, ns, (StardewValley.Object)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(BreakableContainer))
				{
					Write329_BreakableContainer(n, ns, (BreakableContainer)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Sign))
				{
					Write141_Sign(n, ns, (Sign)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(IndoorPot))
				{
					Write140_IndoorPot(n, ns, (IndoorPot)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(ColoredObject))
				{
					Write125_ColoredObject(n, ns, (ColoredObject)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(SwitchFloor))
				{
					Write124_SwitchFloor(n, ns, (SwitchFloor)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Cask))
				{
					Write123_Cask(n, ns, (Cask)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(WoodChipper))
				{
					Write122_WoodChipper(n, ns, (WoodChipper)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Phone))
				{
					Write117_Phone(n, ns, (Phone)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(MiniJukebox))
				{
					Write116_MiniJukebox(n, ns, (MiniJukebox)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Workbench))
				{
					Write115_Workbench(n, ns, (Workbench)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Chest))
				{
					Write114_Chest(n, ns, (Chest)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(CrabPot))
				{
					Write64_CrabPot(n, ns, (CrabPot)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Furniture))
				{
					Write62_Furniture(n, ns, (Furniture)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(BedFurniture))
				{
					Write121_BedFurniture(n, ns, (BedFurniture)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(StorageFurniture))
				{
					Write118_StorageFurniture(n, ns, (StorageFurniture)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(FishTankFurniture))
				{
					Write119_FishTankFurniture(n, ns, (FishTankFurniture)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(TV))
				{
					Write63_TV(n, ns, (TV)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(ItemPedestal))
				{
					Write58_ItemPedestal(n, ns, (ItemPedestal)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Wallpaper))
				{
					Write55_Wallpaper(n, ns, (Wallpaper)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Torch))
				{
					Write53_Torch(n, ns, (Torch)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(Fence)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write52_Fence(n, ns, (Fence)o, isNullable, needType: true);
			}
		}

		private void Write118_StorageFurniture(string n, string ns, StorageFurniture o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(StorageFurniture)))
				{
					if (type == typeof(FishTankFurniture))
					{
						Write119_FishTankFurniture(n, ns, (FishTankFurniture)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("StorageFurniture", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt furniture_type = o.furniture_type;
			if (furniture_type != null)
			{
				IEnumerator enumerator38 = furniture_type.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("furniture_type", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt rotations = o.rotations;
			if (rotations != null)
			{
				IEnumerator enumerator39 = rotations.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num14 = (int)enumerator39.Current;
						WriteElementStringRaw("rotations", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt currentRotation = o.currentRotation;
			if (currentRotation != null)
			{
				IEnumerator enumerator40 = currentRotation.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("currentRotation", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetRectangle sourceRect = o.sourceRect;
			if (sourceRect != null)
			{
				IEnumerator enumerator41 = sourceRect.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator41.Current;
						Write51_Rectangle("sourceRect", "", o5, needType: false);
					}
				}
			}
			NetRectangle defaultSourceRect = o.defaultSourceRect;
			if (defaultSourceRect != null)
			{
				IEnumerator enumerator42 = defaultSourceRect.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Rectangle o6 = (Rectangle)enumerator42.Current;
						Write51_Rectangle("defaultSourceRect", "", o6, needType: false);
					}
				}
			}
			NetRectangle defaultBoundingBox = o.defaultBoundingBox;
			if (defaultBoundingBox != null)
			{
				IEnumerator enumerator43 = defaultBoundingBox.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Rectangle o7 = (Rectangle)enumerator43.Current;
						Write51_Rectangle("defaultBoundingBox", "", o7, needType: false);
					}
				}
			}
			NetBool drawHeldObjectLow = o.drawHeldObjectLow;
			if (drawHeldObjectLow != null)
			{
				IEnumerator enumerator44 = drawHeldObjectLow.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag17 = (bool)enumerator44.Current;
						WriteElementStringRaw("drawHeldObjectLow", "", XmlConvert.ToString(flag17));
					}
				}
			}
			NetObjectList<Item> heldItems = o.heldItems;
			if (heldItems != null)
			{
				IEnumerator enumerator45 = heldItems.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						Item o8 = (Item)enumerator45.Current;
						Write143_Item("heldItems", "", o8, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write121_BedFurniture(string n, string ns, BedFurniture o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BedFurniture)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BedFurniture", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt furniture_type = o.furniture_type;
			if (furniture_type != null)
			{
				IEnumerator enumerator38 = furniture_type.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("furniture_type", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt rotations = o.rotations;
			if (rotations != null)
			{
				IEnumerator enumerator39 = rotations.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num14 = (int)enumerator39.Current;
						WriteElementStringRaw("rotations", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt currentRotation = o.currentRotation;
			if (currentRotation != null)
			{
				IEnumerator enumerator40 = currentRotation.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("currentRotation", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetRectangle sourceRect = o.sourceRect;
			if (sourceRect != null)
			{
				IEnumerator enumerator41 = sourceRect.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator41.Current;
						Write51_Rectangle("sourceRect", "", o5, needType: false);
					}
				}
			}
			NetRectangle defaultSourceRect = o.defaultSourceRect;
			if (defaultSourceRect != null)
			{
				IEnumerator enumerator42 = defaultSourceRect.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Rectangle o6 = (Rectangle)enumerator42.Current;
						Write51_Rectangle("defaultSourceRect", "", o6, needType: false);
					}
				}
			}
			NetRectangle defaultBoundingBox = o.defaultBoundingBox;
			if (defaultBoundingBox != null)
			{
				IEnumerator enumerator43 = defaultBoundingBox.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Rectangle o7 = (Rectangle)enumerator43.Current;
						Write51_Rectangle("defaultBoundingBox", "", o7, needType: false);
					}
				}
			}
			NetBool drawHeldObjectLow = o.drawHeldObjectLow;
			if (drawHeldObjectLow != null)
			{
				IEnumerator enumerator44 = drawHeldObjectLow.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag17 = (bool)enumerator44.Current;
						WriteElementStringRaw("drawHeldObjectLow", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteElementString("bedType", "", Write120_BedType(o.bedType));
			WriteEndElement(o);
		}

		private string Write120_BedType(BedFurniture.BedType v)
		{
			string text = null;
			return v switch
			{
				BedFurniture.BedType.Any => "Any", 
				BedFurniture.BedType.Single => "Single", 
				BedFurniture.BedType.Double => "Double", 
				BedFurniture.BedType.Child => "Child", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.BedFurniture.BedType"), 
			};
		}

		private void Write64_CrabPot(string n, string ns, CrabPot o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CrabPot)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CrabPot", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetVector2 directionOffset = o.directionOffset;
			if (directionOffset != null)
			{
				IEnumerator enumerator38 = directionOffset.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						Vector2 o5 = (Vector2)enumerator38.Current;
						Write33_Vector2("directionOffset", "", o5, needType: false);
					}
				}
			}
			NetRef<StardewValley.Object> bait = o.bait;
			if (bait != null)
			{
				IEnumerator enumerator39 = bait.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						StardewValley.Object o6 = (StardewValley.Object)enumerator39.Current;
						Write142_Object("bait", "", o6, isNullable: false, needType: false);
					}
				}
			}
			WriteElementStringRaw("tileIndexToShow", "", XmlConvert.ToString(o.tileIndexToShow));
			WriteEndElement(o);
		}

		private void Write114_Chest(string n, string ns, Chest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Chest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Chest", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetInt startingLidFrame = o.startingLidFrame;
			if (startingLidFrame != null)
			{
				IEnumerator enumerator38 = startingLidFrame.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num13 = (int)enumerator38.Current;
						WriteElementStringRaw("currentLidFrame", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt lidFrameCount = o.lidFrameCount;
			if (lidFrameCount != null)
			{
				WriteStartElement("lidFrameCount", "", null, writePrefixed: false);
				IEnumerator enumerator39 = lidFrameCount.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num14 = (int)enumerator39.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num14));
					}
				}
				WriteEndElement();
			}
			NetInt frameCounter = o.frameCounter;
			if (frameCounter != null)
			{
				IEnumerator enumerator40 = frameCounter.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num15 = (int)enumerator40.Current;
						WriteElementStringRaw("frameCounter", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt coins = o.coins;
			if (coins != null)
			{
				IEnumerator enumerator41 = coins.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						int num16 = (int)enumerator41.Current;
						WriteElementStringRaw("coins", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetObjectList<Item> items = o.items;
			if (items != null)
			{
				WriteStartElement("items", "", null, writePrefixed: false);
				IEnumerator enumerator42 = items.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Item o5 = (Item)enumerator42.Current;
						Write143_Item("Item", "", o5, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetLongDictionary<NetObjectList<Item>, NetRef<NetObjectList<Item>>> separateWalletItems = o.separateWalletItems;
			if (separateWalletItems != null)
			{
				WriteStartElement("separateWalletItems", "", null, writePrefixed: false);
				IEnumerator enumerator43 = separateWalletItems.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						SerializableDictionary<long, NetObjectList<Item>> serializable2 = (SerializableDictionary<long, NetObjectList<Item>>)enumerator43.Current;
						WriteSerializable(serializable2, "SerializableDictionaryOfInt64NetObjectListOfItem", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			NetString chestType = o.chestType;
			if (chestType != null)
			{
				IEnumerator enumerator44 = chestType.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						string value6 = (string)enumerator44.Current;
						WriteElementString("chestType", "", value6);
					}
				}
			}
			NetColor tint = o.tint;
			if (tint != null)
			{
				IEnumerator enumerator45 = tint.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						Color o6 = (Color)enumerator45.Current;
						Write34_Color("tint", "", o6, needType: false);
					}
				}
			}
			NetColor playerChoiceColor = o.playerChoiceColor;
			if (playerChoiceColor != null)
			{
				IEnumerator enumerator46 = playerChoiceColor.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						Color o7 = (Color)enumerator46.Current;
						Write34_Color("playerChoiceColor", "", o7, needType: false);
					}
				}
			}
			NetBool playerChest = o.playerChest;
			if (playerChest != null)
			{
				IEnumerator enumerator47 = playerChest.GetEnumerator();
				if (enumerator47 != null)
				{
					while (enumerator47.MoveNext())
					{
						bool flag17 = (bool)enumerator47.Current;
						WriteElementStringRaw("playerChest", "", XmlConvert.ToString(flag17));
					}
				}
			}
			NetBool fridge = o.fridge;
			if (fridge != null)
			{
				IEnumerator enumerator48 = fridge.GetEnumerator();
				if (enumerator48 != null)
				{
					while (enumerator48.MoveNext())
					{
						bool flag18 = (bool)enumerator48.Current;
						WriteElementStringRaw("fridge", "", XmlConvert.ToString(flag18));
					}
				}
			}
			NetBool giftbox = o.giftbox;
			if (giftbox != null)
			{
				IEnumerator enumerator49 = giftbox.GetEnumerator();
				if (enumerator49 != null)
				{
					while (enumerator49.MoveNext())
					{
						bool flag19 = (bool)enumerator49.Current;
						WriteElementStringRaw("giftbox", "", XmlConvert.ToString(flag19));
					}
				}
			}
			NetInt giftboxIndex = o.giftboxIndex;
			if (giftboxIndex != null)
			{
				IEnumerator enumerator50 = giftboxIndex.GetEnumerator();
				if (enumerator50 != null)
				{
					while (enumerator50.MoveNext())
					{
						int num17 = (int)enumerator50.Current;
						WriteElementStringRaw("giftboxIndex", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetInt bigCraftableSpriteIndex = o.bigCraftableSpriteIndex;
			if (bigCraftableSpriteIndex != null)
			{
				IEnumerator enumerator51 = bigCraftableSpriteIndex.GetEnumerator();
				if (enumerator51 != null)
				{
					while (enumerator51.MoveNext())
					{
						int num18 = (int)enumerator51.Current;
						WriteElementStringRaw("spriteIndexOverride", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetBool dropContents = o.dropContents;
			if (dropContents != null)
			{
				IEnumerator enumerator52 = dropContents.GetEnumerator();
				if (enumerator52 != null)
				{
					while (enumerator52.MoveNext())
					{
						bool flag20 = (bool)enumerator52.Current;
						WriteElementStringRaw("dropContents", "", XmlConvert.ToString(flag20));
					}
				}
			}
			NetBool synchronized = o.synchronized;
			if (synchronized != null)
			{
				IEnumerator enumerator53 = synchronized.GetEnumerator();
				if (enumerator53 != null)
				{
					while (enumerator53.MoveNext())
					{
						bool flag21 = (bool)enumerator53.Current;
						WriteElementStringRaw("synchronized", "", XmlConvert.ToString(flag21));
					}
				}
			}
			NetEnum<Chest.SpecialChestTypes> specialChestType = o.specialChestType;
			if (specialChestType != null)
			{
				IEnumerator enumerator54 = specialChestType.GetEnumerator();
				if (enumerator54 != null)
				{
					while (enumerator54.MoveNext())
					{
						string value7 = (string)enumerator54.Current;
						WriteElementString("specialChestType", "", value7);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write115_Workbench(string n, string ns, Workbench o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Workbench)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Workbench", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			WriteEndElement(o);
		}

		private void Write116_MiniJukebox(string n, string ns, MiniJukebox o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MiniJukebox)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MiniJukebox", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			WriteEndElement(o);
		}

		private void Write117_Phone(string n, string ns, Phone o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Phone)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Phone", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			WriteEndElement(o);
		}

		private void Write122_WoodChipper(string n, string ns, WoodChipper o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WoodChipper)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WoodChipper", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetRef<StardewValley.Object> depositedItem = o.depositedItem;
			if (depositedItem != null)
			{
				WriteStartElement("depositedItem", "", null, writePrefixed: false);
				IEnumerator enumerator38 = depositedItem.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						StardewValley.Object o5 = (StardewValley.Object)enumerator38.Current;
						Write142_Object("Object", "", o5, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("nextSmokeTime", "", XmlConvert.ToString(o.nextSmokeTime));
			WriteElementStringRaw("nextShakeTime", "", XmlConvert.ToString(o.nextShakeTime));
			WriteEndElement(o);
		}

		private void Write123_Cask(string n, string ns, Cask o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Cask)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Cask", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetFloat agingRate = o.agingRate;
			if (agingRate != null)
			{
				IEnumerator enumerator38 = agingRate.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						float num13 = (float)enumerator38.Current;
						WriteElementStringRaw("agingRate", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetFloat daysToMature = o.daysToMature;
			if (daysToMature != null)
			{
				IEnumerator enumerator39 = daysToMature.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						float num14 = (float)enumerator39.Current;
						WriteElementStringRaw("daysToMature", "", XmlConvert.ToString(num14));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write124_SwitchFloor(string n, string ns, SwitchFloor o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SwitchFloor)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SwitchFloor", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetColor onColor = o.onColor;
			if (onColor != null)
			{
				IEnumerator enumerator38 = onColor.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						Color o5 = (Color)enumerator38.Current;
						Write34_Color("onColor", "", o5, needType: false);
					}
				}
			}
			NetColor offColor = o.offColor;
			if (offColor != null)
			{
				IEnumerator enumerator39 = offColor.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						Color o6 = (Color)enumerator39.Current;
						Write34_Color("offColor", "", o6, needType: false);
					}
				}
			}
			NetBool finished = o.finished;
			if (finished != null)
			{
				IEnumerator enumerator40 = finished.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						bool flag17 = (bool)enumerator40.Current;
						WriteElementStringRaw("finished", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write125_ColoredObject(string n, string ns, ColoredObject o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ColoredObject)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ColoredObject", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator38 = color.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						Color o5 = (Color)enumerator38.Current;
						Write34_Color("color", "", o5, needType: false);
					}
				}
			}
			NetBool colorSameIndexAsParentSheetIndex = o.colorSameIndexAsParentSheetIndex;
			if (colorSameIndexAsParentSheetIndex != null)
			{
				IEnumerator enumerator39 = colorSameIndexAsParentSheetIndex.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag17 = (bool)enumerator39.Current;
						WriteElementStringRaw("colorSameIndexAsParentSheetIndex", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteElementStringRaw("ColorSameIndexAsParentSheetIndex", "", XmlConvert.ToString(o.ColorSameIndexAsParentSheetIndex));
			WriteEndElement(o);
		}

		private void Write140_IndoorPot(string n, string ns, IndoorPot o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IndoorPot)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IndoorPot", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetRef<HoeDirt> hoeDirt = o.hoeDirt;
			if (hoeDirt != null)
			{
				IEnumerator enumerator38 = hoeDirt.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						HoeDirt o5 = (HoeDirt)enumerator38.Current;
						Write139_HoeDirt("hoeDirt", "", o5, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Bush> bush = o.bush;
			if (bush != null)
			{
				IEnumerator enumerator39 = bush.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						Bush o6 = (Bush)enumerator39.Current;
						Write136_Bush("bush", "", o6, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write136_Bush(string n, string ns, Bush o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Bush)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Bush", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetVector2 tilePosition = o.tilePosition;
			if (tilePosition != null)
			{
				IEnumerator enumerator2 = tilePosition.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator2.Current;
						Write33_Vector2("tilePosition", "", o2, needType: false);
					}
				}
			}
			NetInt size = o.size;
			if (size != null)
			{
				IEnumerator enumerator3 = size.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num = (int)enumerator3.Current;
						WriteElementStringRaw("size", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt datePlanted = o.datePlanted;
			if (datePlanted != null)
			{
				IEnumerator enumerator4 = datePlanted.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num2 = (int)enumerator4.Current;
						WriteElementStringRaw("datePlanted", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tileSheetOffset = o.tileSheetOffset;
			if (tileSheetOffset != null)
			{
				IEnumerator enumerator5 = tileSheetOffset.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num3 = (int)enumerator5.Current;
						WriteElementStringRaw("tileSheetOffset", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt overrideSeason = o.overrideSeason;
			if (overrideSeason != null)
			{
				IEnumerator enumerator6 = overrideSeason.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num4 = (int)enumerator6.Current;
						WriteElementStringRaw("overrideSeason", "", XmlConvert.ToString(num4));
					}
				}
			}
			WriteElementStringRaw("health", "", XmlConvert.ToString(o.health));
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator7 = flipped.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag = (bool)enumerator7.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool townBush = o.townBush;
			if (townBush != null)
			{
				IEnumerator enumerator8 = townBush.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag2 = (bool)enumerator8.Current;
						WriteElementStringRaw("townBush", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool greenhouseBush = o.greenhouseBush;
			if (greenhouseBush != null)
			{
				IEnumerator enumerator9 = greenhouseBush.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag3 = (bool)enumerator9.Current;
						WriteElementStringRaw("greenhouseBush", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool drawShadow = o.drawShadow;
			if (drawShadow != null)
			{
				IEnumerator enumerator10 = drawShadow.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag4 = (bool)enumerator10.Current;
						WriteElementStringRaw("drawShadow", "", XmlConvert.ToString(flag4));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write139_HoeDirt(string n, string ns, HoeDirt o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(HoeDirt)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("HoeDirt", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt state = o.state;
			if (state != null)
			{
				IEnumerator enumerator2 = state.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("state", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt fertilizer = o.fertilizer;
			if (fertilizer != null)
			{
				IEnumerator enumerator3 = fertilizer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("fertilizer", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetBool isGreenhouseDirt = o.isGreenhouseDirt;
			if (isGreenhouseDirt != null)
			{
				IEnumerator enumerator4 = isGreenhouseDirt.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("isGreenhouseDirt", "", XmlConvert.ToString(flag));
					}
				}
			}
			Write138_Crop("crop", "", o.crop, isNullable: false, needType: false);
			WriteEndElement(o);
		}

		private void Write138_Crop(string n, string ns, Crop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Crop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Crop", "");
			}
			NetIntList phaseDays = o.phaseDays;
			if (phaseDays != null)
			{
				WriteStartElement("phaseDays", "", null, writePrefixed: false);
				IEnumerator enumerator = phaseDays.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetInt rowInSpriteSheet = o.rowInSpriteSheet;
			if (rowInSpriteSheet != null)
			{
				IEnumerator enumerator2 = rowInSpriteSheet.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("rowInSpriteSheet", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt phaseToShow = o.phaseToShow;
			if (phaseToShow != null)
			{
				IEnumerator enumerator3 = phaseToShow.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num3 = (int)enumerator3.Current;
						WriteElementStringRaw("phaseToShow", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentPhase = o.currentPhase;
			if (currentPhase != null)
			{
				IEnumerator enumerator4 = currentPhase.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num4 = (int)enumerator4.Current;
						WriteElementStringRaw("currentPhase", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt harvestMethod = o.harvestMethod;
			if (harvestMethod != null)
			{
				IEnumerator enumerator5 = harvestMethod.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num5 = (int)enumerator5.Current;
						WriteElementStringRaw("harvestMethod", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt indexOfHarvest = o.indexOfHarvest;
			if (indexOfHarvest != null)
			{
				IEnumerator enumerator6 = indexOfHarvest.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num6 = (int)enumerator6.Current;
						WriteElementStringRaw("indexOfHarvest", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt regrowAfterHarvest = o.regrowAfterHarvest;
			if (regrowAfterHarvest != null)
			{
				IEnumerator enumerator7 = regrowAfterHarvest.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num7 = (int)enumerator7.Current;
						WriteElementStringRaw("regrowAfterHarvest", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt dayOfCurrentPhase = o.dayOfCurrentPhase;
			if (dayOfCurrentPhase != null)
			{
				IEnumerator enumerator8 = dayOfCurrentPhase.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num8 = (int)enumerator8.Current;
						WriteElementStringRaw("dayOfCurrentPhase", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt minHarvest = o.minHarvest;
			if (minHarvest != null)
			{
				IEnumerator enumerator9 = minHarvest.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num9 = (int)enumerator9.Current;
						WriteElementStringRaw("minHarvest", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetInt maxHarvest = o.maxHarvest;
			if (maxHarvest != null)
			{
				IEnumerator enumerator10 = maxHarvest.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num10 = (int)enumerator10.Current;
						WriteElementStringRaw("maxHarvest", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt maxHarvestIncreasePerFarmingLevel = o.maxHarvestIncreasePerFarmingLevel;
			if (maxHarvestIncreasePerFarmingLevel != null)
			{
				IEnumerator enumerator11 = maxHarvestIncreasePerFarmingLevel.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num11 = (int)enumerator11.Current;
						WriteElementStringRaw("maxHarvestIncreasePerFarmingLevel", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt daysOfUnclutteredGrowth = o.daysOfUnclutteredGrowth;
			if (daysOfUnclutteredGrowth != null)
			{
				IEnumerator enumerator12 = daysOfUnclutteredGrowth.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num12 = (int)enumerator12.Current;
						WriteElementStringRaw("daysOfUnclutteredGrowth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt whichForageCrop = o.whichForageCrop;
			if (whichForageCrop != null)
			{
				IEnumerator enumerator13 = whichForageCrop.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num13 = (int)enumerator13.Current;
						WriteElementStringRaw("whichForageCrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetStringList seasonsToGrowIn = o.seasonsToGrowIn;
			if (seasonsToGrowIn != null)
			{
				WriteStartElement("seasonsToGrowIn", "", null, writePrefixed: false);
				IEnumerator enumerator14 = seasonsToGrowIn.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						string value = (string)enumerator14.Current;
						WriteNullableStringLiteral("string", "", value);
					}
				}
				WriteEndElement();
			}
			NetColor tintColor = o.tintColor;
			if (tintColor != null)
			{
				IEnumerator enumerator15 = tintColor.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						Color o2 = (Color)enumerator15.Current;
						Write34_Color("tintColor", "", o2, needType: false);
					}
				}
			}
			NetBool flip = o.flip;
			if (flip != null)
			{
				IEnumerator enumerator16 = flip.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag = (bool)enumerator16.Current;
						WriteElementStringRaw("flip", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool fullyGrown = o.fullyGrown;
			if (fullyGrown != null)
			{
				IEnumerator enumerator17 = fullyGrown.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag2 = (bool)enumerator17.Current;
						WriteElementStringRaw("fullGrown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool raisedSeeds = o.raisedSeeds;
			if (raisedSeeds != null)
			{
				IEnumerator enumerator18 = raisedSeeds.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						bool flag3 = (bool)enumerator18.Current;
						WriteElementStringRaw("raisedSeeds", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool programColored = o.programColored;
			if (programColored != null)
			{
				IEnumerator enumerator19 = programColored.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag4 = (bool)enumerator19.Current;
						WriteElementStringRaw("programColored", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool dead = o.dead;
			if (dead != null)
			{
				IEnumerator enumerator20 = dead.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag5 = (bool)enumerator20.Current;
						WriteElementStringRaw("dead", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool forageCrop = o.forageCrop;
			if (forageCrop != null)
			{
				IEnumerator enumerator21 = forageCrop.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag6 = (bool)enumerator21.Current;
						WriteElementStringRaw("forageCrop", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetDouble chanceForExtraCrops = o.chanceForExtraCrops;
			if (chanceForExtraCrops != null)
			{
				IEnumerator enumerator22 = chanceForExtraCrops.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						double num14 = (double)enumerator22.Current;
						WriteElementStringRaw("chanceForExtraCrops", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt netSeedIndex = o.netSeedIndex;
			if (netSeedIndex != null)
			{
				IEnumerator enumerator23 = netSeedIndex.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						int num15 = (int)enumerator23.Current;
						WriteElementStringRaw("seedIndex", "", XmlConvert.ToString(num15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write141_Sign(string n, string ns, Sign o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Sign)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Sign", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			NetRef<Item> displayItem = o.displayItem;
			if (displayItem != null)
			{
				IEnumerator enumerator38 = displayItem.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						Item o5 = (Item)enumerator38.Current;
						Write143_Item("displayItem", "", o5, isNullable: false, needType: false);
					}
				}
			}
			NetInt displayType = o.displayType;
			if (displayType != null)
			{
				IEnumerator enumerator39 = displayType.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num13 = (int)enumerator39.Current;
						WriteElementStringRaw("displayType", "", XmlConvert.ToString(num13));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write329_BreakableContainer(string n, string ns, BreakableContainer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BreakableContainer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BreakableContainer", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetVector2 tileLocation = o.tileLocation;
			if (tileLocation != null)
			{
				IEnumerator enumerator6 = tileLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tileLocation", "", o2, needType: false);
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator7 = owner.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num3 = (long)enumerator7.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator8 = type2.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value2 = (string)enumerator8.Current;
						WriteElementString("type", "", value2);
					}
				}
			}
			NetBool canBeSetDown = o.canBeSetDown;
			if (canBeSetDown != null)
			{
				IEnumerator enumerator9 = canBeSetDown.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("canBeSetDown", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool canBeGrabbed = o.canBeGrabbed;
			if (canBeGrabbed != null)
			{
				IEnumerator enumerator10 = canBeGrabbed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("canBeGrabbed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isHoedirt = o.isHoedirt;
			if (isHoedirt != null)
			{
				IEnumerator enumerator11 = isHoedirt.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isHoedirt", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool isSpawnedObject = o.isSpawnedObject;
			if (isSpawnedObject != null)
			{
				IEnumerator enumerator12 = isSpawnedObject.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag5 = (bool)enumerator12.Current;
						WriteElementStringRaw("isSpawnedObject", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool questItem = o.questItem;
			if (questItem != null)
			{
				IEnumerator enumerator13 = questItem.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag6 = (bool)enumerator13.Current;
						WriteElementStringRaw("questItem", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt questId = o.questId;
			if (questId != null)
			{
				IEnumerator enumerator14 = questId.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num4 = (int)enumerator14.Current;
						WriteElementStringRaw("questId", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isOn = o.isOn;
			if (isOn != null)
			{
				IEnumerator enumerator15 = isOn.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isOn", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt fragility = o.fragility;
			if (fragility != null)
			{
				IEnumerator enumerator16 = fragility.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num5 = (int)enumerator16.Current;
						WriteElementStringRaw("fragility", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator17 = price.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num6 = (int)enumerator17.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt edibility = o.edibility;
			if (edibility != null)
			{
				IEnumerator enumerator18 = edibility.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("edibility", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt stack = o.stack;
			if (stack != null)
			{
				IEnumerator enumerator19 = stack.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("stack", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt quality = o.quality;
			if (quality != null)
			{
				IEnumerator enumerator20 = quality.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("quality", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool bigCraftable = o.bigCraftable;
			if (bigCraftable != null)
			{
				IEnumerator enumerator21 = bigCraftable.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bigCraftable", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool setOutdoors = o.setOutdoors;
			if (setOutdoors != null)
			{
				IEnumerator enumerator22 = setOutdoors.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("setOutdoors", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool setIndoors = o.setIndoors;
			if (setIndoors != null)
			{
				IEnumerator enumerator23 = setIndoors.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("setIndoors", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool readyForHarvest = o.readyForHarvest;
			if (readyForHarvest != null)
			{
				IEnumerator enumerator24 = readyForHarvest.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("readyForHarvest", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool showNextIndex = o.showNextIndex;
			if (showNextIndex != null)
			{
				IEnumerator enumerator25 = showNextIndex.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("showNextIndex", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator26 = flipped.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag13 = (bool)enumerator26.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool hasBeenPickedUpByFarmer = o.hasBeenPickedUpByFarmer;
			if (hasBeenPickedUpByFarmer != null)
			{
				IEnumerator enumerator27 = hasBeenPickedUpByFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag14 = (bool)enumerator27.Current;
						WriteElementStringRaw("hasBeenPickedUpByFarmer", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isRecipe = o.isRecipe;
			if (isRecipe != null)
			{
				IEnumerator enumerator28 = isRecipe.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag15 = (bool)enumerator28.Current;
						WriteElementStringRaw("isRecipe", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isLamp = o.isLamp;
			if (isLamp != null)
			{
				IEnumerator enumerator29 = isLamp.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag16 = (bool)enumerator29.Current;
						WriteElementStringRaw("isLamp", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator30 = heldObject.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator30.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetIntDelta minutesUntilReady = o.minutesUntilReady;
			if (minutesUntilReady != null)
			{
				IEnumerator enumerator31 = minutesUntilReady.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num10 = (int)enumerator31.Current;
						WriteElementStringRaw("minutesUntilReady", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRectangle boundingBox = o.boundingBox;
			if (boundingBox != null)
			{
				IEnumerator enumerator32 = boundingBox.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator32.Current;
						Write51_Rectangle("boundingBox", "", o4, needType: false);
					}
				}
			}
			Write33_Vector2("scale", "", o.scale, needType: false);
			NetInt uses = o.uses;
			if (uses != null)
			{
				IEnumerator enumerator33 = uses.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num11 = (int)enumerator33.Current;
						WriteElementStringRaw("uses", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetString orderData = o.orderData;
			if (orderData != null)
			{
				IEnumerator enumerator34 = orderData.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						string value3 = (string)enumerator34.Current;
						WriteElementString("orderData", "", value3);
					}
				}
			}
			NetNullableEnum<StardewValley.Object.PreserveType> preserve = o.preserve;
			if (preserve != null)
			{
				IEnumerator enumerator35 = preserve.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						string value4 = (string)enumerator35.Current;
						WriteElementString("preserve", "", value4);
					}
				}
			}
			NetInt preservedParentSheetIndex = o.preservedParentSheetIndex;
			if (preservedParentSheetIndex != null)
			{
				IEnumerator enumerator36 = preservedParentSheetIndex.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num12 = (int)enumerator36.Current;
						WriteElementStringRaw("preservedParentSheetIndex", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetNullableEnum<StardewValley.Object.HoneyType> honeyType = o.honeyType;
			if (honeyType != null)
			{
				IEnumerator enumerator37 = honeyType.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						string value5 = (string)enumerator37.Current;
						WriteElementString("honeyType", "", value5);
					}
				}
			}
			WriteElementStringRaw("destroyOvernight", "", XmlConvert.ToString(o.destroyOvernight));
			WriteEndElement(o);
		}

		private void Write54_SpecialItem(string n, string ns, SpecialItem o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SpecialItem)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SpecialItem", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt which = o.which;
			if (which != null)
			{
				IEnumerator enumerator6 = which.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("which", "", XmlConvert.ToString(num3));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write56_Boots(string n, string ns, Boots o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Boots)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Boots", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt defenseBonus = o.defenseBonus;
			if (defenseBonus != null)
			{
				IEnumerator enumerator6 = defenseBonus.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("defenseBonus", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt immunityBonus = o.immunityBonus;
			if (immunityBonus != null)
			{
				IEnumerator enumerator7 = immunityBonus.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("immunityBonus", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexInTileSheet = o.indexInTileSheet;
			if (indexInTileSheet != null)
			{
				IEnumerator enumerator8 = indexInTileSheet.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexInTileSheet", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator9 = price.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num6 = (int)enumerator9.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt indexInColorSheet = o.indexInColorSheet;
			if (indexInColorSheet != null)
			{
				IEnumerator enumerator10 = indexInColorSheet.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num7 = (int)enumerator10.Current;
						WriteElementStringRaw("indexInColorSheet", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt appliedBootSheetIndex = o.appliedBootSheetIndex;
			if (appliedBootSheetIndex != null)
			{
				IEnumerator enumerator11 = appliedBootSheetIndex.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num8 = (int)enumerator11.Current;
						WriteElementStringRaw("appliedBootSheetIndex", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write57_Hat(string n, string ns, Hat o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Hat)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Hat", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt which = o.which;
			if (which != null)
			{
				IEnumerator enumerator6 = which.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("which", "", XmlConvert.ToString(num3));
					}
				}
			}
			WriteElementStringRaw("skipHairDraw", "", XmlConvert.ToString(o.skipHairDraw));
			NetBool ignoreHairstyleOffset = o.ignoreHairstyleOffset;
			if (ignoreHairstyleOffset != null)
			{
				IEnumerator enumerator7 = ignoreHairstyleOffset.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag2 = (bool)enumerator7.Current;
						WriteElementStringRaw("ignoreHairstyleOffset", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetInt hairDrawType = o.hairDrawType;
			if (hairDrawType != null)
			{
				IEnumerator enumerator8 = hairDrawType.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num4 = (int)enumerator8.Current;
						WriteElementStringRaw("hairDrawType", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetBool isPrismatic = o.isPrismatic;
			if (isPrismatic != null)
			{
				IEnumerator enumerator9 = isPrismatic.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag3 = (bool)enumerator9.Current;
						WriteElementStringRaw("isPrismatic", "", XmlConvert.ToString(flag3));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write59_Clothing(string n, string ns, Clothing o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Clothing)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Clothing", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator6 = price.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt indexInTileSheetMale = o.indexInTileSheetMale;
			if (indexInTileSheetMale != null)
			{
				IEnumerator enumerator7 = indexInTileSheetMale.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("indexInTileSheet", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexInTileSheetFemale = o.indexInTileSheetFemale;
			if (indexInTileSheetFemale != null)
			{
				IEnumerator enumerator8 = indexInTileSheetFemale.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexInTileSheetFemale", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt clothesType = o.clothesType;
			if (clothesType != null)
			{
				IEnumerator enumerator9 = clothesType.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num6 = (int)enumerator9.Current;
						WriteElementStringRaw("clothesType", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetBool dyeable = o.dyeable;
			if (dyeable != null)
			{
				IEnumerator enumerator10 = dyeable.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("dyeable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetColor clothesColor = o.clothesColor;
			if (clothesColor != null)
			{
				IEnumerator enumerator11 = clothesColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						Color o2 = (Color)enumerator11.Current;
						Write34_Color("clothesColor", "", o2, needType: false);
					}
				}
			}
			NetString otherData = o.otherData;
			if (otherData != null)
			{
				IEnumerator enumerator12 = otherData.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						string value2 = (string)enumerator12.Current;
						WriteElementString("otherData", "", value2);
					}
				}
			}
			NetBool isPrismatic = o.isPrismatic;
			if (isPrismatic != null)
			{
				IEnumerator enumerator13 = isPrismatic.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("isPrismatic", "", XmlConvert.ToString(flag3));
					}
				}
			}
			WriteElementStringRaw("Price", "", XmlConvert.ToString(o.Price));
			WriteEndElement(o);
		}

		private void Write61_CombinedRing(string n, string ns, CombinedRing o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CombinedRing)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CombinedRing", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator6 = price.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt indexInTileSheet = o.indexInTileSheet;
			if (indexInTileSheet != null)
			{
				IEnumerator enumerator7 = indexInTileSheet.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("indexInTileSheet", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt uniqueID = o.uniqueID;
			if (uniqueID != null)
			{
				IEnumerator enumerator8 = uniqueID.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("uniqueID", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetList<Ring, NetRef<Ring>> combinedRings = o.combinedRings;
			if (combinedRings != null)
			{
				WriteStartElement("combinedRings", "", null, writePrefixed: false);
				IEnumerator enumerator9 = combinedRings.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						Ring o2 = (Ring)enumerator9.Current;
						Write60_Ring("Ring", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write60_Ring(string n, string ns, Ring o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Ring)))
				{
					if (type == typeof(CombinedRing))
					{
						Write61_CombinedRing(n, ns, (CombinedRing)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Ring", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator6 = price.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt indexInTileSheet = o.indexInTileSheet;
			if (indexInTileSheet != null)
			{
				IEnumerator enumerator7 = indexInTileSheet.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("indexInTileSheet", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt uniqueID = o.uniqueID;
			if (uniqueID != null)
			{
				IEnumerator enumerator8 = uniqueID.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("uniqueID", "", XmlConvert.ToString(num5));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write100_MagnifyingGlass(string n, string ns, MagnifyingGlass o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MagnifyingGlass)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MagnifyingGlass", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write99_BaseEnchantment(string n, string ns, BaseEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BaseEnchantment)))
				{
					if (type == typeof(FishingRodEnchantment))
					{
						Write87_FishingRodEnchantment(n, ns, (FishingRodEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(PreservingEnchantment))
					{
						Write90_PreservingEnchantment(n, ns, (PreservingEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AutoHookEnchantment))
					{
						Write89_AutoHookEnchantment(n, ns, (AutoHookEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MasterEnchantment))
					{
						Write88_MasterEnchantment(n, ns, (MasterEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(PowerfulEnchantment))
					{
						Write85_PowerfulEnchantment(n, ns, (PowerfulEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(EfficientToolEnchantment))
					{
						Write84_EfficientToolEnchantment(n, ns, (EfficientToolEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ReachingToolEnchantment))
					{
						Write80_ReachingToolEnchantment(n, ns, (ReachingToolEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SwiftToolEnchantment))
					{
						Write79_SwiftToolEnchantment(n, ns, (SwiftToolEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(PickaxeEnchantment))
					{
						Write78_PickaxeEnchantment(n, ns, (PickaxeEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(HoeEnchantment))
					{
						Write77_HoeEnchantment(n, ns, (HoeEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GenerousEnchantment))
					{
						Write86_GenerousEnchantment(n, ns, (GenerousEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ArchaeologistEnchantment))
					{
						Write83_ArchaeologistEnchantment(n, ns, (ArchaeologistEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AxeEnchantment))
					{
						Write76_AxeEnchantment(n, ns, (AxeEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShavingEnchantment))
					{
						Write82_ShavingEnchantment(n, ns, (ShavingEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(WateringCanEnchantment))
					{
						Write75_WateringCanEnchantment(n, ns, (WateringCanEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BottomlessEnchantment))
					{
						Write81_BottomlessEnchantment(n, ns, (BottomlessEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(PanEnchantment))
					{
						Write74_PanEnchantment(n, ns, (PanEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MilkPailEnchantment))
					{
						Write73_MilkPailEnchantment(n, ns, (MilkPailEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShearsEnchantment))
					{
						Write72_ShearsEnchantment(n, ns, (ShearsEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BaseWeaponEnchantment))
					{
						Write65_BaseWeaponEnchantment(n, ns, (BaseWeaponEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GalaxySoulEnchantment))
					{
						Write98_GalaxySoulEnchantment(n, ns, (GalaxySoulEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DiamondEnchantment))
					{
						Write97_DiamondEnchantment(n, ns, (DiamondEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RubyEnchantment))
					{
						Write96_RubyEnchantment(n, ns, (RubyEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(EmeraldEnchantment))
					{
						Write95_EmeraldEnchantment(n, ns, (EmeraldEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(JadeEnchantment))
					{
						Write94_JadeEnchantment(n, ns, (JadeEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AquamarineEnchantment))
					{
						Write93_AquamarineEnchantment(n, ns, (AquamarineEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TopazEnchantment))
					{
						Write92_TopazEnchantment(n, ns, (TopazEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AmethystEnchantment))
					{
						Write91_AmethystEnchantment(n, ns, (AmethystEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CrusaderEnchantment))
					{
						Write71_CrusaderEnchantment(n, ns, (CrusaderEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(VampiricEnchantment))
					{
						Write70_VampiricEnchantment(n, ns, (VampiricEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MagicEnchantment))
					{
						Write69_MagicEnchantment(n, ns, (MagicEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(HaymakerEnchantment))
					{
						Write68_HaymakerEnchantment(n, ns, (HaymakerEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BugKillerEnchantment))
					{
						Write67_BugKillerEnchantment(n, ns, (BugKillerEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ArtfulEnchantment))
					{
						Write66_ArtfulEnchantment(n, ns, (ArtfulEnchantment)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BaseEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write66_ArtfulEnchantment(string n, string ns, ArtfulEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ArtfulEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ArtfulEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write67_BugKillerEnchantment(string n, string ns, BugKillerEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BugKillerEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BugKillerEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write68_HaymakerEnchantment(string n, string ns, HaymakerEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(HaymakerEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("HaymakerEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write69_MagicEnchantment(string n, string ns, MagicEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MagicEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MagicEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write70_VampiricEnchantment(string n, string ns, VampiricEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(VampiricEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("VampiricEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write71_CrusaderEnchantment(string n, string ns, CrusaderEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CrusaderEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CrusaderEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write91_AmethystEnchantment(string n, string ns, AmethystEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AmethystEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AmethystEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write92_TopazEnchantment(string n, string ns, TopazEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(TopazEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TopazEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write93_AquamarineEnchantment(string n, string ns, AquamarineEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AquamarineEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AquamarineEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write94_JadeEnchantment(string n, string ns, JadeEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(JadeEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("JadeEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write95_EmeraldEnchantment(string n, string ns, EmeraldEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(EmeraldEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("EmeraldEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write96_RubyEnchantment(string n, string ns, RubyEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(RubyEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("RubyEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write97_DiamondEnchantment(string n, string ns, DiamondEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DiamondEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DiamondEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write98_GalaxySoulEnchantment(string n, string ns, GalaxySoulEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GalaxySoulEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GalaxySoulEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write65_BaseWeaponEnchantment(string n, string ns, BaseWeaponEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BaseWeaponEnchantment)))
				{
					if (type == typeof(GalaxySoulEnchantment))
					{
						Write98_GalaxySoulEnchantment(n, ns, (GalaxySoulEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DiamondEnchantment))
					{
						Write97_DiamondEnchantment(n, ns, (DiamondEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RubyEnchantment))
					{
						Write96_RubyEnchantment(n, ns, (RubyEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(EmeraldEnchantment))
					{
						Write95_EmeraldEnchantment(n, ns, (EmeraldEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(JadeEnchantment))
					{
						Write94_JadeEnchantment(n, ns, (JadeEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AquamarineEnchantment))
					{
						Write93_AquamarineEnchantment(n, ns, (AquamarineEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TopazEnchantment))
					{
						Write92_TopazEnchantment(n, ns, (TopazEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AmethystEnchantment))
					{
						Write91_AmethystEnchantment(n, ns, (AmethystEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CrusaderEnchantment))
					{
						Write71_CrusaderEnchantment(n, ns, (CrusaderEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(VampiricEnchantment))
					{
						Write70_VampiricEnchantment(n, ns, (VampiricEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MagicEnchantment))
					{
						Write69_MagicEnchantment(n, ns, (MagicEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(HaymakerEnchantment))
					{
						Write68_HaymakerEnchantment(n, ns, (HaymakerEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BugKillerEnchantment))
					{
						Write67_BugKillerEnchantment(n, ns, (BugKillerEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ArtfulEnchantment))
					{
						Write66_ArtfulEnchantment(n, ns, (ArtfulEnchantment)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BaseWeaponEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write72_ShearsEnchantment(string n, string ns, ShearsEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShearsEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShearsEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write73_MilkPailEnchantment(string n, string ns, MilkPailEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MilkPailEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MilkPailEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write74_PanEnchantment(string n, string ns, PanEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(PanEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("PanEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write81_BottomlessEnchantment(string n, string ns, BottomlessEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BottomlessEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BottomlessEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write75_WateringCanEnchantment(string n, string ns, WateringCanEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WateringCanEnchantment)))
				{
					if (type == typeof(BottomlessEnchantment))
					{
						Write81_BottomlessEnchantment(n, ns, (BottomlessEnchantment)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WateringCanEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write82_ShavingEnchantment(string n, string ns, ShavingEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShavingEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShavingEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write76_AxeEnchantment(string n, string ns, AxeEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AxeEnchantment)))
				{
					if (type == typeof(ShavingEnchantment))
					{
						Write82_ShavingEnchantment(n, ns, (ShavingEnchantment)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AxeEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write83_ArchaeologistEnchantment(string n, string ns, ArchaeologistEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ArchaeologistEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ArchaeologistEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write86_GenerousEnchantment(string n, string ns, GenerousEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GenerousEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GenerousEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write77_HoeEnchantment(string n, string ns, HoeEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(HoeEnchantment)))
				{
					if (type == typeof(GenerousEnchantment))
					{
						Write86_GenerousEnchantment(n, ns, (GenerousEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ArchaeologistEnchantment))
					{
						Write83_ArchaeologistEnchantment(n, ns, (ArchaeologistEnchantment)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("HoeEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write78_PickaxeEnchantment(string n, string ns, PickaxeEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(PickaxeEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("PickaxeEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write79_SwiftToolEnchantment(string n, string ns, SwiftToolEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SwiftToolEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SwiftToolEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write80_ReachingToolEnchantment(string n, string ns, ReachingToolEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ReachingToolEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ReachingToolEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write84_EfficientToolEnchantment(string n, string ns, EfficientToolEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(EfficientToolEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("EfficientToolEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write85_PowerfulEnchantment(string n, string ns, PowerfulEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(PowerfulEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("PowerfulEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write88_MasterEnchantment(string n, string ns, MasterEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MasterEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MasterEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write89_AutoHookEnchantment(string n, string ns, AutoHookEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AutoHookEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AutoHookEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write90_PreservingEnchantment(string n, string ns, PreservingEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(PreservingEnchantment)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("PreservingEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write87_FishingRodEnchantment(string n, string ns, FishingRodEnchantment o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishingRodEnchantment)))
				{
					if (type == typeof(PreservingEnchantment))
					{
						Write90_PreservingEnchantment(n, ns, (PreservingEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AutoHookEnchantment))
					{
						Write89_AutoHookEnchantment(n, ns, (AutoHookEnchantment)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MasterEnchantment))
					{
						Write88_MasterEnchantment(n, ns, (MasterEnchantment)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishingRodEnchantment", "");
			}
			WriteElementStringRaw("level", "", XmlConvert.ToString(o.Level));
			WriteEndElement(o);
		}

		private void Write101_Shears(string n, string ns, Shears o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Shears)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Shears", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write102_MilkPail(string n, string ns, MilkPail o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MilkPail)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MilkPail", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write103_Axe(string n, string ns, Axe o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Axe)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Axe", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			NetInt additionalPower = o.additionalPower;
			if (additionalPower != null)
			{
				WriteStartElement("additionalPower", "", null, writePrefixed: false);
				IEnumerator enumerator18 = additionalPower.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num9));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write104_Wand(string n, string ns, Wand o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Wand)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Wand", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteElementStringRaw("charged", "", XmlConvert.ToString(o.charged));
			WriteEndElement(o);
		}

		private void Write105_Hoe(string n, string ns, Hoe o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Hoe)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Hoe", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write106_FishingRod(string n, string ns, FishingRod o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishingRod)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishingRod", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write107_Pan(string n, string ns, Pan o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Pan)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Pan", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write108_Pickaxe(string n, string ns, Pickaxe o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Pickaxe)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Pickaxe", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			NetInt additionalPower = o.additionalPower;
			if (additionalPower != null)
			{
				WriteStartElement("additionalPower", "", null, writePrefixed: false);
				IEnumerator enumerator18 = additionalPower.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num9));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write109_WateringCan(string n, string ns, WateringCan o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WateringCan)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WateringCan", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			NetBool isBottomless = o.isBottomless;
			if (isBottomless != null)
			{
				IEnumerator enumerator18 = isBottomless.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						bool flag5 = (bool)enumerator18.Current;
						WriteElementStringRaw("isBottomless", "", XmlConvert.ToString(flag5));
					}
				}
			}
			WriteElementStringRaw("waterCanMax", "", XmlConvert.ToString(o.waterCanMax));
			WriteElementStringRaw("WaterLeft", "", XmlConvert.ToString(o.WaterLeft));
			WriteElementStringRaw("IsBottomless", "", XmlConvert.ToString(o.IsBottomless));
			WriteEndElement(o);
		}

		private void Write110_Slingshot(string n, string ns, Slingshot o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Slingshot)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Slingshot", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write111_GenericTool(string n, string ns, GenericTool o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GenericTool)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GenericTool", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteElementString("description", "", o.description);
			WriteEndElement(o);
		}

		private void Write113_MeleeWeapon(string n, string ns, MeleeWeapon o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MeleeWeapon)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MeleeWeapon", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			NetInt type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator18 = type2.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("type", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetInt minDamage = o.minDamage;
			if (minDamage != null)
			{
				IEnumerator enumerator19 = minDamage.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num10 = (int)enumerator19.Current;
						WriteElementStringRaw("minDamage", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt maxDamage = o.maxDamage;
			if (maxDamage != null)
			{
				IEnumerator enumerator20 = maxDamage.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num11 = (int)enumerator20.Current;
						WriteElementStringRaw("maxDamage", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt speed = o.speed;
			if (speed != null)
			{
				IEnumerator enumerator21 = speed.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						int num12 = (int)enumerator21.Current;
						WriteElementStringRaw("speed", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt addedPrecision = o.addedPrecision;
			if (addedPrecision != null)
			{
				IEnumerator enumerator22 = addedPrecision.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						int num13 = (int)enumerator22.Current;
						WriteElementStringRaw("addedPrecision", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt addedDefense = o.addedDefense;
			if (addedDefense != null)
			{
				IEnumerator enumerator23 = addedDefense.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						int num14 = (int)enumerator23.Current;
						WriteElementStringRaw("addedDefense", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt addedAreaOfEffect = o.addedAreaOfEffect;
			if (addedAreaOfEffect != null)
			{
				IEnumerator enumerator24 = addedAreaOfEffect.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						int num15 = (int)enumerator24.Current;
						WriteElementStringRaw("addedAreaOfEffect", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetFloat knockback = o.knockback;
			if (knockback != null)
			{
				IEnumerator enumerator25 = knockback.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						float num16 = (float)enumerator25.Current;
						WriteElementStringRaw("knockback", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetFloat critChance = o.critChance;
			if (critChance != null)
			{
				IEnumerator enumerator26 = critChance.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						float num17 = (float)enumerator26.Current;
						WriteElementStringRaw("critChance", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetFloat critMultiplier = o.critMultiplier;
			if (critMultiplier != null)
			{
				IEnumerator enumerator27 = critMultiplier.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						float num18 = (float)enumerator27.Current;
						WriteElementStringRaw("critMultiplier", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetInt appearance = o.appearance;
			if (appearance != null)
			{
				IEnumerator enumerator28 = appearance.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num19 = (int)enumerator28.Current;
						WriteElementStringRaw("appearance", "", XmlConvert.ToString(num19));
					}
				}
			}
			WriteElementStringRaw("isOnSpecial", "", XmlConvert.ToString(o.isOnSpecial));
			WriteEndElement(o);
		}

		private void Write312_Blueprints(string n, string ns, Blueprints o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Blueprints)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Blueprints", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write313_Lantern(string n, string ns, Lantern o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Lantern)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Lantern", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteElementStringRaw("fuelLeft", "", XmlConvert.ToString(o.fuelLeft));
			WriteElementStringRaw("on", "", XmlConvert.ToString(o.on));
			WriteEndElement(o);
		}

		private void Write314_Raft(string n, string ns, Raft o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Raft)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Raft", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteEndElement(o);
		}

		private void Write316_Seeds(string n, string ns, Seeds o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Seeds)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Seeds", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteElementStringRaw("NumberInStack", "", XmlConvert.ToString(o.NumberInStack));
			WriteElementString("SeedType", "", o.SeedType);
			WriteEndElement(o);
		}

		private void Write315_Stackable(string n, string ns, Stackable o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (!(type == typeof(Stackable)))
				{
					if (!(type == typeof(Seeds)))
					{
						throw CreateUnknownTypeException(o);
					}
					Write316_Seeds(n, ns, (Seeds)o, isNullable, needType: true);
				}
			}
		}

		private void Write317_Sword(string n, string ns, Sword o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Sword)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Sword", "");
			}
			WriteElementStringRaw("isLostItem", "", XmlConvert.ToString(o.isLostItem));
			NetInt category = o.category;
			if (category != null)
			{
				IEnumerator enumerator = category.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("category", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool hasbeenInInventory = o.hasbeenInInventory;
			if (hasbeenInInventory != null)
			{
				IEnumerator enumerator2 = hasbeenInInventory.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("hasBeenInInventory", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString netName = o.netName;
			if (netName != null)
			{
				IEnumerator enumerator3 = netName.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			if (o.ShouldSerializeparentSheetIndex())
			{
				NetInt parentSheetIndex = o.parentSheetIndex;
				if (parentSheetIndex != null)
				{
					IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
					if (enumerator4 != null)
					{
						while (enumerator4.MoveNext())
						{
							int num2 = (int)enumerator4.Current;
							WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num2));
						}
					}
				}
			}
			WriteElementStringRaw("specialItem", "", XmlConvert.ToString(o.specialItem));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("SpecialVariable", "", XmlConvert.ToString(o.SpecialVariable));
			WriteElementString("DisplayName", "", o.DisplayName);
			WriteElementString("Name", "", o.Name);
			WriteElementStringRaw("Stack", "", XmlConvert.ToString(o.Stack));
			NetInt initialParentTileIndex = o.initialParentTileIndex;
			if (initialParentTileIndex != null)
			{
				IEnumerator enumerator6 = initialParentTileIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("initialParentTileIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentParentTileIndex = o.currentParentTileIndex;
			if (currentParentTileIndex != null)
			{
				IEnumerator enumerator7 = currentParentTileIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num4 = (int)enumerator7.Current;
						WriteElementStringRaw("currentParentTileIndex", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt indexOfMenuItemView = o.indexOfMenuItemView;
			if (indexOfMenuItemView != null)
			{
				IEnumerator enumerator8 = indexOfMenuItemView.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num5 = (int)enumerator8.Current;
						WriteElementStringRaw("indexOfMenuItemView", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool stackable = o.stackable;
			if (stackable != null)
			{
				IEnumerator enumerator9 = stackable.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("stackable", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool instantUse = o.instantUse;
			if (instantUse != null)
			{
				IEnumerator enumerator10 = instantUse.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag3 = (bool)enumerator10.Current;
						WriteElementStringRaw("instantUse", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isEfficient = o.isEfficient;
			if (isEfficient != null)
			{
				IEnumerator enumerator11 = isEfficient.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag4 = (bool)enumerator11.Current;
						WriteElementStringRaw("isEfficient", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetFloat animationSpeedModifier = o.animationSpeedModifier;
			if (animationSpeedModifier != null)
			{
				IEnumerator enumerator12 = animationSpeedModifier.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						float num6 = (float)enumerator12.Current;
						WriteElementStringRaw("animationSpeedModifier", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				IEnumerator enumerator13 = upgradeLevel.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num7 = (int)enumerator13.Current;
						WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt numAttachmentSlots = o.numAttachmentSlots;
			if (numAttachmentSlots != null)
			{
				IEnumerator enumerator14 = numAttachmentSlots.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num8 = (int)enumerator14.Current;
						WriteElementStringRaw("numAttachmentSlots", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetObjectArray<StardewValley.Object> attachments = o.attachments;
			if (attachments != null)
			{
				WriteStartElement("attachments", "", null, writePrefixed: false);
				IEnumerator enumerator15 = attachments.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator15.Current;
						Write142_Object("Object", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetList<BaseEnchantment, NetRef<BaseEnchantment>> enchantments = o.enchantments;
			if (enchantments != null)
			{
				IEnumerator enumerator16 = enchantments.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						BaseEnchantment o3 = (BaseEnchantment)enumerator16.Current;
						Write99_BaseEnchantment("enchantments", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetStringList previousEnchantments = o.previousEnchantments;
			if (previousEnchantments != null)
			{
				IEnumerator enumerator17 = previousEnchantments.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value2 = (string)enumerator17.Current;
						WriteElementString("previousEnchantments", "", value2);
					}
				}
			}
			WriteElementString("BaseName", "", o.BaseName);
			WriteElementStringRaw("InitialParentTileIndex", "", XmlConvert.ToString(o.InitialParentTileIndex));
			WriteElementStringRaw("IndexOfMenuItemView", "", XmlConvert.ToString(o.IndexOfMenuItemView));
			WriteElementStringRaw("InstantUse", "", XmlConvert.ToString(o.InstantUse));
			WriteElementStringRaw("IsEfficient", "", XmlConvert.ToString(o.IsEfficient));
			WriteElementStringRaw("AnimationSpeedModifier", "", XmlConvert.ToString(o.AnimationSpeedModifier));
			WriteElementStringRaw("Stackable", "", XmlConvert.ToString(o.Stackable));
			WriteElementStringRaw("whichUpgrade", "", XmlConvert.ToString(o.whichUpgrade));
			WriteEndElement(o);
		}

		private void Write112_Tool(string n, string ns, Tool o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(Tool))
				{
					return;
				}
				if (type == typeof(Sword))
				{
					Write317_Sword(n, ns, (Sword)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Stackable))
				{
					Write315_Stackable(n, ns, (Stackable)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Seeds))
				{
					Write316_Seeds(n, ns, (Seeds)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Raft))
				{
					Write314_Raft(n, ns, (Raft)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Lantern))
				{
					Write313_Lantern(n, ns, (Lantern)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Blueprints))
				{
					Write312_Blueprints(n, ns, (Blueprints)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(MeleeWeapon))
				{
					Write113_MeleeWeapon(n, ns, (MeleeWeapon)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(GenericTool))
				{
					Write111_GenericTool(n, ns, (GenericTool)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Slingshot))
				{
					Write110_Slingshot(n, ns, (Slingshot)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(WateringCan))
				{
					Write109_WateringCan(n, ns, (WateringCan)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Pickaxe))
				{
					Write108_Pickaxe(n, ns, (Pickaxe)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Pan))
				{
					Write107_Pan(n, ns, (Pan)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(FishingRod))
				{
					Write106_FishingRod(n, ns, (FishingRod)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Hoe))
				{
					Write105_Hoe(n, ns, (Hoe)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Wand))
				{
					Write104_Wand(n, ns, (Wand)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Axe))
				{
					Write103_Axe(n, ns, (Axe)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(MilkPail))
				{
					Write102_MilkPail(n, ns, (MilkPail)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Shears))
				{
					Write101_Shears(n, ns, (Shears)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(MagnifyingGlass)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write100_MagnifyingGlass(n, ns, (MagnifyingGlass)o, isNullable, needType: true);
			}
		}

		private void Write135_LargeTerrainFeature(string n, string ns, LargeTerrainFeature o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (!(type == typeof(LargeTerrainFeature)))
				{
					if (!(type == typeof(Bush)))
					{
						throw CreateUnknownTypeException(o);
					}
					Write136_Bush(n, ns, (Bush)o, isNullable, needType: true);
				}
			}
		}

		private void Write132_ResourceClump(string n, string ns, ResourceClump o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ResourceClump)))
				{
					if (type == typeof(GiantCrop))
					{
						Write133_GiantCrop(n, ns, (GiantCrop)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ResourceClump", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt width = o.width;
			if (width != null)
			{
				IEnumerator enumerator2 = width.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("width", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt height = o.height;
			if (height != null)
			{
				IEnumerator enumerator3 = height.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("height", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt parentSheetIndex = o.parentSheetIndex;
			if (parentSheetIndex != null)
			{
				IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetFloat health = o.health;
			if (health != null)
			{
				IEnumerator enumerator5 = health.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						float num4 = (float)enumerator5.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetVector2 tile = o.tile;
			if (tile != null)
			{
				IEnumerator enumerator6 = tile.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tile", "", o2, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write133_GiantCrop(string n, string ns, GiantCrop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GiantCrop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GiantCrop", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt width = o.width;
			if (width != null)
			{
				IEnumerator enumerator2 = width.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("width", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt height = o.height;
			if (height != null)
			{
				IEnumerator enumerator3 = height.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("height", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt parentSheetIndex = o.parentSheetIndex;
			if (parentSheetIndex != null)
			{
				IEnumerator enumerator4 = parentSheetIndex.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("parentSheetIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetFloat health = o.health;
			if (health != null)
			{
				IEnumerator enumerator5 = health.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						float num4 = (float)enumerator5.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetVector2 tile = o.tile;
			if (tile != null)
			{
				IEnumerator enumerator6 = tile.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator6.Current;
						Write33_Vector2("tile", "", o2, needType: false);
					}
				}
			}
			NetInt which = o.which;
			if (which != null)
			{
				IEnumerator enumerator7 = which.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num5 = (int)enumerator7.Current;
						WriteElementStringRaw("which", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetBool forSale = o.forSale;
			if (forSale != null)
			{
				IEnumerator enumerator8 = forSale.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag = (bool)enumerator8.Current;
						WriteElementStringRaw("forSale", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write168_NPC(string n, string ns, NPC o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NPC)))
				{
					if (type == typeof(JunimoHarvester))
					{
						Write391_JunimoHarvester(n, ns, (JunimoHarvester)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Junimo))
					{
						Write390_Junimo(n, ns, (Junimo)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Horse))
					{
						Write389_Horse(n, ns, (Horse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Child))
					{
						Write387_Child(n, ns, (Child)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Pet))
					{
						Write385_Pet(n, ns, (Pet)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Dog))
					{
						Write388_Dog(n, ns, (Dog)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cat))
					{
						Write386_Cat(n, ns, (Cat)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TrashBear))
					{
						Write384_TrashBear(n, ns, (TrashBear)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Monster))
					{
						Write169_Monster(n, ns, (Monster)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GreenSlime))
					{
						Write375_GreenSlime(n, ns, (GreenSlime)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowGuy))
					{
						Write374_ShadowGuy(n, ns, (ShadowGuy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Ghost))
					{
						Write372_Ghost(n, ns, (Ghost)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Duggy))
					{
						Write371_Duggy(n, ns, (Duggy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RockCrab))
					{
						Write370_RockCrab(n, ns, (RockCrab)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LavaCrab))
					{
						Write369_LavaCrab(n, ns, (LavaCrab)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SquidKid))
					{
						Write368_SquidKid(n, ns, (SquidKid)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowGirl))
					{
						Write367_ShadowGirl(n, ns, (ShadowGirl)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RockGolem))
					{
						Write366_RockGolem(n, ns, (RockGolem)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Grub))
					{
						Write365_Grub(n, ns, (Grub)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Fly))
					{
						Write364_Fly(n, ns, (Fly)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Bat))
					{
						Write363_Bat(n, ns, (Bat)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DustSpirit))
					{
						Write362_DustSpirit(n, ns, (DustSpirit)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Skeleton))
					{
						Write361_Skeleton(n, ns, (Skeleton)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowShaman))
					{
						Write360_ShadowShaman(n, ns, (ShadowShaman)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowBrute))
					{
						Write359_ShadowBrute(n, ns, (ShadowBrute)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Serpent))
					{
						Write358_Serpent(n, ns, (Serpent)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Mummy))
					{
						Write356_Mummy(n, ns, (Mummy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BigSlime))
					{
						Write355_BigSlime(n, ns, (BigSlime)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Bug))
					{
						Write354_Bug(n, ns, (Bug)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DinoMonster))
					{
						Write352_DinoMonster(n, ns, (DinoMonster)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BlueSquid))
					{
						Write351_BlueSquid(n, ns, (BlueSquid)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DwarvishSentry))
					{
						Write350_DwarvishSentry(n, ns, (DwarvishSentry)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Spiker))
					{
						Write349_Spiker(n, ns, (Spiker)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Shooter))
					{
						Write348_Shooter(n, ns, (Shooter)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Leaper))
					{
						Write347_Leaper(n, ns, (Leaper)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LavaLurk))
					{
						Write345_LavaLurk(n, ns, (LavaLurk)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MetalHead))
					{
						Write343_MetalHead(n, ns, (MetalHead)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(HotHead))
					{
						Write344_HotHead(n, ns, (HotHead)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AngryRoger))
					{
						Write342_AngryRoger(n, ns, (AngryRoger)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NPC", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			WriteEndElement(o);
		}

		private void Write167_Item(string n, string ns, KeyValuePair<int, SchedulePathDescription> o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(KeyValuePair<int, SchedulePathDescription>)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("KeyValuePairOfInt32SchedulePathDescription", "");
			}
			WriteEndElement(o);
		}

		private void Write342_AngryRoger(string n, string ns, AngryRoger o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AngryRoger)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AngryRoger", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write344_HotHead(string n, string ns, HotHead o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(HotHead)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("HotHead", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetColor c = o.c;
			if (c != null)
			{
				IEnumerator enumerator43 = c.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Color o2 = (Color)enumerator43.Current;
						Write34_Color("c", "", o2, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write343_MetalHead(string n, string ns, MetalHead o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MetalHead)))
				{
					if (type == typeof(HotHead))
					{
						Write344_HotHead(n, ns, (HotHead)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MetalHead", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetColor c = o.c;
			if (c != null)
			{
				IEnumerator enumerator43 = c.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Color o2 = (Color)enumerator43.Current;
						Write34_Color("c", "", o2, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write345_LavaLurk(string n, string ns, LavaLurk o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LavaLurk)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LavaLurk", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write347_Leaper(string n, string ns, Leaper o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Leaper)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Leaper", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetFloat leapDuration = o.leapDuration;
			if (leapDuration != null)
			{
				WriteStartElement("leapDuration", "", null, writePrefixed: false);
				IEnumerator enumerator43 = leapDuration.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						float num21 = (float)enumerator43.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			NetFloat leapProgress = o.leapProgress;
			if (leapProgress != null)
			{
				WriteStartElement("leapProgress", "", null, writePrefixed: false);
				IEnumerator enumerator44 = leapProgress.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						float num22 = (float)enumerator44.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num22));
					}
				}
				WriteEndElement();
			}
			NetBool leaping = o.leaping;
			if (leaping != null)
			{
				WriteStartElement("leaping", "", null, writePrefixed: false);
				IEnumerator enumerator45 = leaping.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						bool flag16 = (bool)enumerator45.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			NetVector2 leapStartPosition = o.leapStartPosition;
			if (leapStartPosition != null)
			{
				WriteStartElement("leapStartPosition", "", null, writePrefixed: false);
				IEnumerator enumerator46 = leapStartPosition.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator46.Current;
						Write33_Vector2("Vector2", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2 leapEndPosition = o.leapEndPosition;
			if (leapEndPosition != null)
			{
				WriteStartElement("leapEndPosition", "", null, writePrefixed: false);
				IEnumerator enumerator47 = leapEndPosition.GetEnumerator();
				if (enumerator47 != null)
				{
					while (enumerator47.MoveNext())
					{
						Vector2 o3 = (Vector2)enumerator47.Current;
						Write33_Vector2("Vector2", "", o3, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("nextLeap", "", XmlConvert.ToString(o.nextLeap));
			WriteEndElement(o);
		}

		private void Write348_Shooter(string n, string ns, Shooter o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Shooter)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Shooter", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool shooting = o.shooting;
			if (shooting != null)
			{
				WriteStartElement("shooting", "", null, writePrefixed: false);
				IEnumerator enumerator43 = shooting.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag16 = (bool)enumerator43.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("shotsLeft", "", XmlConvert.ToString(o.shotsLeft));
			WriteElementStringRaw("nextShot", "", XmlConvert.ToString(o.nextShot));
			WriteElementStringRaw("projectileSpeed", "", XmlConvert.ToString(o.projectileSpeed));
			WriteElementStringRaw("projectileDebuff", "", XmlConvert.ToString(o.projectileDebuff));
			WriteElementStringRaw("numberOfShotsPerFire", "", XmlConvert.ToString(o.numberOfShotsPerFire));
			WriteElementStringRaw("aimTime", "", XmlConvert.ToString(o.aimTime));
			WriteElementStringRaw("burstTime", "", XmlConvert.ToString(o.burstTime));
			WriteElementStringRaw("aimEndTime", "", XmlConvert.ToString(o.aimEndTime));
			WriteElementStringRaw("firedProjectile", "", XmlConvert.ToString(o.firedProjectile));
			WriteElementString("damageSound", "", o.damageSound);
			WriteElementString("fireSound", "", o.fireSound);
			WriteElementStringRaw("projectileRange", "", XmlConvert.ToString(o.projectileRange));
			WriteElementStringRaw("desiredDistance", "", XmlConvert.ToString(o.desiredDistance));
			WriteElementStringRaw("fireRange", "", XmlConvert.ToString(o.fireRange));
			WriteEndElement(o);
		}

		private void Write349_Spiker(string n, string ns, Spiker o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Spiker)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Spiker", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write350_DwarvishSentry(string n, string ns, DwarvishSentry o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DwarvishSentry)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DwarvishSentry", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write351_BlueSquid(string n, string ns, BlueSquid o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BlueSquid)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BlueSquid", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteElementStringRaw("nextFire", "", XmlConvert.ToString(o.nextFire));
			WriteElementStringRaw("squidYOffset", "", XmlConvert.ToString(o.squidYOffset));
			WriteElementStringRaw("canMoveTimer", "", XmlConvert.ToString(o.canMoveTimer));
			NetFloat projectileIntroTimer = o.projectileIntroTimer;
			if (projectileIntroTimer != null)
			{
				WriteStartElement("projectileIntroTimer", "", null, writePrefixed: false);
				IEnumerator enumerator43 = projectileIntroTimer.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						float num21 = (float)enumerator43.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			NetFloat projectileOutroTimer = o.projectileOutroTimer;
			if (projectileOutroTimer != null)
			{
				WriteStartElement("projectileOutroTimer", "", null, writePrefixed: false);
				IEnumerator enumerator44 = projectileOutroTimer.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						float num22 = (float)enumerator44.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num22));
					}
				}
				WriteEndElement();
			}
			NetBool nearFarmer = o.nearFarmer;
			if (nearFarmer != null)
			{
				WriteStartElement("nearFarmer", "", null, writePrefixed: false);
				IEnumerator enumerator45 = nearFarmer.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						bool flag16 = (bool)enumerator45.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			NetFloat lastRotation = o.lastRotation;
			if (lastRotation != null)
			{
				WriteStartElement("lastRotation", "", null, writePrefixed: false);
				IEnumerator enumerator46 = lastRotation.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						float num23 = (float)enumerator46.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num23));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write352_DinoMonster(string n, string ns, DinoMonster o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DinoMonster)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DinoMonster", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteElementStringRaw("timeUntilNextAttack", "", XmlConvert.ToString(o.timeUntilNextAttack));
			NetBool firing = o.firing;
			if (firing != null)
			{
				WriteStartElement("firing", "", null, writePrefixed: false);
				IEnumerator enumerator43 = firing.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag16 = (bool)enumerator43.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			NetInt attackState = o.attackState;
			if (attackState != null)
			{
				WriteStartElement("attackState", "", null, writePrefixed: false);
				IEnumerator enumerator44 = attackState.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						int num21 = (int)enumerator44.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("nextFireTime", "", XmlConvert.ToString(o.nextFireTime));
			WriteElementStringRaw("totalFireTime", "", XmlConvert.ToString(o.totalFireTime));
			WriteElementStringRaw("nextChangeDirectionTime", "", XmlConvert.ToString(o.nextChangeDirectionTime));
			WriteElementStringRaw("nextWanderTime", "", XmlConvert.ToString(o.nextWanderTime));
			WriteElementStringRaw("wanderState", "", XmlConvert.ToString(o.wanderState));
			WriteEndElement(o);
		}

		private void Write354_Bug(string n, string ns, Bug o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Bug)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Bug", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isArmoredBug = o.isArmoredBug;
			if (isArmoredBug != null)
			{
				IEnumerator enumerator43 = isArmoredBug.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag16 = (bool)enumerator43.Current;
						WriteElementStringRaw("isArmoredBug", "", XmlConvert.ToString(flag16));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write355_BigSlime(string n, string ns, BigSlime o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BigSlime)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BigSlime", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetColor c = o.c;
			if (c != null)
			{
				IEnumerator enumerator43 = c.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Color o2 = (Color)enumerator43.Current;
						Write34_Color("c", "", o2, needType: false);
					}
				}
			}
			NetRef<StardewValley.Object> heldObject = o.heldObject;
			if (heldObject != null)
			{
				IEnumerator enumerator44 = heldObject.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						StardewValley.Object o3 = (StardewValley.Object)enumerator44.Current;
						Write142_Object("heldObject", "", o3, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write356_Mummy(string n, string ns, Mummy o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Mummy)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Mummy", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetInt reviveTimer = o.reviveTimer;
			if (reviveTimer != null)
			{
				WriteStartElement("reviveTimer", "", null, writePrefixed: false);
				IEnumerator enumerator43 = reviveTimer.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						int num21 = (int)enumerator43.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write358_Serpent(string n, string ns, Serpent o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Serpent)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Serpent", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			List<Vector3> segments = o.segments;
			if (segments != null)
			{
				WriteStartElement("segments", "", null, writePrefixed: false);
				for (int j = 0; j < ((ICollection)segments).Count; j++)
				{
					Write357_Vector3("Vector3", "", segments[j], needType: false);
				}
				WriteEndElement();
			}
			NetInt segmentCount = o.segmentCount;
			if (segmentCount != null)
			{
				WriteStartElement("segmentCount", "", null, writePrefixed: false);
				IEnumerator enumerator43 = segmentCount.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						int num21 = (int)enumerator43.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write357_Vector3(string n, string ns, Vector3 o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector3)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector3", "");
			}
			WriteElementStringRaw("X", "", XmlConvert.ToString(o.X));
			WriteElementStringRaw("Y", "", XmlConvert.ToString(o.Y));
			WriteElementStringRaw("Z", "", XmlConvert.ToString(o.Z));
			WriteEndElement(o);
		}

		private void Write359_ShadowBrute(string n, string ns, ShadowBrute o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShadowBrute)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShadowBrute", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write360_ShadowShaman(string n, string ns, ShadowShaman o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShadowShaman)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShadowShaman", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write361_Skeleton(string n, string ns, Skeleton o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Skeleton)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Skeleton", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool isMage = o.isMage;
			if (isMage != null)
			{
				WriteStartElement("isMage", "", null, writePrefixed: false);
				IEnumerator enumerator43 = isMage.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag16 = (bool)enumerator43.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write362_DustSpirit(string n, string ns, DustSpirit o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DustSpirit)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DustSpirit", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteElementStringRaw("voice", "", XmlConvert.ToString(o.voice));
			WriteEndElement(o);
		}

		private void Write363_Bat(string n, string ns, Bat o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Bat)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Bat", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool cursedDoll = o.cursedDoll;
			if (cursedDoll != null)
			{
				WriteStartElement("cursedDoll", "", null, writePrefixed: false);
				IEnumerator enumerator43 = cursedDoll.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag16 = (bool)enumerator43.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			NetBool hauntedSkull = o.hauntedSkull;
			if (hauntedSkull != null)
			{
				WriteStartElement("hauntedSkull", "", null, writePrefixed: false);
				IEnumerator enumerator44 = hauntedSkull.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag17 = (bool)enumerator44.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag17));
					}
				}
				WriteEndElement();
			}
			NetBool magmaSprite = o.magmaSprite;
			if (magmaSprite != null)
			{
				WriteStartElement("magmaSprite", "", null, writePrefixed: false);
				IEnumerator enumerator45 = magmaSprite.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						bool flag18 = (bool)enumerator45.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag18));
					}
				}
				WriteEndElement();
			}
			NetBool canLunge = o.canLunge;
			if (canLunge != null)
			{
				WriteStartElement("canLunge", "", null, writePrefixed: false);
				IEnumerator enumerator46 = canLunge.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						bool flag19 = (bool)enumerator46.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag19));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lungeFrequency", "", XmlConvert.ToString(o.lungeFrequency));
			WriteElementStringRaw("lungeChargeTime", "", XmlConvert.ToString(o.lungeChargeTime));
			WriteElementStringRaw("lungeSpeed", "", XmlConvert.ToString(o.lungeSpeed));
			WriteElementStringRaw("lungeDecelerationTicks", "", XmlConvert.ToString(o.lungeDecelerationTicks));
			WriteElementStringRaw("nextLunge", "", XmlConvert.ToString(o.nextLunge));
			WriteElementStringRaw("lungeTimer", "", XmlConvert.ToString(o.lungeTimer));
			Write33_Vector2("lungeVelocity", "", o.lungeVelocity, needType: false);
			WriteEndElement(o);
		}

		private void Write364_Fly(string n, string ns, Fly o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Fly)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Fly", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteElementStringRaw("hard", "", XmlConvert.ToString(o.hard));
			WriteEndElement(o);
		}

		private void Write365_Grub(string n, string ns, Grub o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Grub)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Grub", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetBool hard = o.hard;
			if (hard != null)
			{
				IEnumerator enumerator43 = hard.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag16 = (bool)enumerator43.Current;
						WriteElementStringRaw("hard", "", XmlConvert.ToString(flag16));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write366_RockGolem(string n, string ns, RockGolem o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(RockGolem)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("RockGolem", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write367_ShadowGirl(string n, string ns, ShadowGirl o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShadowGirl)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShadowGirl", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write368_SquidKid(string n, string ns, SquidKid o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SquidKid)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SquidKid", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write369_LavaCrab(string n, string ns, LavaCrab o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LavaCrab)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LavaCrab", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write370_RockCrab(string n, string ns, RockCrab o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(RockCrab)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("RockCrab", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write371_Duggy(string n, string ns, Duggy o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Duggy)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Duggy", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write372_Ghost(string n, string ns, Ghost o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Ghost)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Ghost", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetInt currentState = o.currentState;
			if (currentState != null)
			{
				WriteStartElement("currentState", "", null, writePrefixed: false);
				IEnumerator enumerator43 = currentState.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						int num21 = (int)enumerator43.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stateTimer", "", XmlConvert.ToString(o.stateTimer));
			WriteElementStringRaw("nextParticle", "", XmlConvert.ToString(o.nextParticle));
			NetEnum<Ghost.GhostVariant> variant = o.variant;
			if (variant != null)
			{
				WriteStartElement("variant", "", null, writePrefixed: false);
				IEnumerator enumerator44 = variant.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						string value7 = (string)enumerator44.Current;
						WriteNullableStringLiteral("string", "", value7);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write374_ShadowGuy(string n, string ns, ShadowGuy o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShadowGuy)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShadowGuy", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write375_GreenSlime(string n, string ns, GreenSlime o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GreenSlime)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GreenSlime", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			NetIntDelta stackedSlimes = o.stackedSlimes;
			if (stackedSlimes != null)
			{
				WriteStartElement("stackedSlimes", "", null, writePrefixed: false);
				IEnumerator enumerator43 = stackedSlimes.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						int num21 = (int)enumerator43.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num21));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("randomStackOffset", "", XmlConvert.ToString(o.randomStackOffset));
			NetBool leftDrift = o.leftDrift;
			if (leftDrift != null)
			{
				IEnumerator enumerator44 = leftDrift.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						bool flag16 = (bool)enumerator44.Current;
						WriteElementStringRaw("leftDrift", "", XmlConvert.ToString(flag16));
					}
				}
			}
			NetBool cute = o.cute;
			if (cute != null)
			{
				IEnumerator enumerator45 = cute.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						bool flag17 = (bool)enumerator45.Current;
						WriteElementStringRaw("cute", "", XmlConvert.ToString(flag17));
					}
				}
			}
			WriteElementStringRaw("readyToMate", "", XmlConvert.ToString(o.readyToMate));
			NetInt ageUntilFullGrown = o.ageUntilFullGrown;
			if (ageUntilFullGrown != null)
			{
				IEnumerator enumerator46 = ageUntilFullGrown.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						int num22 = (int)enumerator46.Current;
						WriteElementStringRaw("ageUntilFullGrown", "", XmlConvert.ToString(num22));
					}
				}
			}
			WriteElementStringRaw("animateTimer", "", XmlConvert.ToString(o.animateTimer));
			WriteElementStringRaw("timeSinceLastJump", "", XmlConvert.ToString(o.timeSinceLastJump));
			NetInt specialNumber = o.specialNumber;
			if (specialNumber != null)
			{
				IEnumerator enumerator47 = specialNumber.GetEnumerator();
				if (enumerator47 != null)
				{
					while (enumerator47.MoveNext())
					{
						int num23 = (int)enumerator47.Current;
						WriteElementStringRaw("specialNumber", "", XmlConvert.ToString(num23));
					}
				}
			}
			NetBool firstGeneration = o.firstGeneration;
			if (firstGeneration != null)
			{
				IEnumerator enumerator48 = firstGeneration.GetEnumerator();
				if (enumerator48 != null)
				{
					while (enumerator48.MoveNext())
					{
						bool flag18 = (bool)enumerator48.Current;
						WriteElementStringRaw("firstGeneration", "", XmlConvert.ToString(flag18));
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator49 = color.GetEnumerator();
				if (enumerator49 != null)
				{
					while (enumerator49.MoveNext())
					{
						Color o2 = (Color)enumerator49.Current;
						Write34_Color("color", "", o2, needType: false);
					}
				}
			}
			NetBool prismatic = o.prismatic;
			if (prismatic != null)
			{
				WriteStartElement("prismatic", "", null, writePrefixed: false);
				IEnumerator enumerator50 = prismatic.GetEnumerator();
				if (enumerator50 != null)
				{
					while (enumerator50.MoveNext())
					{
						bool flag19 = (bool)enumerator50.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag19));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write169_Monster(string n, string ns, Monster o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Monster)))
				{
					if (type == typeof(GreenSlime))
					{
						Write375_GreenSlime(n, ns, (GreenSlime)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowGuy))
					{
						Write374_ShadowGuy(n, ns, (ShadowGuy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Ghost))
					{
						Write372_Ghost(n, ns, (Ghost)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Duggy))
					{
						Write371_Duggy(n, ns, (Duggy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RockCrab))
					{
						Write370_RockCrab(n, ns, (RockCrab)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LavaCrab))
					{
						Write369_LavaCrab(n, ns, (LavaCrab)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SquidKid))
					{
						Write368_SquidKid(n, ns, (SquidKid)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowGirl))
					{
						Write367_ShadowGirl(n, ns, (ShadowGirl)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RockGolem))
					{
						Write366_RockGolem(n, ns, (RockGolem)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Grub))
					{
						Write365_Grub(n, ns, (Grub)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Fly))
					{
						Write364_Fly(n, ns, (Fly)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Bat))
					{
						Write363_Bat(n, ns, (Bat)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DustSpirit))
					{
						Write362_DustSpirit(n, ns, (DustSpirit)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Skeleton))
					{
						Write361_Skeleton(n, ns, (Skeleton)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowShaman))
					{
						Write360_ShadowShaman(n, ns, (ShadowShaman)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowBrute))
					{
						Write359_ShadowBrute(n, ns, (ShadowBrute)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Serpent))
					{
						Write358_Serpent(n, ns, (Serpent)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Mummy))
					{
						Write356_Mummy(n, ns, (Mummy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BigSlime))
					{
						Write355_BigSlime(n, ns, (BigSlime)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Bug))
					{
						Write354_Bug(n, ns, (Bug)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DinoMonster))
					{
						Write352_DinoMonster(n, ns, (DinoMonster)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BlueSquid))
					{
						Write351_BlueSquid(n, ns, (BlueSquid)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DwarvishSentry))
					{
						Write350_DwarvishSentry(n, ns, (DwarvishSentry)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Spiker))
					{
						Write349_Spiker(n, ns, (Spiker)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Shooter))
					{
						Write348_Shooter(n, ns, (Shooter)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Leaper))
					{
						Write347_Leaper(n, ns, (Leaper)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LavaLurk))
					{
						Write345_LavaLurk(n, ns, (LavaLurk)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MetalHead))
					{
						Write343_MetalHead(n, ns, (MetalHead)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(HotHead))
					{
						Write344_HotHead(n, ns, (HotHead)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AngryRoger))
					{
						Write342_AngryRoger(n, ns, (AngryRoger)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Monster", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				IEnumerator enumerator27 = damageToFarmer.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("damageToFarmer", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator28 = health.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num11 = (int)enumerator28.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt maxHealth = o.maxHealth;
			if (maxHealth != null)
			{
				IEnumerator enumerator29 = maxHealth.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num12 = (int)enumerator29.Current;
						WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt coinsToDrop = o.coinsToDrop;
			if (coinsToDrop != null)
			{
				IEnumerator enumerator30 = coinsToDrop.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num13 = (int)enumerator30.Current;
						WriteElementStringRaw("coinsToDrop", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt durationOfRandomMovements = o.durationOfRandomMovements;
			if (durationOfRandomMovements != null)
			{
				IEnumerator enumerator31 = durationOfRandomMovements.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						int num14 = (int)enumerator31.Current;
						WriteElementStringRaw("durationOfRandomMovements", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt resilience = o.resilience;
			if (resilience != null)
			{
				IEnumerator enumerator32 = resilience.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						int num15 = (int)enumerator32.Current;
						WriteElementStringRaw("resilience", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt slipperiness = o.slipperiness;
			if (slipperiness != null)
			{
				IEnumerator enumerator33 = slipperiness.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						int num16 = (int)enumerator33.Current;
						WriteElementStringRaw("slipperiness", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt experienceGained = o.experienceGained;
			if (experienceGained != null)
			{
				IEnumerator enumerator34 = experienceGained.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num17 = (int)enumerator34.Current;
						WriteElementStringRaw("experienceGained", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetDouble jitteriness = o.jitteriness;
			if (jitteriness != null)
			{
				IEnumerator enumerator35 = jitteriness.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						double num18 = (double)enumerator35.Current;
						WriteElementStringRaw("jitteriness", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetDouble missChance = o.missChance;
			if (missChance != null)
			{
				IEnumerator enumerator36 = missChance.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						double num19 = (double)enumerator36.Current;
						WriteElementStringRaw("missChance", "", XmlConvert.ToString(num19));
					}
				}
			}
			NetBool isGlider = o.isGlider;
			if (isGlider != null)
			{
				IEnumerator enumerator37 = isGlider.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						bool flag11 = (bool)enumerator37.Current;
						WriteElementStringRaw("isGlider", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool mineMonster = o.mineMonster;
			if (mineMonster != null)
			{
				IEnumerator enumerator38 = mineMonster.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						bool flag12 = (bool)enumerator38.Current;
						WriteElementStringRaw("mineMonster", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool hasSpecialItem = o.hasSpecialItem;
			if (hasSpecialItem != null)
			{
				IEnumerator enumerator39 = hasSpecialItem.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						bool flag13 = (bool)enumerator39.Current;
						WriteElementStringRaw("hasSpecialItem", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetIntList objectsToDrop = o.objectsToDrop;
			if (objectsToDrop != null)
			{
				WriteStartElement("objectsToDrop", "", null, writePrefixed: false);
				IEnumerator enumerator40 = objectsToDrop.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num20 = (int)enumerator40.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num20));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("stunTime", "", XmlConvert.ToString(o.stunTime));
			WriteElementStringRaw("initializedForLocation", "", XmlConvert.ToString(o.initializedForLocation));
			NetBool ignoreDamageLOS = o.ignoreDamageLOS;
			if (ignoreDamageLOS != null)
			{
				IEnumerator enumerator41 = ignoreDamageLOS.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						bool flag14 = (bool)enumerator41.Current;
						WriteElementStringRaw("ignoreDamageLOS", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool isHardModeMonster = o.isHardModeMonster;
			if (isHardModeMonster != null)
			{
				IEnumerator enumerator42 = isHardModeMonster.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						bool flag15 = (bool)enumerator42.Current;
						WriteElementStringRaw("isHardModeMonster", "", XmlConvert.ToString(flag15));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write384_TrashBear(string n, string ns, TrashBear o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(TrashBear)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TrashBear", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			WriteEndElement(o);
		}

		private void Write386_Cat(string n, string ns, Cat o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Cat)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Cat", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt whichBreed = o.whichBreed;
			if (whichBreed != null)
			{
				IEnumerator enumerator27 = whichBreed.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("whichBreed", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetBool grantedFriendshipForPet = o.grantedFriendshipForPet;
			if (grantedFriendshipForPet != null)
			{
				IEnumerator enumerator28 = grantedFriendshipForPet.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag11 = (bool)enumerator28.Current;
						WriteElementStringRaw("grantedFriendshipForPet", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetInt friendshipTowardFarmer = o.friendshipTowardFarmer;
			if (friendshipTowardFarmer != null)
			{
				IEnumerator enumerator29 = friendshipTowardFarmer.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num11 = (int)enumerator29.Current;
						WriteElementStringRaw("friendshipTowardFarmer", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetBool isSleepingOnFarmerBed = o.isSleepingOnFarmerBed;
			if (isSleepingOnFarmerBed != null)
			{
				WriteStartElement("isSleepingOnFarmerBed", "", null, writePrefixed: false);
				IEnumerator enumerator30 = isSleepingOnFarmerBed.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						bool flag12 = (bool)enumerator30.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag12));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("CurrentBehavior", "", XmlConvert.ToString(o.CurrentBehavior));
			WriteEndElement(o);
		}

		private void Write388_Dog(string n, string ns, Dog o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Dog)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Dog", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt whichBreed = o.whichBreed;
			if (whichBreed != null)
			{
				IEnumerator enumerator27 = whichBreed.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("whichBreed", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetBool grantedFriendshipForPet = o.grantedFriendshipForPet;
			if (grantedFriendshipForPet != null)
			{
				IEnumerator enumerator28 = grantedFriendshipForPet.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag11 = (bool)enumerator28.Current;
						WriteElementStringRaw("grantedFriendshipForPet", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetInt friendshipTowardFarmer = o.friendshipTowardFarmer;
			if (friendshipTowardFarmer != null)
			{
				IEnumerator enumerator29 = friendshipTowardFarmer.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num11 = (int)enumerator29.Current;
						WriteElementStringRaw("friendshipTowardFarmer", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetBool isSleepingOnFarmerBed = o.isSleepingOnFarmerBed;
			if (isSleepingOnFarmerBed != null)
			{
				WriteStartElement("isSleepingOnFarmerBed", "", null, writePrefixed: false);
				IEnumerator enumerator30 = isSleepingOnFarmerBed.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						bool flag12 = (bool)enumerator30.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag12));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("CurrentBehavior", "", XmlConvert.ToString(o.CurrentBehavior));
			WriteEndElement(o);
		}

		private void Write385_Pet(string n, string ns, Pet o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Pet)))
				{
					if (type == typeof(Dog))
					{
						Write388_Dog(n, ns, (Dog)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cat))
					{
						Write386_Cat(n, ns, (Cat)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Pet", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt whichBreed = o.whichBreed;
			if (whichBreed != null)
			{
				IEnumerator enumerator27 = whichBreed.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("whichBreed", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetBool grantedFriendshipForPet = o.grantedFriendshipForPet;
			if (grantedFriendshipForPet != null)
			{
				IEnumerator enumerator28 = grantedFriendshipForPet.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag11 = (bool)enumerator28.Current;
						WriteElementStringRaw("grantedFriendshipForPet", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetInt friendshipTowardFarmer = o.friendshipTowardFarmer;
			if (friendshipTowardFarmer != null)
			{
				IEnumerator enumerator29 = friendshipTowardFarmer.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num11 = (int)enumerator29.Current;
						WriteElementStringRaw("friendshipTowardFarmer", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetBool isSleepingOnFarmerBed = o.isSleepingOnFarmerBed;
			if (isSleepingOnFarmerBed != null)
			{
				WriteStartElement("isSleepingOnFarmerBed", "", null, writePrefixed: false);
				IEnumerator enumerator30 = isSleepingOnFarmerBed.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						bool flag12 = (bool)enumerator30.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag12));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("CurrentBehavior", "", XmlConvert.ToString(o.CurrentBehavior));
			WriteEndElement(o);
		}

		private void Write387_Child(string n, string ns, Child o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Child)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Child", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt daysOld = o.daysOld;
			if (daysOld != null)
			{
				IEnumerator enumerator27 = daysOld.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("daysOld", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetLong idOfParent = o.idOfParent;
			if (idOfParent != null)
			{
				IEnumerator enumerator28 = idOfParent.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						long num11 = (long)enumerator28.Current;
						WriteElementStringRaw("idOfParent", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetBool darkSkinned = o.darkSkinned;
			if (darkSkinned != null)
			{
				IEnumerator enumerator29 = darkSkinned.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag11 = (bool)enumerator29.Current;
						WriteElementStringRaw("darkSkinned", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetRef<Hat> hat = o.hat;
			if (hat != null)
			{
				IEnumerator enumerator30 = hat.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						Hat o2 = (Hat)enumerator30.Current;
						Write57_Hat("hat", "", o2, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write389_Horse(string n, string ns, Horse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Horse)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Horse", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetLong ownerId = o.ownerId;
			if (ownerId != null)
			{
				WriteStartElement("ownerId", "", null, writePrefixed: false);
				IEnumerator enumerator27 = ownerId.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						long num10 = (long)enumerator27.Current;
						WriteElementStringRaw("long", "", XmlConvert.ToString(num10));
					}
				}
				WriteEndElement();
			}
			NetRef<Hat> hat = o.hat;
			if (hat != null)
			{
				IEnumerator enumerator28 = hat.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						Hat o2 = (Hat)enumerator28.Current;
						Write57_Hat("hat", "", o2, isNullable: false, needType: false);
					}
				}
			}
			WriteElementStringRaw("checkActionEnabled", "", XmlConvert.ToString(o.checkActionEnabled));
			WriteElementStringRaw("HorseId", "", XmlConvert.ToString(o.HorseId));
			WriteEndElement(o);
		}

		private void Write390_Junimo(string n, string ns, Junimo o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Junimo)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Junimo", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			NetInt whichArea = o.whichArea;
			if (whichArea != null)
			{
				WriteStartElement("whichArea", "", null, writePrefixed: false);
				IEnumerator enumerator27 = whichArea.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num10 = (int)enumerator27.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num10));
					}
				}
				WriteEndElement();
			}
			NetBool friendly = o.friendly;
			if (friendly != null)
			{
				WriteStartElement("friendly", "", null, writePrefixed: false);
				IEnumerator enumerator28 = friendly.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag11 = (bool)enumerator28.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag11));
					}
				}
				WriteEndElement();
			}
			NetBool holdingStar = o.holdingStar;
			if (holdingStar != null)
			{
				WriteStartElement("holdingStar", "", null, writePrefixed: false);
				IEnumerator enumerator29 = holdingStar.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag12 = (bool)enumerator29.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag12));
					}
				}
				WriteEndElement();
			}
			NetBool holdingBundle = o.holdingBundle;
			if (holdingBundle != null)
			{
				WriteStartElement("holdingBundle", "", null, writePrefixed: false);
				IEnumerator enumerator30 = holdingBundle.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						bool flag13 = (bool)enumerator30.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag13));
					}
				}
				WriteEndElement();
			}
			NetBool temporaryJunimo = o.temporaryJunimo;
			if (temporaryJunimo != null)
			{
				WriteStartElement("temporaryJunimo", "", null, writePrefixed: false);
				IEnumerator enumerator31 = temporaryJunimo.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						bool flag14 = (bool)enumerator31.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag14));
					}
				}
				WriteEndElement();
			}
			NetBool stayPut = o.stayPut;
			if (stayPut != null)
			{
				WriteStartElement("stayPut", "", null, writePrefixed: false);
				IEnumerator enumerator32 = stayPut.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						bool flag15 = (bool)enumerator32.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag15));
					}
				}
				WriteEndElement();
			}
			NetBool eventActor = o.eventActor;
			if (eventActor != null)
			{
				WriteStartElement("eventActor", "", null, writePrefixed: false);
				IEnumerator enumerator33 = eventActor.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						bool flag16 = (bool)enumerator33.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag16));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("EventActor", "", XmlConvert.ToString(o.EventActor));
			WriteEndElement(o);
		}

		private void Write391_JunimoHarvester(string n, string ns, JunimoHarvester o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(JunimoHarvester)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("JunimoHarvester", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("lastCrossroad", "", o.lastCrossroad, needType: false);
			WriteElementStringRaw("daysAfterLastBirth", "", XmlConvert.ToString(o.daysAfterLastBirth));
			NetString birthday_Season = o.birthday_Season;
			if (birthday_Season != null)
			{
				IEnumerator enumerator6 = birthday_Season.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value2 = (string)enumerator6.Current;
						WriteElementString("birthday_Season", "", value2);
					}
				}
			}
			NetInt birthday_Day = o.birthday_Day;
			if (birthday_Day != null)
			{
				IEnumerator enumerator7 = birthday_Day.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("birthday_Day", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator8 = age.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt manners = o.manners;
			if (manners != null)
			{
				IEnumerator enumerator9 = manners.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("manners", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt socialAnxiety = o.socialAnxiety;
			if (socialAnxiety != null)
			{
				IEnumerator enumerator10 = socialAnxiety.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("socialAnxiety", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt optimism = o.optimism;
			if (optimism != null)
			{
				IEnumerator enumerator11 = optimism.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("optimism", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt gender = o.gender;
			if (gender != null)
			{
				IEnumerator enumerator12 = gender.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("gender", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool sleptInBed = o.sleptInBed;
			if (sleptInBed != null)
			{
				IEnumerator enumerator13 = sleptInBed.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag3 = (bool)enumerator13.Current;
						WriteElementStringRaw("sleptInBed", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool isInvisible = o.isInvisible;
			if (isInvisible != null)
			{
				IEnumerator enumerator14 = isInvisible.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag4 = (bool)enumerator14.Current;
						WriteElementStringRaw("isInvisible", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator15 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num8 = (int)enumerator15.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteElementStringRaw("datingFarmer", "", XmlConvert.ToString(o.datingFarmer));
			WriteElementStringRaw("divorcedFromFarmer", "", XmlConvert.ToString(o.divorcedFromFarmer));
			NetBool datable = o.datable;
			if (datable != null)
			{
				IEnumerator enumerator16 = datable.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag5 = (bool)enumerator16.Current;
						WriteElementStringRaw("datable", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString defaultMap = o.defaultMap;
			if (defaultMap != null)
			{
				IEnumerator enumerator17 = defaultMap.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("defaultMap", "", value3);
					}
				}
			}
			WriteElementString("loveInterest", "", o.loveInterest);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("homeRegion", "", XmlConvert.ToString(o.homeRegion));
			WriteElementStringRaw("daysUntilNotInvisible", "", XmlConvert.ToString(o.daysUntilNotInvisible));
			WriteElementStringRaw("followSchedule", "", XmlConvert.ToString(o.followSchedule));
			NetInt moveTowardPlayerThreshold = o.moveTowardPlayerThreshold;
			if (moveTowardPlayerThreshold != null)
			{
				IEnumerator enumerator18 = moveTowardPlayerThreshold.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("moveTowardPlayerThreshold", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool hasBeenKissedToday = o.hasBeenKissedToday;
			if (hasBeenKissedToday != null)
			{
				WriteStartElement("hasBeenKissedToday", "", null, writePrefixed: false);
				IEnumerator enumerator19 = hasBeenKissedToday.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag6 = (bool)enumerator19.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag6));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlayRobinHammerAnimation = o.shouldPlayRobinHammerAnimation;
			if (shouldPlayRobinHammerAnimation != null)
			{
				WriteStartElement("shouldPlayRobinHammerAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator20 = shouldPlayRobinHammerAnimation.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag7));
					}
				}
				WriteEndElement();
			}
			NetBool shouldPlaySpousePatioAnimation = o.shouldPlaySpousePatioAnimation;
			if (shouldPlaySpousePatioAnimation != null)
			{
				WriteStartElement("shouldPlaySpousePatioAnimation", "", null, writePrefixed: false);
				IEnumerator enumerator21 = shouldPlaySpousePatioAnimation.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool shouldWearIslandAttire = o.shouldWearIslandAttire;
			if (shouldWearIslandAttire != null)
			{
				WriteStartElement("shouldWearIslandAttire", "", null, writePrefixed: false);
				IEnumerator enumerator22 = shouldWearIslandAttire.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			NetBool isMovingOnPathFindPath = o.isMovingOnPathFindPath;
			if (isMovingOnPathFindPath != null)
			{
				WriteStartElement("isMovingOnPathFindPath", "", null, writePrefixed: false);
				IEnumerator enumerator23 = isMovingOnPathFindPath.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag10));
					}
				}
				WriteEndElement();
			}
			List<KeyValuePair<int, SchedulePathDescription>> queuedSchedulePaths = o.queuedSchedulePaths;
			if (queuedSchedulePaths != null)
			{
				WriteStartElement("queuedSchedulePaths", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)queuedSchedulePaths).Count; i++)
				{
					Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", queuedSchedulePaths[i], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lastAttemptedSchedule", "", XmlConvert.ToString(o.lastAttemptedSchedule));
			NetString dayScheduleName = o.dayScheduleName;
			if (dayScheduleName != null)
			{
				IEnumerator enumerator24 = dayScheduleName.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						string value4 = (string)enumerator24.Current;
						WriteElementString("dayScheduleName", "", value4);
					}
				}
			}
			NetString islandScheduleName = o.islandScheduleName;
			if (islandScheduleName != null)
			{
				IEnumerator enumerator25 = islandScheduleName.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						string value5 = (string)enumerator25.Current;
						WriteElementString("islandScheduleName", "", value5);
					}
				}
			}
			NetString endOfRouteBehaviorName = o.endOfRouteBehaviorName;
			if (endOfRouteBehaviorName != null)
			{
				WriteStartElement("endOfRouteBehaviorName", "", null, writePrefixed: false);
				IEnumerator enumerator26 = endOfRouteBehaviorName.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						string value6 = (string)enumerator26.Current;
						WriteNullableStringLiteral("string", "", value6);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("squareMovementFacingPreference", "", XmlConvert.ToString(o.squareMovementFacingPreference));
			WriteElementStringRaw("DefaultFacingDirection", "", XmlConvert.ToString(o.DefaultFacingDirection));
			WriteElementString("DefaultMap", "", o.DefaultMap);
			Write33_Vector2("DefaultPosition", "", o.DefaultPosition, needType: false);
			WriteElementStringRaw("IsWalkingInSquare", "", XmlConvert.ToString(o.IsWalkingInSquare));
			WriteElementStringRaw("IsWalkingTowardPlayer", "", XmlConvert.ToString(o.IsWalkingTowardPlayer));
			WriteElementStringRaw("whichJunimoFromThisHut", "", XmlConvert.ToString(o.whichJunimoFromThisHut));
			NetBool isPrismatic = o.isPrismatic;
			if (isPrismatic != null)
			{
				WriteStartElement("isPrismatic", "", null, writePrefixed: false);
				IEnumerator enumerator27 = isPrismatic.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag11 = (bool)enumerator27.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag11));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write201_Farm(string n, string ns, Farm o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Farm)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Farm", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<Building> buildings = o.buildings;
			if (buildings != null)
			{
				WriteStartElement("buildings", "", null, writePrefixed: false);
				IEnumerator enumerator20 = buildings.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Building o7 = (Building)enumerator20.Current;
						Write199_Building("Building", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			if (o.frameHouseColor.HasValue)
			{
				Write34_Color("frameHouseColor", "", o.frameHouseColor.Value, needType: false);
			}
			else
			{
				WriteNullTagLiteral("frameHouseColor", "");
			}
			NetRef<BuildingPaintColor> housePaintColor = o.housePaintColor;
			if (housePaintColor != null)
			{
				WriteStartElement("housePaintColor", "", null, writePrefixed: false);
				IEnumerator enumerator21 = housePaintColor.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						BuildingPaintColor o8 = (BuildingPaintColor)enumerator21.Current;
						Write30_BuildingPaintColor("BuildingPaintColor", "", o8, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>> animals = o.animals;
			if (animals != null)
			{
				IEnumerator enumerator22 = animals.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						SerializableDictionary<long, FarmAnimal> serializable4 = (SerializableDictionary<long, FarmAnimal>)enumerator22.Current;
						WriteSerializable(serializable4, "animals", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt piecesOfHay = o.piecesOfHay;
			if (piecesOfHay != null)
			{
				IEnumerator enumerator23 = piecesOfHay.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						int num2 = (int)enumerator23.Current;
						WriteElementStringRaw("piecesOfHay", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt grandpaScore = o.grandpaScore;
			if (grandpaScore != null)
			{
				IEnumerator enumerator24 = grandpaScore.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						int num3 = (int)enumerator24.Current;
						WriteElementStringRaw("grandpaScore", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetBool farmCaveReady = o.farmCaveReady;
			if (farmCaveReady != null)
			{
				IEnumerator enumerator25 = farmCaveReady.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag8 = (bool)enumerator25.Current;
						WriteElementStringRaw("farmCaveReady", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetCollection<Item> sharedShippingBin = o.sharedShippingBin;
			if (sharedShippingBin != null)
			{
				WriteStartElement("sharedShippingBin", "", null, writePrefixed: false);
				IEnumerator enumerator26 = sharedShippingBin.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						Item o9 = (Item)enumerator26.Current;
						Write143_Item("Item", "", o9, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			Write143_Item("lastItemShipped", "", o.lastItemShipped, isNullable: false, needType: false);
			WriteElementStringRaw("hasSeenGrandpaNote", "", XmlConvert.ToString(o.hasSeenGrandpaNote));
			NetRectangle houseSource = o.houseSource;
			if (houseSource != null)
			{
				IEnumerator enumerator27 = houseSource.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						Rectangle o10 = (Rectangle)enumerator27.Current;
						Write51_Rectangle("houseSource", "", o10, needType: false);
					}
				}
			}
			NetBool greenhouseUnlocked = o.greenhouseUnlocked;
			if (greenhouseUnlocked != null)
			{
				IEnumerator enumerator28 = greenhouseUnlocked.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag9 = (bool)enumerator28.Current;
						WriteElementStringRaw("greenhouseUnlocked", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool greenhouseMoved = o.greenhouseMoved;
			if (greenhouseMoved != null)
			{
				IEnumerator enumerator29 = greenhouseMoved.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag10 = (bool)enumerator29.Current;
						WriteElementStringRaw("greenhouseMoved", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool petBowlWatered = o.petBowlWatered;
			if (petBowlWatered != null)
			{
				WriteStartElement("petBowlWatered", "", null, writePrefixed: false);
				IEnumerator enumerator30 = petBowlWatered.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						bool flag11 = (bool)enumerator30.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag11));
					}
				}
				WriteEndElement();
			}
			Write42_Point("spousePatioSpot", "", o.spousePatioSpot, needType: false);
			NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>> animals2 = o.Animals;
			if (animals2 != null)
			{
				WriteStartElement("Animals", "", null, writePrefixed: false);
				IEnumerator enumerator31 = animals2.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						SerializableDictionary<long, FarmAnimal> serializable5 = (SerializableDictionary<long, FarmAnimal>)enumerator31.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfInt64FarmAnimal", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write199_Building(string n, string ns, Building o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Building)))
				{
					if (type == typeof(FishPond))
					{
						Write198_FishPond(n, ns, (FishPond)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GreenhouseBuilding))
					{
						Write197_GreenhouseBuilding(n, ns, (GreenhouseBuilding)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShippingBin))
					{
						Write196_ShippingBin(n, ns, (ShippingBin)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(JunimoHut))
					{
						Write195_JunimoHut(n, ns, (JunimoHut)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Mill))
					{
						Write194_Mill(n, ns, (Mill)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Stable))
					{
						Write193_Stable(n, ns, (Stable)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Barn))
					{
						Write192_Barn(n, ns, (Barn)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Coop))
					{
						Write191_Coop(n, ns, (Coop)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Building", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			WriteEndElement(o);
		}

		private void Write191_Coop(string n, string ns, Coop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Coop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Coop", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			WriteEndElement(o);
		}

		private void Write193_Stable(string n, string ns, Stable o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Stable)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Stable", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			WriteElementStringRaw("HorseId", "", XmlConvert.ToString(o.HorseId));
			WriteEndElement(o);
		}

		private void Write194_Mill(string n, string ns, Mill o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Mill)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Mill", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			NetRef<Chest> input = o.input;
			if (input != null)
			{
				IEnumerator enumerator20 = input.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Chest o7 = (Chest)enumerator20.Current;
						Write114_Chest("input", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Chest> output = o.output;
			if (output != null)
			{
				IEnumerator enumerator21 = output.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						Chest o8 = (Chest)enumerator21.Current;
						Write114_Chest("output", "", o8, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write195_JunimoHut(string n, string ns, JunimoHut o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(JunimoHut)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("JunimoHut", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			NetRef<Chest> output = o.output;
			if (output != null)
			{
				IEnumerator enumerator20 = output.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Chest o7 = (Chest)enumerator20.Current;
						Write114_Chest("output", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool noHarvest = o.noHarvest;
			if (noHarvest != null)
			{
				IEnumerator enumerator21 = noHarvest.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag4 = (bool)enumerator21.Current;
						WriteElementStringRaw("noHarvest", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool wasLit = o.wasLit;
			if (wasLit != null)
			{
				IEnumerator enumerator22 = wasLit.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag5 = (bool)enumerator22.Current;
						WriteElementStringRaw("wasLit", "", XmlConvert.ToString(flag5));
					}
				}
			}
			Write51_Rectangle("sourceRect", "", o.sourceRect, needType: false);
			NetBool shouldSendOutJunimos = o.shouldSendOutJunimos;
			if (shouldSendOutJunimos != null)
			{
				IEnumerator enumerator23 = shouldSendOutJunimos.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag6 = (bool)enumerator23.Current;
						WriteElementStringRaw("shouldSendOutJunimos", "", XmlConvert.ToString(flag6));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write196_ShippingBin(string n, string ns, ShippingBin o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShippingBin)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShippingBin", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			WriteEndElement(o);
		}

		private void Write197_GreenhouseBuilding(string n, string ns, GreenhouseBuilding o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GreenhouseBuilding)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GreenhouseBuilding", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			WriteEndElement(o);
		}

		private void Write198_FishPond(string n, string ns, FishPond o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishPond)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishPond", "");
			}
			NetRef<GameLocation> indoors = o.indoors;
			if (indoors != null)
			{
				IEnumerator enumerator = indoors.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						GameLocation o2 = (GameLocation)enumerator.Current;
						Write258_GameLocation("indoors", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator2 = tileX.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator3 = tileY.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt tilesWide = o.tilesWide;
			if (tilesWide != null)
			{
				IEnumerator enumerator4 = tilesWide.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("tilesWide", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt tilesHigh = o.tilesHigh;
			if (tilesHigh != null)
			{
				IEnumerator enumerator5 = tilesHigh.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("tilesHigh", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt maxOccupants = o.maxOccupants;
			if (maxOccupants != null)
			{
				IEnumerator enumerator6 = maxOccupants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("maxOccupants", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt currentOccupants = o.currentOccupants;
			if (currentOccupants != null)
			{
				IEnumerator enumerator7 = currentOccupants.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("currentOccupants", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetInt daysOfConstructionLeft = o.daysOfConstructionLeft;
			if (daysOfConstructionLeft != null)
			{
				IEnumerator enumerator8 = daysOfConstructionLeft.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("daysOfConstructionLeft", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysUntilUpgrade = o.daysUntilUpgrade;
			if (daysUntilUpgrade != null)
			{
				IEnumerator enumerator9 = daysUntilUpgrade.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num8 = (int)enumerator9.Current;
						WriteElementStringRaw("daysUntilUpgrade", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetString buildingType = o.buildingType;
			if (buildingType != null)
			{
				IEnumerator enumerator10 = buildingType.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("buildingType", "", value);
					}
				}
			}
			NetRef<BuildingPaintColor> netBuildingPaintColor = o.netBuildingPaintColor;
			if (netBuildingPaintColor != null)
			{
				IEnumerator enumerator11 = netBuildingPaintColor.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						BuildingPaintColor o3 = (BuildingPaintColor)enumerator11.Current;
						Write30_BuildingPaintColor("buildingPaintColor", "", o3, isNullable: false, needType: false);
					}
				}
			}
			NetPoint humanDoor = o.humanDoor;
			if (humanDoor != null)
			{
				IEnumerator enumerator12 = humanDoor.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						Point o4 = (Point)enumerator12.Current;
						Write42_Point("humanDoor", "", o4, needType: false);
					}
				}
			}
			NetPoint animalDoor = o.animalDoor;
			if (animalDoor != null)
			{
				IEnumerator enumerator13 = animalDoor.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						Point o5 = (Point)enumerator13.Current;
						Write42_Point("animalDoor", "", o5, needType: false);
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator14 = color.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						Color o6 = (Color)enumerator14.Current;
						Write34_Color("color", "", o6, needType: false);
					}
				}
			}
			NetBool animalDoorOpen = o.animalDoorOpen;
			if (animalDoorOpen != null)
			{
				IEnumerator enumerator15 = animalDoorOpen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag = (bool)enumerator15.Current;
						WriteElementStringRaw("animalDoorOpen", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool magical = o.magical;
			if (magical != null)
			{
				IEnumerator enumerator16 = magical.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag2 = (bool)enumerator16.Current;
						WriteElementStringRaw("magical", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool fadeWhenPlayerIsBehind = o.fadeWhenPlayerIsBehind;
			if (fadeWhenPlayerIsBehind != null)
			{
				IEnumerator enumerator17 = fadeWhenPlayerIsBehind.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						bool flag3 = (bool)enumerator17.Current;
						WriteElementStringRaw("fadeWhenPlayerIsBehind", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetLong owner = o.owner;
			if (owner != null)
			{
				IEnumerator enumerator18 = owner.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						long num9 = (long)enumerator18.Current;
						WriteElementStringRaw("owner", "", XmlConvert.ToString(num9));
					}
				}
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("isMoving", "", XmlConvert.ToString(o.isMoving));
			NetInt fishType = o.fishType;
			if (fishType != null)
			{
				WriteStartElement("fishType", "", null, writePrefixed: false);
				IEnumerator enumerator20 = fishType.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num10 = (int)enumerator20.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num10));
					}
				}
				WriteEndElement();
			}
			NetInt lastUnlockedPopulationGate = o.lastUnlockedPopulationGate;
			if (lastUnlockedPopulationGate != null)
			{
				WriteStartElement("lastUnlockedPopulationGate", "", null, writePrefixed: false);
				IEnumerator enumerator21 = lastUnlockedPopulationGate.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						int num11 = (int)enumerator21.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num11));
					}
				}
				WriteEndElement();
			}
			NetBool hasCompletedRequest = o.hasCompletedRequest;
			if (hasCompletedRequest != null)
			{
				WriteStartElement("hasCompletedRequest", "", null, writePrefixed: false);
				IEnumerator enumerator22 = hasCompletedRequest.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag4 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag4));
					}
				}
				WriteEndElement();
			}
			NetRef<StardewValley.Object> sign = o.sign;
			if (sign != null)
			{
				WriteStartElement("sign", "", null, writePrefixed: false);
				IEnumerator enumerator23 = sign.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						StardewValley.Object o7 = (StardewValley.Object)enumerator23.Current;
						Write142_Object("Object", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetColor overrideWaterColor = o.overrideWaterColor;
			if (overrideWaterColor != null)
			{
				WriteStartElement("overrideWaterColor", "", null, writePrefixed: false);
				IEnumerator enumerator24 = overrideWaterColor.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						Color o8 = (Color)enumerator24.Current;
						Write34_Color("Color", "", o8, needType: false);
					}
				}
				WriteEndElement();
			}
			NetRef<Item> output = o.output;
			if (output != null)
			{
				WriteStartElement("output", "", null, writePrefixed: false);
				IEnumerator enumerator25 = output.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						Item o9 = (Item)enumerator25.Current;
						Write143_Item("Item", "", o9, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetRef<StardewValley.Object> neededItem = o.neededItem;
			if (neededItem != null)
			{
				WriteStartElement("neededItem", "", null, writePrefixed: false);
				IEnumerator enumerator26 = neededItem.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						StardewValley.Object o10 = (StardewValley.Object)enumerator26.Current;
						Write142_Object("Object", "", o10, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetIntDelta neededItemCount = o.neededItemCount;
			if (neededItemCount != null)
			{
				WriteStartElement("neededItemCount", "", null, writePrefixed: false);
				IEnumerator enumerator27 = neededItemCount.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						int num12 = (int)enumerator27.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num12));
					}
				}
				WriteEndElement();
			}
			NetInt daysSinceSpawn = o.daysSinceSpawn;
			if (daysSinceSpawn != null)
			{
				WriteStartElement("daysSinceSpawn", "", null, writePrefixed: false);
				IEnumerator enumerator28 = daysSinceSpawn.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						int num13 = (int)enumerator28.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num13));
					}
				}
				WriteEndElement();
			}
			NetInt nettingStyle = o.nettingStyle;
			if (nettingStyle != null)
			{
				WriteStartElement("nettingStyle", "", null, writePrefixed: false);
				IEnumerator enumerator29 = nettingStyle.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						int num14 = (int)enumerator29.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num14));
					}
				}
				WriteEndElement();
			}
			NetInt seedOffset = o.seedOffset;
			if (seedOffset != null)
			{
				WriteStartElement("seedOffset", "", null, writePrefixed: false);
				IEnumerator enumerator30 = seedOffset.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						int num15 = (int)enumerator30.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num15));
					}
				}
				WriteEndElement();
			}
			NetBool hasSpawnedFish = o.hasSpawnedFish;
			if (hasSpawnedFish != null)
			{
				WriteStartElement("hasSpawnedFish", "", null, writePrefixed: false);
				IEnumerator enumerator31 = hasSpawnedFish.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						bool flag5 = (bool)enumerator31.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag5));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write200_BuildableGameLocation(string n, string ns, BuildableGameLocation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BuildableGameLocation)))
				{
					if (type == typeof(Farm))
					{
						Write201_Farm(n, ns, (Farm)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BuildableGameLocation", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<Building> buildings = o.buildings;
			if (buildings != null)
			{
				WriteStartElement("buildings", "", null, writePrefixed: false);
				IEnumerator enumerator20 = buildings.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Building o7 = (Building)enumerator20.Current;
						Write199_Building("Building", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write202_Beach(string n, string ns, Beach o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Beach)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Beach", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetBool bridgeFixed = o.bridgeFixed;
			if (bridgeFixed != null)
			{
				IEnumerator enumerator20 = bridgeFixed.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag8 = (bool)enumerator20.Current;
						WriteElementStringRaw("bridgeFixed", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write203_SlimeHutch(string n, string ns, SlimeHutch o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SlimeHutch)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SlimeHutch", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt slimeMatingsLeft = o.slimeMatingsLeft;
			if (slimeMatingsLeft != null)
			{
				IEnumerator enumerator20 = slimeMatingsLeft.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("slimeMatingsLeft", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetArray<bool, NetBool> waterSpots = o.waterSpots;
			if (waterSpots != null)
			{
				WriteStartElement("waterSpots", "", null, writePrefixed: false);
				IEnumerator enumerator21 = waterSpots.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write205_Shed(string n, string ns, Shed o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Shed)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Shed", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			DecorationFacade wallPaper = o.wallPaper;
			if (wallPaper != null)
			{
				WriteStartElement("wallPaper", "", null, writePrefixed: false);
				IEnumerator enumerator20 = wallPaper.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedWallpaper = o.appliedWallpaper;
			if (appliedWallpaper != null)
			{
				WriteStartElement("appliedWallpaper", "", null, writePrefixed: false);
				IEnumerator enumerator21 = appliedWallpaper.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						SerializableDictionary<string, string> serializable4 = (SerializableDictionary<string, string>)enumerator21.Current;
						WriteSerializable(serializable4, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			DecorationFacade floor = o.floor;
			if (floor != null)
			{
				WriteStartElement("floor", "", null, writePrefixed: false);
				IEnumerator enumerator22 = floor.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						int num3 = (int)enumerator22.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedFloor = o.appliedFloor;
			if (appliedFloor != null)
			{
				WriteStartElement("appliedFloor", "", null, writePrefixed: false);
				IEnumerator enumerator23 = appliedFloor.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						SerializableDictionary<string, string> serializable5 = (SerializableDictionary<string, string>)enumerator23.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			NetInt upgradeLevel = o.upgradeLevel;
			if (upgradeLevel != null)
			{
				WriteStartElement("upgradeLevel", "", null, writePrefixed: false);
				IEnumerator enumerator24 = upgradeLevel.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						int num4 = (int)enumerator24.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write218_Cabin(string n, string ns, Cabin o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Cabin)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Cabin", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			DecorationFacade wallPaper = o.wallPaper;
			if (wallPaper != null)
			{
				WriteStartElement("wallPaper", "", null, writePrefixed: false);
				IEnumerator enumerator20 = wallPaper.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedWallpaper = o.appliedWallpaper;
			if (appliedWallpaper != null)
			{
				WriteStartElement("appliedWallpaper", "", null, writePrefixed: false);
				IEnumerator enumerator21 = appliedWallpaper.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						SerializableDictionary<string, string> serializable4 = (SerializableDictionary<string, string>)enumerator21.Current;
						WriteSerializable(serializable4, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			DecorationFacade floor = o.floor;
			if (floor != null)
			{
				WriteStartElement("floor", "", null, writePrefixed: false);
				IEnumerator enumerator22 = floor.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						int num3 = (int)enumerator22.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedFloor = o.appliedFloor;
			if (appliedFloor != null)
			{
				WriteStartElement("appliedFloor", "", null, writePrefixed: false);
				IEnumerator enumerator23 = appliedFloor.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						SerializableDictionary<string, string> serializable5 = (SerializableDictionary<string, string>)enumerator23.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("farmerNumberOfOwner", "", XmlConvert.ToString(o.farmerNumberOfOwner));
			NetBool fireplaceOn = o.fireplaceOn;
			if (fireplaceOn != null)
			{
				IEnumerator enumerator24 = fireplaceOn.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag8 = (bool)enumerator24.Current;
						WriteElementStringRaw("fireplaceOn", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetRef<Chest> fridge = o.fridge;
			if (fridge != null)
			{
				IEnumerator enumerator25 = fridge.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						Chest o7 = (Chest)enumerator25.Current;
						Write114_Chest("fridge", "", o7, isNullable: false, needType: false);
					}
				}
			}
			Write42_Point("fridgePosition", "", o.fridgePosition, needType: false);
			List<Warp> cellarWarps = o.cellarWarps;
			if (cellarWarps != null)
			{
				WriteStartElement("cellarWarps", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)cellarWarps).Count; i++)
				{
					Write216_Warp("Warp", "", cellarWarps[i], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			NetInt cribStyle = o.cribStyle;
			if (cribStyle != null)
			{
				IEnumerator enumerator26 = cribStyle.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						int num4 = (int)enumerator26.Current;
						WriteElementStringRaw("cribStyle", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetRef<Farmer> farmhand = o.farmhand;
			if (farmhand != null)
			{
				IEnumerator enumerator27 = farmhand.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						Farmer o8 = (Farmer)enumerator27.Current;
						Write183_Farmer("farmhand", "", o8, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write183_Farmer(string n, string ns, Farmer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Farmer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Farmer", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetObjectList<Quest> questLog = o.questLog;
			if (questLog != null)
			{
				WriteStartElement("questLog", "", null, writePrefixed: false);
				IEnumerator enumerator6 = questLog.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						Quest o2 = (Quest)enumerator6.Current;
						Write179_Quest("Quest", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetIntList professions = o.professions;
			if (professions != null)
			{
				WriteStartElement("professions", "", null, writePrefixed: false);
				IEnumerator enumerator7 = professions.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetList<Point, NetPoint> newLevels = o.newLevels;
			if (newLevels != null)
			{
				WriteStartElement("newLevels", "", null, writePrefixed: false);
				IEnumerator enumerator8 = newLevels.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Point o3 = (Point)enumerator8.Current;
						Write42_Point("Point", "", o3, needType: false);
					}
				}
				WriteEndElement();
			}
			NetArray<int, NetInt> experiencePoints = o.experiencePoints;
			if (experiencePoints != null)
			{
				WriteStartElement("experiencePoints", "", null, writePrefixed: false);
				IEnumerator enumerator9 = experiencePoints.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num3 = (int)enumerator9.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetObjectList<Item> items = o.items;
			if (items != null)
			{
				WriteStartElement("items", "", null, writePrefixed: false);
				IEnumerator enumerator10 = items.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						Item o4 = (Item)enumerator10.Current;
						Write143_Item("Item", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetIntList dialogueQuestionsAnswered = o.dialogueQuestionsAnswered;
			if (dialogueQuestionsAnswered != null)
			{
				WriteStartElement("dialogueQuestionsAnswered", "", null, writePrefixed: false);
				IEnumerator enumerator11 = dialogueQuestionsAnswered.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num4 = (int)enumerator11.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			List<string> furnitureOwned = o.furnitureOwned;
			if (furnitureOwned != null)
			{
				WriteStartElement("furnitureOwned", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)furnitureOwned).Count; i++)
				{
					WriteNullableStringLiteral("string", "", furnitureOwned[i]);
				}
				WriteEndElement();
			}
			NetStringDictionary<int, NetInt> cookingRecipes = o.cookingRecipes;
			if (cookingRecipes != null)
			{
				IEnumerator enumerator12 = cookingRecipes.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						SerializableDictionary<string, int> serializable2 = (SerializableDictionary<string, int>)enumerator12.Current;
						WriteSerializable(serializable2, "cookingRecipes", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetStringDictionary<int, NetInt> craftingRecipes = o.craftingRecipes;
			if (craftingRecipes != null)
			{
				IEnumerator enumerator13 = craftingRecipes.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						SerializableDictionary<string, int> serializable3 = (SerializableDictionary<string, int>)enumerator13.Current;
						WriteSerializable(serializable3, "craftingRecipes", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetStringDictionary<int, NetInt> activeDialogueEvents = o.activeDialogueEvents;
			if (activeDialogueEvents != null)
			{
				IEnumerator enumerator14 = activeDialogueEvents.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						SerializableDictionary<string, int> serializable4 = (SerializableDictionary<string, int>)enumerator14.Current;
						WriteSerializable(serializable4, "activeDialogueEvents", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntList eventsSeen = o.eventsSeen;
			if (eventsSeen != null)
			{
				WriteStartElement("eventsSeen", "", null, writePrefixed: false);
				IEnumerator enumerator15 = eventsSeen.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num5 = (int)enumerator15.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num5));
					}
				}
				WriteEndElement();
			}
			NetIntList secretNotesSeen = o.secretNotesSeen;
			if (secretNotesSeen != null)
			{
				WriteStartElement("secretNotesSeen", "", null, writePrefixed: false);
				IEnumerator enumerator16 = secretNotesSeen.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num6 = (int)enumerator16.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			List<string> songsHeard = o.songsHeard;
			if (songsHeard != null)
			{
				WriteStartElement("songsHeard", "", null, writePrefixed: false);
				for (int j = 0; j < ((ICollection)songsHeard).Count; j++)
				{
					WriteNullableStringLiteral("string", "", songsHeard[j]);
				}
				WriteEndElement();
			}
			NetIntList achievements = o.achievements;
			if (achievements != null)
			{
				WriteStartElement("achievements", "", null, writePrefixed: false);
				IEnumerator enumerator17 = achievements.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num7 = (int)enumerator17.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num7));
					}
				}
				WriteEndElement();
			}
			NetIntList specialItems = o.specialItems;
			if (specialItems != null)
			{
				WriteStartElement("specialItems", "", null, writePrefixed: false);
				IEnumerator enumerator18 = specialItems.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num8 = (int)enumerator18.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num8));
					}
				}
				WriteEndElement();
			}
			NetIntList specialBigCraftables = o.specialBigCraftables;
			if (specialBigCraftables != null)
			{
				WriteStartElement("specialBigCraftables", "", null, writePrefixed: false);
				IEnumerator enumerator19 = specialBigCraftables.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num9 = (int)enumerator19.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num9));
					}
				}
				WriteEndElement();
			}
			NetStringList mailReceived = o.mailReceived;
			if (mailReceived != null)
			{
				WriteStartElement("mailReceived", "", null, writePrefixed: false);
				IEnumerator enumerator20 = mailReceived.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						string value2 = (string)enumerator20.Current;
						WriteNullableStringLiteral("string", "", value2);
					}
				}
				WriteEndElement();
			}
			NetStringList mailForTomorrow = o.mailForTomorrow;
			if (mailForTomorrow != null)
			{
				WriteStartElement("mailForTomorrow", "", null, writePrefixed: false);
				IEnumerator enumerator21 = mailForTomorrow.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						string value3 = (string)enumerator21.Current;
						WriteNullableStringLiteral("string", "", value3);
					}
				}
				WriteEndElement();
			}
			NetStringList mailbox = o.mailbox;
			if (mailbox != null)
			{
				WriteStartElement("mailbox", "", null, writePrefixed: false);
				IEnumerator enumerator22 = mailbox.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						string value4 = (string)enumerator22.Current;
						WriteNullableStringLiteral("string", "", value4);
					}
				}
				WriteEndElement();
			}
			NetInt timeWentToBed = o.timeWentToBed;
			if (timeWentToBed != null)
			{
				WriteStartElement("timeWentToBed", "", null, writePrefixed: false);
				IEnumerator enumerator23 = timeWentToBed.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						int num10 = (int)enumerator23.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num10));
					}
				}
				WriteEndElement();
			}
			NetBool sleptInTemporaryBed = o.sleptInTemporaryBed;
			if (sleptInTemporaryBed != null)
			{
				WriteStartElement("sleptInTemporaryBed", "", null, writePrefixed: false);
				IEnumerator enumerator24 = sleptInTemporaryBed.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag3 = (bool)enumerator24.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag3));
					}
				}
				WriteEndElement();
			}
			Write180_Stats("stats", "", o.stats, isNullable: false, needType: false);
			List<string> blueprints = o.blueprints;
			if (blueprints != null)
			{
				WriteStartElement("blueprints", "", null, writePrefixed: false);
				for (int k = 0; k < ((ICollection)blueprints).Count; k++)
				{
					WriteNullableStringLiteral("string", "", blueprints[k]);
				}
				WriteEndElement();
			}
			NetInt biteChime = o.biteChime;
			if (biteChime != null)
			{
				IEnumerator enumerator25 = biteChime.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						int num11 = (int)enumerator25.Current;
						WriteElementStringRaw("biteChime", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetObjectList<Item> itemsLostLastDeath = o.itemsLostLastDeath;
			if (itemsLostLastDeath != null)
			{
				WriteStartElement("itemsLostLastDeath", "", null, writePrefixed: false);
				IEnumerator enumerator26 = itemsLostLastDeath.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						Item o5 = (Item)enumerator26.Current;
						Write143_Item("Item", "", o5, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			List<int> movementDirections = o.movementDirections;
			if (movementDirections != null)
			{
				WriteStartElement("movementDirections", "", null, writePrefixed: false);
				for (int l = 0; l < ((ICollection)movementDirections).Count; l++)
				{
					WriteElementStringRaw("int", "", XmlConvert.ToString(movementDirections[l]));
				}
				WriteEndElement();
			}
			NetString farmName = o.farmName;
			if (farmName != null)
			{
				IEnumerator enumerator27 = farmName.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						string value5 = (string)enumerator27.Current;
						WriteElementString("farmName", "", value5);
					}
				}
			}
			NetString favoriteThing = o.favoriteThing;
			if (favoriteThing != null)
			{
				IEnumerator enumerator28 = favoriteThing.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						string value6 = (string)enumerator28.Current;
						WriteElementString("favoriteThing", "", value6);
					}
				}
			}
			NetString horseName = o.horseName;
			if (horseName != null)
			{
				IEnumerator enumerator29 = horseName.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						string value7 = (string)enumerator29.Current;
						WriteElementString("horseName", "", value7);
					}
				}
			}
			WriteElementString("slotName", "", o.slotName);
			WriteElementStringRaw("slotCanHost", "", XmlConvert.ToString(o.slotCanHost));
			NetString userID = o.userID;
			if (userID != null)
			{
				IEnumerator enumerator30 = userID.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						string value8 = (string)enumerator30.Current;
						WriteElementString("userID", "", value8);
					}
				}
			}
			WriteElementString("defaultChatColor", "", o.defaultChatColor);
			WriteElementStringRaw("catPerson", "", XmlConvert.ToString(o.catPerson));
			WriteElementStringRaw("whichPetBreed", "", XmlConvert.ToString(o.whichPetBreed));
			NetBool acceptedDailyQuest = o.acceptedDailyQuest;
			if (acceptedDailyQuest != null)
			{
				IEnumerator enumerator31 = acceptedDailyQuest.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						bool flag4 = (bool)enumerator31.Current;
						WriteElementStringRaw("acceptedDailyQuest", "", XmlConvert.ToString(flag4));
					}
				}
			}
			Write33_Vector2("mostRecentBed", "", o.mostRecentBed, needType: false);
			NetStringList emoteFavorites = o.emoteFavorites;
			if (emoteFavorites != null)
			{
				IEnumerator enumerator32 = emoteFavorites.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						string value9 = (string)enumerator32.Current;
						WriteElementString("emoteFavorites", "", value9);
					}
				}
			}
			NetStringDictionary<bool, NetBool> performedEmotes = o.performedEmotes;
			if (performedEmotes != null)
			{
				IEnumerator enumerator33 = performedEmotes.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						SerializableDictionary<string, bool> serializable5 = (SerializableDictionary<string, bool>)enumerator33.Current;
						WriteSerializable(serializable5, "performedEmotes", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt shirt = o.shirt;
			if (shirt != null)
			{
				IEnumerator enumerator34 = shirt.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						int num12 = (int)enumerator34.Current;
						WriteElementStringRaw("shirt", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetInt hair = o.hair;
			if (hair != null)
			{
				IEnumerator enumerator35 = hair.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						int num13 = (int)enumerator35.Current;
						WriteElementStringRaw("hair", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetInt skin = o.skin;
			if (skin != null)
			{
				IEnumerator enumerator36 = skin.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						int num14 = (int)enumerator36.Current;
						WriteElementStringRaw("skin", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetInt shoes = o.shoes;
			if (shoes != null)
			{
				IEnumerator enumerator37 = shoes.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						int num15 = (int)enumerator37.Current;
						WriteElementStringRaw("shoes", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetInt accessory = o.accessory;
			if (accessory != null)
			{
				IEnumerator enumerator38 = accessory.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						int num16 = (int)enumerator38.Current;
						WriteElementStringRaw("accessory", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetInt facialHair = o.facialHair;
			if (facialHair != null)
			{
				IEnumerator enumerator39 = facialHair.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						int num17 = (int)enumerator39.Current;
						WriteElementStringRaw("facialHair", "", XmlConvert.ToString(num17));
					}
				}
			}
			NetInt pants = o.pants;
			if (pants != null)
			{
				IEnumerator enumerator40 = pants.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						int num18 = (int)enumerator40.Current;
						WriteElementStringRaw("pants", "", XmlConvert.ToString(num18));
					}
				}
			}
			NetColor hairstyleColor = o.hairstyleColor;
			if (hairstyleColor != null)
			{
				IEnumerator enumerator41 = hairstyleColor.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Color o6 = (Color)enumerator41.Current;
						Write34_Color("hairstyleColor", "", o6, needType: false);
					}
				}
			}
			NetColor pantsColor = o.pantsColor;
			if (pantsColor != null)
			{
				IEnumerator enumerator42 = pantsColor.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						Color o7 = (Color)enumerator42.Current;
						Write34_Color("pantsColor", "", o7, needType: false);
					}
				}
			}
			NetColor newEyeColor = o.newEyeColor;
			if (newEyeColor != null)
			{
				IEnumerator enumerator43 = newEyeColor.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						Color o8 = (Color)enumerator43.Current;
						Write34_Color("newEyeColor", "", o8, needType: false);
					}
				}
			}
			NetRef<Hat> hat = o.hat;
			if (hat != null)
			{
				IEnumerator enumerator44 = hat.GetEnumerator();
				if (enumerator44 != null)
				{
					while (enumerator44.MoveNext())
					{
						Hat o9 = (Hat)enumerator44.Current;
						Write57_Hat("hat", "", o9, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Boots> boots = o.boots;
			if (boots != null)
			{
				IEnumerator enumerator45 = boots.GetEnumerator();
				if (enumerator45 != null)
				{
					while (enumerator45.MoveNext())
					{
						Boots o10 = (Boots)enumerator45.Current;
						Write56_Boots("boots", "", o10, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Ring> leftRing = o.leftRing;
			if (leftRing != null)
			{
				IEnumerator enumerator46 = leftRing.GetEnumerator();
				if (enumerator46 != null)
				{
					while (enumerator46.MoveNext())
					{
						Ring o11 = (Ring)enumerator46.Current;
						Write60_Ring("leftRing", "", o11, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Ring> rightRing = o.rightRing;
			if (rightRing != null)
			{
				IEnumerator enumerator47 = rightRing.GetEnumerator();
				if (enumerator47 != null)
				{
					while (enumerator47.MoveNext())
					{
						Ring o12 = (Ring)enumerator47.Current;
						Write60_Ring("rightRing", "", o12, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Clothing> shirtItem = o.shirtItem;
			if (shirtItem != null)
			{
				IEnumerator enumerator48 = shirtItem.GetEnumerator();
				if (enumerator48 != null)
				{
					while (enumerator48.MoveNext())
					{
						Clothing o13 = (Clothing)enumerator48.Current;
						Write59_Clothing("shirtItem", "", o13, isNullable: false, needType: false);
					}
				}
			}
			NetRef<Clothing> pantsItem = o.pantsItem;
			if (pantsItem != null)
			{
				IEnumerator enumerator49 = pantsItem.GetEnumerator();
				if (enumerator49 != null)
				{
					while (enumerator49.MoveNext())
					{
						Clothing o14 = (Clothing)enumerator49.Current;
						Write59_Clothing("pantsItem", "", o14, isNullable: false, needType: false);
					}
				}
			}
			NetBool divorceTonight = o.divorceTonight;
			if (divorceTonight != null)
			{
				IEnumerator enumerator50 = divorceTonight.GetEnumerator();
				if (enumerator50 != null)
				{
					while (enumerator50.MoveNext())
					{
						bool flag5 = (bool)enumerator50.Current;
						WriteElementStringRaw("divorceTonight", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool changeWalletTypeTonight = o.changeWalletTypeTonight;
			if (changeWalletTypeTonight != null)
			{
				IEnumerator enumerator51 = changeWalletTypeTonight.GetEnumerator();
				if (enumerator51 != null)
				{
					while (enumerator51.MoveNext())
					{
						bool flag6 = (bool)enumerator51.Current;
						WriteElementStringRaw("changeWalletTypeTonight", "", XmlConvert.ToString(flag6));
					}
				}
			}
			WriteElementStringRaw("woodPieces", "", XmlConvert.ToString(o.woodPieces));
			WriteElementStringRaw("stonePieces", "", XmlConvert.ToString(o.stonePieces));
			WriteElementStringRaw("copperPieces", "", XmlConvert.ToString(o.copperPieces));
			WriteElementStringRaw("ironPieces", "", XmlConvert.ToString(o.ironPieces));
			WriteElementStringRaw("coalPieces", "", XmlConvert.ToString(o.coalPieces));
			WriteElementStringRaw("goldPieces", "", XmlConvert.ToString(o.goldPieces));
			WriteElementStringRaw("iridiumPieces", "", XmlConvert.ToString(o.iridiumPieces));
			WriteElementStringRaw("quartzPieces", "", XmlConvert.ToString(o.quartzPieces));
			WriteElementString("gameVersion", "", o.gameVersion);
			WriteElementString("gameVersionLabel", "", o.gameVersionLabel);
			NetInt caveChoice = o.caveChoice;
			if (caveChoice != null)
			{
				IEnumerator enumerator52 = caveChoice.GetEnumerator();
				if (enumerator52 != null)
				{
					while (enumerator52.MoveNext())
					{
						int num19 = (int)enumerator52.Current;
						WriteElementStringRaw("caveChoice", "", XmlConvert.ToString(num19));
					}
				}
			}
			WriteElementStringRaw("feed", "", XmlConvert.ToString(o.feed));
			NetInt farmingLevel = o.farmingLevel;
			if (farmingLevel != null)
			{
				IEnumerator enumerator53 = farmingLevel.GetEnumerator();
				if (enumerator53 != null)
				{
					while (enumerator53.MoveNext())
					{
						int num20 = (int)enumerator53.Current;
						WriteElementStringRaw("farmingLevel", "", XmlConvert.ToString(num20));
					}
				}
			}
			NetInt miningLevel = o.miningLevel;
			if (miningLevel != null)
			{
				IEnumerator enumerator54 = miningLevel.GetEnumerator();
				if (enumerator54 != null)
				{
					while (enumerator54.MoveNext())
					{
						int num21 = (int)enumerator54.Current;
						WriteElementStringRaw("miningLevel", "", XmlConvert.ToString(num21));
					}
				}
			}
			NetInt combatLevel = o.combatLevel;
			if (combatLevel != null)
			{
				IEnumerator enumerator55 = combatLevel.GetEnumerator();
				if (enumerator55 != null)
				{
					while (enumerator55.MoveNext())
					{
						int num22 = (int)enumerator55.Current;
						WriteElementStringRaw("combatLevel", "", XmlConvert.ToString(num22));
					}
				}
			}
			NetInt foragingLevel = o.foragingLevel;
			if (foragingLevel != null)
			{
				IEnumerator enumerator56 = foragingLevel.GetEnumerator();
				if (enumerator56 != null)
				{
					while (enumerator56.MoveNext())
					{
						int num23 = (int)enumerator56.Current;
						WriteElementStringRaw("foragingLevel", "", XmlConvert.ToString(num23));
					}
				}
			}
			NetInt fishingLevel = o.fishingLevel;
			if (fishingLevel != null)
			{
				IEnumerator enumerator57 = fishingLevel.GetEnumerator();
				if (enumerator57 != null)
				{
					while (enumerator57.MoveNext())
					{
						int num24 = (int)enumerator57.Current;
						WriteElementStringRaw("fishingLevel", "", XmlConvert.ToString(num24));
					}
				}
			}
			NetInt luckLevel = o.luckLevel;
			if (luckLevel != null)
			{
				IEnumerator enumerator58 = luckLevel.GetEnumerator();
				if (enumerator58 != null)
				{
					while (enumerator58.MoveNext())
					{
						int num25 = (int)enumerator58.Current;
						WriteElementStringRaw("luckLevel", "", XmlConvert.ToString(num25));
					}
				}
			}
			NetInt newSkillPointsToSpend = o.newSkillPointsToSpend;
			if (newSkillPointsToSpend != null)
			{
				IEnumerator enumerator59 = newSkillPointsToSpend.GetEnumerator();
				if (enumerator59 != null)
				{
					while (enumerator59.MoveNext())
					{
						int num26 = (int)enumerator59.Current;
						WriteElementStringRaw("newSkillPointsToSpend", "", XmlConvert.ToString(num26));
					}
				}
			}
			NetInt addedFarmingLevel = o.addedFarmingLevel;
			if (addedFarmingLevel != null)
			{
				IEnumerator enumerator60 = addedFarmingLevel.GetEnumerator();
				if (enumerator60 != null)
				{
					while (enumerator60.MoveNext())
					{
						int num27 = (int)enumerator60.Current;
						WriteElementStringRaw("addedFarmingLevel", "", XmlConvert.ToString(num27));
					}
				}
			}
			NetInt addedMiningLevel = o.addedMiningLevel;
			if (addedMiningLevel != null)
			{
				IEnumerator enumerator61 = addedMiningLevel.GetEnumerator();
				if (enumerator61 != null)
				{
					while (enumerator61.MoveNext())
					{
						int num28 = (int)enumerator61.Current;
						WriteElementStringRaw("addedMiningLevel", "", XmlConvert.ToString(num28));
					}
				}
			}
			NetInt addedCombatLevel = o.addedCombatLevel;
			if (addedCombatLevel != null)
			{
				IEnumerator enumerator62 = addedCombatLevel.GetEnumerator();
				if (enumerator62 != null)
				{
					while (enumerator62.MoveNext())
					{
						int num29 = (int)enumerator62.Current;
						WriteElementStringRaw("addedCombatLevel", "", XmlConvert.ToString(num29));
					}
				}
			}
			NetInt addedForagingLevel = o.addedForagingLevel;
			if (addedForagingLevel != null)
			{
				IEnumerator enumerator63 = addedForagingLevel.GetEnumerator();
				if (enumerator63 != null)
				{
					while (enumerator63.MoveNext())
					{
						int num30 = (int)enumerator63.Current;
						WriteElementStringRaw("addedForagingLevel", "", XmlConvert.ToString(num30));
					}
				}
			}
			NetInt addedFishingLevel = o.addedFishingLevel;
			if (addedFishingLevel != null)
			{
				IEnumerator enumerator64 = addedFishingLevel.GetEnumerator();
				if (enumerator64 != null)
				{
					while (enumerator64.MoveNext())
					{
						int num31 = (int)enumerator64.Current;
						WriteElementStringRaw("addedFishingLevel", "", XmlConvert.ToString(num31));
					}
				}
			}
			NetInt addedLuckLevel = o.addedLuckLevel;
			if (addedLuckLevel != null)
			{
				IEnumerator enumerator65 = addedLuckLevel.GetEnumerator();
				if (enumerator65 != null)
				{
					while (enumerator65.MoveNext())
					{
						int num32 = (int)enumerator65.Current;
						WriteElementStringRaw("addedLuckLevel", "", XmlConvert.ToString(num32));
					}
				}
			}
			NetInt maxStamina = o.maxStamina;
			if (maxStamina != null)
			{
				IEnumerator enumerator66 = maxStamina.GetEnumerator();
				if (enumerator66 != null)
				{
					while (enumerator66.MoveNext())
					{
						int num33 = (int)enumerator66.Current;
						WriteElementStringRaw("maxStamina", "", XmlConvert.ToString(num33));
					}
				}
			}
			NetInt maxItems = o.maxItems;
			if (maxItems != null)
			{
				IEnumerator enumerator67 = maxItems.GetEnumerator();
				if (enumerator67 != null)
				{
					while (enumerator67.MoveNext())
					{
						int num34 = (int)enumerator67.Current;
						WriteElementStringRaw("maxItems", "", XmlConvert.ToString(num34));
					}
				}
			}
			NetInt lastSeenMovieWeek = o.lastSeenMovieWeek;
			if (lastSeenMovieWeek != null)
			{
				IEnumerator enumerator68 = lastSeenMovieWeek.GetEnumerator();
				if (enumerator68 != null)
				{
					while (enumerator68.MoveNext())
					{
						int num35 = (int)enumerator68.Current;
						WriteElementStringRaw("lastSeenMovieWeek", "", XmlConvert.ToString(num35));
					}
				}
			}
			WriteElementStringRaw("resilience", "", XmlConvert.ToString(o.resilience));
			WriteElementStringRaw("attack", "", XmlConvert.ToString(o.attack));
			WriteElementStringRaw("immunity", "", XmlConvert.ToString(o.immunity));
			WriteElementStringRaw("attackIncreaseModifier", "", XmlConvert.ToString(o.attackIncreaseModifier));
			WriteElementStringRaw("knockbackModifier", "", XmlConvert.ToString(o.knockbackModifier));
			WriteElementStringRaw("weaponSpeedModifier", "", XmlConvert.ToString(o.weaponSpeedModifier));
			WriteElementStringRaw("critChanceModifier", "", XmlConvert.ToString(o.critChanceModifier));
			WriteElementStringRaw("critPowerModifier", "", XmlConvert.ToString(o.critPowerModifier));
			WriteElementStringRaw("weaponPrecisionModifier", "", XmlConvert.ToString(o.weaponPrecisionModifier));
			WriteElementStringRaw("clubCoins", "", XmlConvert.ToString(o.clubCoins));
			WriteElementStringRaw("trashCanLevel", "", XmlConvert.ToString(o.trashCanLevel));
			NetRef<Tool> toolBeingUpgraded = o.toolBeingUpgraded;
			if (toolBeingUpgraded != null)
			{
				IEnumerator enumerator69 = toolBeingUpgraded.GetEnumerator();
				if (enumerator69 != null)
				{
					while (enumerator69.MoveNext())
					{
						Tool o15 = (Tool)enumerator69.Current;
						Write112_Tool("toolBeingUpgraded", "", o15, isNullable: false, needType: false);
					}
				}
			}
			NetInt daysLeftForToolUpgrade = o.daysLeftForToolUpgrade;
			if (daysLeftForToolUpgrade != null)
			{
				IEnumerator enumerator70 = daysLeftForToolUpgrade.GetEnumerator();
				if (enumerator70 != null)
				{
					while (enumerator70.MoveNext())
					{
						int num36 = (int)enumerator70.Current;
						WriteElementStringRaw("daysLeftForToolUpgrade", "", XmlConvert.ToString(num36));
					}
				}
			}
			NetInt houseUpgradeLevel = o.houseUpgradeLevel;
			if (houseUpgradeLevel != null)
			{
				IEnumerator enumerator71 = houseUpgradeLevel.GetEnumerator();
				if (enumerator71 != null)
				{
					while (enumerator71.MoveNext())
					{
						int num37 = (int)enumerator71.Current;
						WriteElementStringRaw("houseUpgradeLevel", "", XmlConvert.ToString(num37));
					}
				}
			}
			NetInt daysUntilHouseUpgrade = o.daysUntilHouseUpgrade;
			if (daysUntilHouseUpgrade != null)
			{
				IEnumerator enumerator72 = daysUntilHouseUpgrade.GetEnumerator();
				if (enumerator72 != null)
				{
					while (enumerator72.MoveNext())
					{
						int num38 = (int)enumerator72.Current;
						WriteElementStringRaw("daysUntilHouseUpgrade", "", XmlConvert.ToString(num38));
					}
				}
			}
			WriteElementStringRaw("coopUpgradeLevel", "", XmlConvert.ToString(o.coopUpgradeLevel));
			WriteElementStringRaw("barnUpgradeLevel", "", XmlConvert.ToString(o.barnUpgradeLevel));
			WriteElementStringRaw("hasGreenhouse", "", XmlConvert.ToString(o.hasGreenhouse));
			WriteElementStringRaw("hasUnlockedSkullDoor", "", XmlConvert.ToString(o.hasUnlockedSkullDoor));
			WriteElementStringRaw("hasDarkTalisman", "", XmlConvert.ToString(o.hasDarkTalisman));
			WriteElementStringRaw("hasMagicInk", "", XmlConvert.ToString(o.hasMagicInk));
			WriteElementStringRaw("showChestColorPicker", "", XmlConvert.ToString(o.showChestColorPicker));
			WriteElementStringRaw("hasMagnifyingGlass", "", XmlConvert.ToString(o.hasMagnifyingGlass));
			WriteElementStringRaw("hasWateringCanEnchantment", "", XmlConvert.ToString(o.hasWateringCanEnchantment));
			NetInt magneticRadius = o.magneticRadius;
			if (magneticRadius != null)
			{
				IEnumerator enumerator73 = magneticRadius.GetEnumerator();
				if (enumerator73 != null)
				{
					while (enumerator73.MoveNext())
					{
						int num39 = (int)enumerator73.Current;
						WriteElementStringRaw("magneticRadius", "", XmlConvert.ToString(num39));
					}
				}
			}
			WriteElementStringRaw("temporaryInvincibilityTimer", "", XmlConvert.ToString(o.temporaryInvincibilityTimer));
			WriteElementStringRaw("currentTemporaryInvincibilityDuration", "", XmlConvert.ToString(o.currentTemporaryInvincibilityDuration));
			WriteElementStringRaw("health", "", XmlConvert.ToString(o.health));
			WriteElementStringRaw("maxHealth", "", XmlConvert.ToString(o.maxHealth));
			WriteElementStringRaw("difficultyModifier", "", XmlConvert.ToString(o.difficultyModifier));
			NetBool isMale = o.isMale;
			if (isMale != null)
			{
				IEnumerator enumerator74 = isMale.GetEnumerator();
				if (enumerator74 != null)
				{
					while (enumerator74.MoveNext())
					{
						bool flag7 = (bool)enumerator74.Current;
						WriteElementStringRaw("isMale", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("hasBusTicket", "", XmlConvert.ToString(o.hasBusTicket));
			WriteElementStringRaw("stardewHero", "", XmlConvert.ToString(o.stardewHero));
			WriteElementStringRaw("hasClubCard", "", XmlConvert.ToString(o.hasClubCard));
			WriteElementStringRaw("hasSpecialCharm", "", XmlConvert.ToString(o.hasSpecialCharm));
			NetIntDictionary<int, NetInt> basicShipped = o.basicShipped;
			if (basicShipped != null)
			{
				IEnumerator enumerator75 = basicShipped.GetEnumerator();
				if (enumerator75 != null)
				{
					while (enumerator75.MoveNext())
					{
						SerializableDictionary<int, int> serializable6 = (SerializableDictionary<int, int>)enumerator75.Current;
						WriteSerializable(serializable6, "basicShipped", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntDictionary<int, NetInt> mineralsFound = o.mineralsFound;
			if (mineralsFound != null)
			{
				IEnumerator enumerator76 = mineralsFound.GetEnumerator();
				if (enumerator76 != null)
				{
					while (enumerator76.MoveNext())
					{
						SerializableDictionary<int, int> serializable7 = (SerializableDictionary<int, int>)enumerator76.Current;
						WriteSerializable(serializable7, "mineralsFound", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntDictionary<int, NetInt> recipesCooked = o.recipesCooked;
			if (recipesCooked != null)
			{
				IEnumerator enumerator77 = recipesCooked.GetEnumerator();
				if (enumerator77 != null)
				{
					while (enumerator77.MoveNext())
					{
						SerializableDictionary<int, int> serializable8 = (SerializableDictionary<int, int>)enumerator77.Current;
						WriteSerializable(serializable8, "recipesCooked", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntIntArrayDictionary fishCaught = o.fishCaught;
			if (fishCaught != null)
			{
				IEnumerator enumerator78 = fishCaught.GetEnumerator();
				if (enumerator78 != null)
				{
					while (enumerator78.MoveNext())
					{
						SerializableDictionary<int, int[]> serializable9 = (SerializableDictionary<int, int[]>)enumerator78.Current;
						WriteSerializable(serializable9, "fishCaught", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntIntArrayDictionary archaeologyFound = o.archaeologyFound;
			if (archaeologyFound != null)
			{
				IEnumerator enumerator79 = archaeologyFound.GetEnumerator();
				if (enumerator79 != null)
				{
					while (enumerator79.MoveNext())
					{
						SerializableDictionary<int, int[]> serializable10 = (SerializableDictionary<int, int[]>)enumerator79.Current;
						WriteSerializable(serializable10, "archaeologyFound", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntDictionary<int, NetInt> callsReceived = o.callsReceived;
			if (callsReceived != null)
			{
				IEnumerator enumerator80 = callsReceived.GetEnumerator();
				if (enumerator80 != null)
				{
					while (enumerator80.MoveNext())
					{
						SerializableDictionary<int, int> serializable11 = (SerializableDictionary<int, int>)enumerator80.Current;
						WriteSerializable(serializable11, "callsReceived", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteSerializable(o.giftedItems, "giftedItems", "", isNullable: false, wrapped: true);
			NetStringDictionary<int, NetInt> tailoredItems = o.tailoredItems;
			if (tailoredItems != null)
			{
				IEnumerator enumerator81 = tailoredItems.GetEnumerator();
				if (enumerator81 != null)
				{
					while (enumerator81.MoveNext())
					{
						SerializableDictionary<string, int> serializable12 = (SerializableDictionary<string, int>)enumerator81.Current;
						WriteSerializable(serializable12, "tailoredItems", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteSerializable(o.friendships, "friendships", "", isNullable: false, wrapped: true);
			NetStringDictionary<Friendship, NetRef<Friendship>> friendshipData = o.friendshipData;
			if (friendshipData != null)
			{
				IEnumerator enumerator82 = friendshipData.GetEnumerator();
				if (enumerator82 != null)
				{
					while (enumerator82.MoveNext())
					{
						SerializableDictionary<string, Friendship> serializable13 = (SerializableDictionary<string, Friendship>)enumerator82.Current;
						WriteSerializable(serializable13, "friendshipData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write181_BuildingUpgrade("currentUpgrade", "", o.currentUpgrade, isNullable: false, needType: false);
			WriteElementString("dateStringForSaveGame", "", o.dateStringForSaveGame);
			if (o.dayOfMonthForSaveGame.HasValue)
			{
				WriteNullableStringLiteralRaw("dayOfMonthForSaveGame", "", XmlConvert.ToString(o.dayOfMonthForSaveGame.Value));
			}
			else
			{
				WriteNullTagLiteral("dayOfMonthForSaveGame", "");
			}
			if (o.seasonForSaveGame.HasValue)
			{
				WriteNullableStringLiteralRaw("seasonForSaveGame", "", XmlConvert.ToString(o.seasonForSaveGame.Value));
			}
			else
			{
				WriteNullTagLiteral("seasonForSaveGame", "");
			}
			if (o.yearForSaveGame.HasValue)
			{
				WriteNullableStringLiteralRaw("yearForSaveGame", "", XmlConvert.ToString(o.yearForSaveGame.Value));
			}
			else
			{
				WriteNullTagLiteral("yearForSaveGame", "");
			}
			WriteElementStringRaw("overallsColor", "", XmlConvert.ToString(o.overallsColor));
			WriteElementStringRaw("shirtColor", "", XmlConvert.ToString(o.shirtColor));
			WriteElementStringRaw("skinColor", "", XmlConvert.ToString(o.skinColor));
			WriteElementStringRaw("hairColor", "", XmlConvert.ToString(o.hairColor));
			WriteElementStringRaw("eyeColor", "", XmlConvert.ToString(o.eyeColor));
			WriteElementString("bobber", "", o.bobber);
			NetIntDelta netQiGems = o.netQiGems;
			if (netQiGems != null)
			{
				IEnumerator enumerator83 = netQiGems.GetEnumerator();
				if (enumerator83 != null)
				{
					while (enumerator83.MoveNext())
					{
						int num40 = (int)enumerator83.Current;
						WriteElementStringRaw("qiGems", "", XmlConvert.ToString(num40));
					}
				}
			}
			NetRef<AbigailGame.JOTPKProgress> jotpkProgress = o.jotpkProgress;
			if (jotpkProgress != null)
			{
				IEnumerator enumerator84 = jotpkProgress.GetEnumerator();
				if (enumerator84 != null)
				{
					while (enumerator84.MoveNext())
					{
						AbigailGame.JOTPKProgress o16 = (AbigailGame.JOTPKProgress)enumerator84.Current;
						Write182_JOTPKProgress("JOTPKProgress", "", o16, isNullable: false, needType: false);
					}
				}
			}
			NetBool hasUsedDailyRevive = o.hasUsedDailyRevive;
			if (hasUsedDailyRevive != null)
			{
				IEnumerator enumerator85 = hasUsedDailyRevive.GetEnumerator();
				if (enumerator85 != null)
				{
					while (enumerator85.MoveNext())
					{
						bool flag8 = (bool)enumerator85.Current;
						WriteElementStringRaw("hasUsedDailyRevive", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetIntDictionary<bool, NetBool> chestConsumedMineLevels = o.chestConsumedMineLevels;
			if (chestConsumedMineLevels != null)
			{
				IEnumerator enumerator86 = chestConsumedMineLevels.GetEnumerator();
				if (enumerator86 != null)
				{
					while (enumerator86.MoveNext())
					{
						SerializableDictionary<int, bool> serializable14 = (SerializableDictionary<int, bool>)enumerator86.Current;
						WriteSerializable(serializable14, "chestConsumedLevels", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("saveTime", "", XmlConvert.ToString(o.saveTime));
			NetBool isCustomized = o.isCustomized;
			if (isCustomized != null)
			{
				IEnumerator enumerator87 = isCustomized.GetEnumerator();
				if (enumerator87 != null)
				{
					while (enumerator87.MoveNext())
					{
						bool flag9 = (bool)enumerator87.Current;
						WriteElementStringRaw("isCustomized", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetString homeLocation = o.homeLocation;
			if (homeLocation != null)
			{
				IEnumerator enumerator88 = homeLocation.GetEnumerator();
				if (enumerator88 != null)
				{
					while (enumerator88.MoveNext())
					{
						string value10 = (string)enumerator88.Current;
						WriteElementString("homeLocation", "", value10);
					}
				}
			}
			NetString lastSleepLocation = o.lastSleepLocation;
			if (lastSleepLocation != null)
			{
				IEnumerator enumerator89 = lastSleepLocation.GetEnumerator();
				if (enumerator89 != null)
				{
					while (enumerator89.MoveNext())
					{
						string value11 = (string)enumerator89.Current;
						WriteElementString("lastSleepLocation", "", value11);
					}
				}
			}
			NetPoint lastSleepPoint = o.lastSleepPoint;
			if (lastSleepPoint != null)
			{
				IEnumerator enumerator90 = lastSleepPoint.GetEnumerator();
				if (enumerator90 != null)
				{
					while (enumerator90.MoveNext())
					{
						Point o17 = (Point)enumerator90.Current;
						Write42_Point("lastSleepPoint", "", o17, needType: false);
					}
				}
			}
			WriteElementStringRaw("daysMarried", "", XmlConvert.ToString(o.daysMarried));
			WriteElementStringRaw("movementMultiplier", "", XmlConvert.ToString(o.movementMultiplier));
			Write143_Item("recoveredItem", "", o.recoveredItem, isNullable: false, needType: false);
			WriteElementStringRaw("theaterBuildDate", "", XmlConvert.ToString(o.theaterBuildDate));
			WriteElementStringRaw("deepestMineLevel", "", XmlConvert.ToString(o.deepestMineLevel));
			WriteElementStringRaw("stamina", "", XmlConvert.ToString(o.stamina));
			WriteElementStringRaw("totalMoneyEarned", "", XmlConvert.ToString(o.totalMoneyEarned));
			WriteElementStringRaw("millisecondsPlayed", "", XmlConvert.ToString(o.millisecondsPlayed));
			WriteElementStringRaw("hasRustyKey", "", XmlConvert.ToString(o.hasRustyKey));
			WriteElementStringRaw("hasSkullKey", "", XmlConvert.ToString(o.hasSkullKey));
			WriteElementStringRaw("canUnderstandDwarves", "", XmlConvert.ToString(o.canUnderstandDwarves));
			WriteElementStringRaw("HasTownKey", "", XmlConvert.ToString(o.HasTownKey));
			WriteElementStringRaw("useSeparateWallets", "", XmlConvert.ToString(o.useSeparateWallets));
			WriteElementStringRaw("timesReachedMineBottom", "", XmlConvert.ToString(o.timesReachedMineBottom));
			WriteElementString("spouse", "", o.spouse);
			Write143_Item("CursorSlotItem", "", o.CursorSlotItem, isNullable: false, needType: false);
			WriteElementStringRaw("UniqueMultiplayerID", "", XmlConvert.ToString(o.UniqueMultiplayerID));
			WriteElementStringRaw("money", "", XmlConvert.ToString(o._money));
			WriteEndElement(o);
		}

		private void Write182_JOTPKProgress(string n, string ns, AbigailGame.JOTPKProgress o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AbigailGame.JOTPKProgress)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("JOTPKProgress", "");
			}
			NetInt bulletDamage = o.bulletDamage;
			if (bulletDamage != null)
			{
				WriteStartElement("bulletDamage", "", null, writePrefixed: false);
				IEnumerator enumerator = bulletDamage.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetInt fireSpeedLevel = o.fireSpeedLevel;
			if (fireSpeedLevel != null)
			{
				WriteStartElement("fireSpeedLevel", "", null, writePrefixed: false);
				IEnumerator enumerator2 = fireSpeedLevel.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetInt ammoLevel = o.ammoLevel;
			if (ammoLevel != null)
			{
				WriteStartElement("ammoLevel", "", null, writePrefixed: false);
				IEnumerator enumerator3 = ammoLevel.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num3 = (int)enumerator3.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetBool spreadPistol = o.spreadPistol;
			if (spreadPistol != null)
			{
				WriteStartElement("spreadPistol", "", null, writePrefixed: false);
				IEnumerator enumerator4 = spreadPistol.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			NetInt runSpeedLevel = o.runSpeedLevel;
			if (runSpeedLevel != null)
			{
				WriteStartElement("runSpeedLevel", "", null, writePrefixed: false);
				IEnumerator enumerator5 = runSpeedLevel.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			NetInt lives = o.lives;
			if (lives != null)
			{
				WriteStartElement("lives", "", null, writePrefixed: false);
				IEnumerator enumerator6 = lives.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num5));
					}
				}
				WriteEndElement();
			}
			NetInt coins = o.coins;
			if (coins != null)
			{
				WriteStartElement("coins", "", null, writePrefixed: false);
				IEnumerator enumerator7 = coins.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			NetInt score = o.score;
			if (score != null)
			{
				WriteStartElement("score", "", null, writePrefixed: false);
				IEnumerator enumerator8 = score.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num7 = (int)enumerator8.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num7));
					}
				}
				WriteEndElement();
			}
			NetBool died = o.died;
			if (died != null)
			{
				WriteStartElement("died", "", null, writePrefixed: false);
				IEnumerator enumerator9 = died.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag2 = (bool)enumerator9.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			NetInt whichRound = o.whichRound;
			if (whichRound != null)
			{
				WriteStartElement("whichRound", "", null, writePrefixed: false);
				IEnumerator enumerator10 = whichRound.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num8 = (int)enumerator10.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num8));
					}
				}
				WriteEndElement();
			}
			NetInt whichWave = o.whichWave;
			if (whichWave != null)
			{
				WriteStartElement("whichWave", "", null, writePrefixed: false);
				IEnumerator enumerator11 = whichWave.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num9 = (int)enumerator11.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num9));
					}
				}
				WriteEndElement();
			}
			NetInt heldItem = o.heldItem;
			if (heldItem != null)
			{
				WriteStartElement("heldItem", "", null, writePrefixed: false);
				IEnumerator enumerator12 = heldItem.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num10 = (int)enumerator12.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num10));
					}
				}
				WriteEndElement();
			}
			NetInt world = o.world;
			if (world != null)
			{
				WriteStartElement("world", "", null, writePrefixed: false);
				IEnumerator enumerator13 = world.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num11 = (int)enumerator13.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num11));
					}
				}
				WriteEndElement();
			}
			NetInt waveTimer = o.waveTimer;
			if (waveTimer != null)
			{
				WriteStartElement("waveTimer", "", null, writePrefixed: false);
				IEnumerator enumerator14 = waveTimer.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num12 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num12));
					}
				}
				WriteEndElement();
			}
			NetList<Vector2, NetVector2> monsterChances = o.monsterChances;
			if (monsterChances != null)
			{
				WriteStartElement("monsterChances", "", null, writePrefixed: false);
				IEnumerator enumerator15 = monsterChances.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator15.Current;
						Write33_Vector2("Vector2", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write181_BuildingUpgrade(string n, string ns, BuildingUpgrade o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BuildingUpgrade)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BuildingUpgrade", "");
			}
			WriteElementStringRaw("daysLeftTillUpgradeDone", "", XmlConvert.ToString(o.daysLeftTillUpgradeDone));
			WriteElementString("whichBuilding", "", o.whichBuilding);
			Write33_Vector2("positionOfCarpenter", "", o.positionOfCarpenter, needType: false);
			WriteEndElement(o);
		}

		private void Write180_Stats(string n, string ns, Stats o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Stats)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Stats", "");
			}
			WriteElementStringRaw("seedsSown", "", XmlConvert.ToString(o.seedsSown));
			WriteElementStringRaw("itemsShipped", "", XmlConvert.ToString(o.itemsShipped));
			WriteElementStringRaw("itemsCooked", "", XmlConvert.ToString(o.itemsCooked));
			WriteElementStringRaw("itemsCrafted", "", XmlConvert.ToString(o.itemsCrafted));
			WriteElementStringRaw("chickenEggsLayed", "", XmlConvert.ToString(o.chickenEggsLayed));
			WriteElementStringRaw("duckEggsLayed", "", XmlConvert.ToString(o.duckEggsLayed));
			WriteElementStringRaw("cowMilkProduced", "", XmlConvert.ToString(o.cowMilkProduced));
			WriteElementStringRaw("goatMilkProduced", "", XmlConvert.ToString(o.goatMilkProduced));
			WriteElementStringRaw("rabbitWoolProduced", "", XmlConvert.ToString(o.rabbitWoolProduced));
			WriteElementStringRaw("sheepWoolProduced", "", XmlConvert.ToString(o.sheepWoolProduced));
			WriteElementStringRaw("cheeseMade", "", XmlConvert.ToString(o.cheeseMade));
			WriteElementStringRaw("goatCheeseMade", "", XmlConvert.ToString(o.goatCheeseMade));
			WriteElementStringRaw("trufflesFound", "", XmlConvert.ToString(o.trufflesFound));
			WriteElementStringRaw("stoneGathered", "", XmlConvert.ToString(o.stoneGathered));
			WriteElementStringRaw("rocksCrushed", "", XmlConvert.ToString(o.rocksCrushed));
			WriteElementStringRaw("dirtHoed", "", XmlConvert.ToString(o.dirtHoed));
			WriteElementStringRaw("giftsGiven", "", XmlConvert.ToString(o.giftsGiven));
			WriteElementStringRaw("timesUnconscious", "", XmlConvert.ToString(o.timesUnconscious));
			WriteElementStringRaw("averageBedtime", "", XmlConvert.ToString(o.averageBedtime));
			WriteElementStringRaw("timesFished", "", XmlConvert.ToString(o.timesFished));
			WriteElementStringRaw("fishCaught", "", XmlConvert.ToString(o.fishCaught));
			WriteElementStringRaw("bouldersCracked", "", XmlConvert.ToString(o.bouldersCracked));
			WriteElementStringRaw("stumpsChopped", "", XmlConvert.ToString(o.stumpsChopped));
			WriteElementStringRaw("stepsTaken", "", XmlConvert.ToString(o.stepsTaken));
			WriteElementStringRaw("monstersKilled", "", XmlConvert.ToString(o.monstersKilled));
			WriteElementStringRaw("diamondsFound", "", XmlConvert.ToString(o.diamondsFound));
			WriteElementStringRaw("prismaticShardsFound", "", XmlConvert.ToString(o.prismaticShardsFound));
			WriteElementStringRaw("otherPreciousGemsFound", "", XmlConvert.ToString(o.otherPreciousGemsFound));
			WriteElementStringRaw("caveCarrotsFound", "", XmlConvert.ToString(o.caveCarrotsFound));
			WriteElementStringRaw("copperFound", "", XmlConvert.ToString(o.copperFound));
			WriteElementStringRaw("ironFound", "", XmlConvert.ToString(o.ironFound));
			WriteElementStringRaw("coalFound", "", XmlConvert.ToString(o.coalFound));
			WriteElementStringRaw("coinsFound", "", XmlConvert.ToString(o.coinsFound));
			WriteElementStringRaw("goldFound", "", XmlConvert.ToString(o.goldFound));
			WriteElementStringRaw("iridiumFound", "", XmlConvert.ToString(o.iridiumFound));
			WriteElementStringRaw("barsSmelted", "", XmlConvert.ToString(o.barsSmelted));
			WriteElementStringRaw("beveragesMade", "", XmlConvert.ToString(o.beveragesMade));
			WriteElementStringRaw("preservesMade", "", XmlConvert.ToString(o.preservesMade));
			WriteElementStringRaw("piecesOfTrashRecycled", "", XmlConvert.ToString(o.piecesOfTrashRecycled));
			WriteElementStringRaw("mysticStonesCrushed", "", XmlConvert.ToString(o.mysticStonesCrushed));
			WriteElementStringRaw("daysPlayed", "", XmlConvert.ToString(o.daysPlayed));
			WriteElementStringRaw("weedsEliminated", "", XmlConvert.ToString(o.weedsEliminated));
			WriteElementStringRaw("sticksChopped", "", XmlConvert.ToString(o.sticksChopped));
			WriteElementStringRaw("notesFound", "", XmlConvert.ToString(o.notesFound));
			WriteElementStringRaw("questsCompleted", "", XmlConvert.ToString(o.questsCompleted));
			WriteElementStringRaw("starLevelCropsShipped", "", XmlConvert.ToString(o.starLevelCropsShipped));
			WriteElementStringRaw("cropsShipped", "", XmlConvert.ToString(o.cropsShipped));
			WriteElementStringRaw("itemsForaged", "", XmlConvert.ToString(o.itemsForaged));
			WriteElementStringRaw("slimesKilled", "", XmlConvert.ToString(o.slimesKilled));
			WriteElementStringRaw("geodesCracked", "", XmlConvert.ToString(o.geodesCracked));
			WriteElementStringRaw("goodFriends", "", XmlConvert.ToString(o.goodFriends));
			WriteElementStringRaw("totalMoneyGifted", "", XmlConvert.ToString(o.totalMoneyGifted));
			WriteElementStringRaw("individualMoneyEarned", "", XmlConvert.ToString(o.individualMoneyEarned));
			WriteSerializable(o.specificMonstersKilled, "specificMonstersKilled", "", isNullable: false, wrapped: true);
			WriteSerializable(o.stat_dictionary, "stat_dictionary", "", isNullable: false, wrapped: true);
			WriteElementStringRaw("GoodFriends", "", XmlConvert.ToString(o.GoodFriends));
			WriteElementStringRaw("CropsShipped", "", XmlConvert.ToString(o.CropsShipped));
			WriteElementStringRaw("ItemsForaged", "", XmlConvert.ToString(o.ItemsForaged));
			WriteElementStringRaw("GeodesCracked", "", XmlConvert.ToString(o.GeodesCracked));
			WriteElementStringRaw("SlimesKilled", "", XmlConvert.ToString(o.SlimesKilled));
			WriteElementStringRaw("StarLevelCropsShipped", "", XmlConvert.ToString(o.StarLevelCropsShipped));
			WriteElementStringRaw("StoneGathered", "", XmlConvert.ToString(o.StoneGathered));
			WriteElementStringRaw("QuestsCompleted", "", XmlConvert.ToString(o.QuestsCompleted));
			WriteElementStringRaw("FishCaught", "", XmlConvert.ToString(o.FishCaught));
			WriteElementStringRaw("NotesFound", "", XmlConvert.ToString(o.NotesFound));
			WriteElementStringRaw("SticksChopped", "", XmlConvert.ToString(o.SticksChopped));
			WriteElementStringRaw("WeedsEliminated", "", XmlConvert.ToString(o.WeedsEliminated));
			WriteElementStringRaw("DaysPlayed", "", XmlConvert.ToString(o.DaysPlayed));
			WriteElementStringRaw("BouldersCracked", "", XmlConvert.ToString(o.BouldersCracked));
			WriteElementStringRaw("MysticStonesCrushed", "", XmlConvert.ToString(o.MysticStonesCrushed));
			WriteElementStringRaw("GoatCheeseMade", "", XmlConvert.ToString(o.GoatCheeseMade));
			WriteElementStringRaw("CheeseMade", "", XmlConvert.ToString(o.CheeseMade));
			WriteElementStringRaw("PiecesOfTrashRecycled", "", XmlConvert.ToString(o.PiecesOfTrashRecycled));
			WriteElementStringRaw("PreservesMade", "", XmlConvert.ToString(o.PreservesMade));
			WriteElementStringRaw("BeveragesMade", "", XmlConvert.ToString(o.BeveragesMade));
			WriteElementStringRaw("BarsSmelted", "", XmlConvert.ToString(o.BarsSmelted));
			WriteElementStringRaw("IridiumFound", "", XmlConvert.ToString(o.IridiumFound));
			WriteElementStringRaw("GoldFound", "", XmlConvert.ToString(o.GoldFound));
			WriteElementStringRaw("CoinsFound", "", XmlConvert.ToString(o.CoinsFound));
			WriteElementStringRaw("CoalFound", "", XmlConvert.ToString(o.CoalFound));
			WriteElementStringRaw("IronFound", "", XmlConvert.ToString(o.IronFound));
			WriteElementStringRaw("CopperFound", "", XmlConvert.ToString(o.CopperFound));
			WriteElementStringRaw("CaveCarrotsFound", "", XmlConvert.ToString(o.CaveCarrotsFound));
			WriteElementStringRaw("OtherPreciousGemsFound", "", XmlConvert.ToString(o.OtherPreciousGemsFound));
			WriteElementStringRaw("PrismaticShardsFound", "", XmlConvert.ToString(o.PrismaticShardsFound));
			WriteElementStringRaw("DiamondsFound", "", XmlConvert.ToString(o.DiamondsFound));
			WriteElementStringRaw("MonstersKilled", "", XmlConvert.ToString(o.MonstersKilled));
			WriteElementStringRaw("StepsTaken", "", XmlConvert.ToString(o.StepsTaken));
			WriteElementStringRaw("StumpsChopped", "", XmlConvert.ToString(o.StumpsChopped));
			WriteElementStringRaw("TimesFished", "", XmlConvert.ToString(o.TimesFished));
			WriteElementStringRaw("AverageBedtime", "", XmlConvert.ToString(o.AverageBedtime));
			WriteElementStringRaw("TimesUnconscious", "", XmlConvert.ToString(o.TimesUnconscious));
			WriteElementStringRaw("GiftsGiven", "", XmlConvert.ToString(o.GiftsGiven));
			WriteElementStringRaw("DirtHoed", "", XmlConvert.ToString(o.DirtHoed));
			WriteElementStringRaw("RocksCrushed", "", XmlConvert.ToString(o.RocksCrushed));
			WriteElementStringRaw("TrufflesFound", "", XmlConvert.ToString(o.TrufflesFound));
			WriteElementStringRaw("SheepWoolProduced", "", XmlConvert.ToString(o.SheepWoolProduced));
			WriteElementStringRaw("RabbitWoolProduced", "", XmlConvert.ToString(o.RabbitWoolProduced));
			WriteElementStringRaw("GoatMilkProduced", "", XmlConvert.ToString(o.GoatMilkProduced));
			WriteElementStringRaw("CowMilkProduced", "", XmlConvert.ToString(o.CowMilkProduced));
			WriteElementStringRaw("DuckEggsLayed", "", XmlConvert.ToString(o.DuckEggsLayed));
			WriteElementStringRaw("ItemsCrafted", "", XmlConvert.ToString(o.ItemsCrafted));
			WriteElementStringRaw("ChickenEggsLayed", "", XmlConvert.ToString(o.ChickenEggsLayed));
			WriteElementStringRaw("ItemsCooked", "", XmlConvert.ToString(o.ItemsCooked));
			WriteElementStringRaw("ItemsShipped", "", XmlConvert.ToString(o.ItemsShipped));
			WriteElementStringRaw("SeedsSown", "", XmlConvert.ToString(o.SeedsSown));
			WriteElementStringRaw("IndividualMoneyEarned", "", XmlConvert.ToString(o.IndividualMoneyEarned));
			WriteEndElement(o);
		}

		private void Write179_Quest(string n, string ns, Quest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Quest)))
				{
					if (type == typeof(SecretLostItemQuest))
					{
						Write178_SecretLostItemQuest(n, ns, (SecretLostItemQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LostItemQuest))
					{
						Write177_LostItemQuest(n, ns, (LostItemQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GoSomewhereQuest))
					{
						Write176_GoSomewhereQuest(n, ns, (GoSomewhereQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FishingQuest))
					{
						Write175_FishingQuest(n, ns, (FishingQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CraftingQuest))
					{
						Write174_CraftingQuest(n, ns, (CraftingQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ItemHarvestQuest))
					{
						Write173_ItemHarvestQuest(n, ns, (ItemHarvestQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ItemDeliveryQuest))
					{
						Write172_ItemDeliveryQuest(n, ns, (ItemDeliveryQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ResourceCollectionQuest))
					{
						Write171_ResourceCollectionQuest(n, ns, (ResourceCollectionQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SlayMonsterQuest))
					{
						Write170_SlayMonsterQuest(n, ns, (SlayMonsterQuest)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SocializeQuest))
					{
						Write166_SocializeQuest(n, ns, (SocializeQuest)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Quest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			WriteEndElement(o);
		}

		private void Write166_SocializeQuest(string n, string ns, SocializeQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SocializeQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SocializeQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetStringList whoToGreet = o.whoToGreet;
			if (whoToGreet != null)
			{
				WriteStartElement("whoToGreet", "", null, writePrefixed: false);
				IEnumerator enumerator15 = whoToGreet.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteNullableStringLiteral("string", "", value3);
					}
				}
				WriteEndElement();
			}
			NetInt total = o.total;
			if (total != null)
			{
				IEnumerator enumerator16 = total.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num7 = (int)enumerator16.Current;
						WriteElementStringRaw("total", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetDescriptionElementList parts = o.parts;
			if (parts != null)
			{
				WriteStartElement("parts", "", null, writePrefixed: false);
				IEnumerator enumerator17 = parts.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						DescriptionElement o2 = (DescriptionElement)enumerator17.Current;
						Write165_DescriptionElement("DescriptionElement", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementRef objective = o.objective;
			if (objective != null)
			{
				IEnumerator enumerator18 = objective.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						DescriptionElement o3 = (DescriptionElement)enumerator18.Current;
						Write165_DescriptionElement("objective", "", o3, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write165_DescriptionElement(string n, string ns, DescriptionElement o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DescriptionElement)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DescriptionElement", "");
			}
			WriteElementString("xmlKey", "", o.xmlKey);
			List<object> param = o.param;
			if (param != null)
			{
				WriteStartElement("param", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)param).Count; i++)
				{
					Write2_Object("anyType", "", param[i], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write2_Object(string n, string ns, object o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(object)))
				{
					if (type == typeof(MineInfo))
					{
						Write383_MineInfo(n, ns, (MineInfo)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandWestCave1.CaveCrystal))
					{
						Write379_CaveCrystal(n, ns, (IslandWestCave1.CaveCrystal)o, isNullable, needType: true);
					}
					else if (type == typeof(AbigailGame.CowboyMonster))
					{
						Write377_CowboyMonster(n, ns, (AbigailGame.CowboyMonster)o, isNullable, needType: true);
					}
					else if (type == typeof(AbigailGame.Dracula))
					{
						Write378_Dracula(n, ns, (AbigailGame.Dracula)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector3))
					{
						Write357_Vector3(n, ns, (Vector3)o, needType: true);
					}
					else if (type == typeof(NetDancePartner))
					{
						Write341_NetDancePartner(n, ns, (NetDancePartner)o, isNullable, needType: true);
					}
					else if (type == typeof(NetCharacterRef))
					{
						Write340_NetCharacterRef(n, ns, (NetCharacterRef)o, isNullable, needType: true);
					}
					else if (type == typeof(NetNPCRef))
					{
						Write339_NetNPCRef(n, ns, (NetNPCRef)o, isNullable, needType: true);
					}
					else if (type == typeof(NetWitnessedLock))
					{
						Write338_NetWitnessedLock(n, ns, (NetWitnessedLock)o, isNullable, needType: true);
					}
					else if (type == typeof(NetMutex))
					{
						Write337_NetMutex(n, ns, (NetMutex)o, isNullable, needType: true);
					}
					else if (type == typeof(NetLocationRef))
					{
						Write336_NetLocationRef(n, ns, (NetLocationRef)o, isNullable, needType: true);
					}
					else if (type == typeof(IncomingMessage))
					{
						Write334_IncomingMessage(n, ns, (IncomingMessage)o, isNullable, needType: true);
					}
					else if (type == typeof(ObjectFactory))
					{
						Write333_ObjectFactory(n, ns, (ObjectFactory)o, isNullable, needType: true);
					}
					else if (type == typeof(ItemDescription))
					{
						Write332_ItemDescription(n, ns, (ItemDescription)o, needType: true);
					}
					else if (type == typeof(SynchronizedShopStock))
					{
						Write323_SynchronizedShopStock(n, ns, (SynchronizedShopStock)o, isNullable, needType: true);
					}
					else if (type == typeof(LeftRightClickSpamInputSimulator))
					{
						Write322_Item(n, ns, (LeftRightClickSpamInputSimulator)o, isNullable, needType: true);
					}
					else if (type == typeof(ToolSpamInputSimulator))
					{
						Write321_ToolSpamInputSimulator(n, ns, (ToolSpamInputSimulator)o, isNullable, needType: true);
					}
					else if (type == typeof(BoundingBoxGroup))
					{
						Write320_BoundingBoxGroup(n, ns, (BoundingBoxGroup)o, isNullable, needType: true);
					}
					else if (type == typeof(ToolFactory))
					{
						Write319_ToolFactory(n, ns, (ToolFactory)o, isNullable, needType: true);
					}
					else if (type == typeof(ToolDescription))
					{
						Write318_ToolDescription(n, ns, (ToolDescription)o, needType: true);
					}
					else if (type == typeof(Projectile))
					{
						Write309_Projectile(n, ns, (Projectile)o, isNullable, needType: true);
					}
					else if (type == typeof(DebuffingProjectile))
					{
						Write311_DebuffingProjectile(n, ns, (DebuffingProjectile)o, isNullable, needType: true);
					}
					else if (type == typeof(BasicProjectile))
					{
						Write310_BasicProjectile(n, ns, (BasicProjectile)o, isNullable, needType: true);
					}
					else if (type == typeof(WeatherDebris))
					{
						Write308_WeatherDebris(n, ns, (WeatherDebris)o, isNullable, needType: true);
					}
					else if (type == typeof(StartupPreferences))
					{
						Write307_StartupPreferences(n, ns, (StartupPreferences)o, isNullable, needType: true);
					}
					else if (type == typeof(SaveGame))
					{
						Write304_SaveGame(n, ns, (SaveGame)o, isNullable, needType: true);
					}
					else if (type == typeof(NetLeaderboards))
					{
						Write303_NetLeaderboards(n, ns, (NetLeaderboards)o, isNullable, needType: true);
					}
					else if (type == typeof(NetLeaderboardsEntry))
					{
						Write302_NetLeaderboardsEntry(n, ns, (NetLeaderboardsEntry)o, isNullable, needType: true);
					}
					else if (type == typeof(XmlSerializer))
					{
						Write300_XmlSerializer(n, ns, (XmlSerializer)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector2Serializer))
					{
						Write301_Vector2Serializer(n, ns, (Vector2Serializer)o, isNullable, needType: true);
					}
					else if (type == typeof(XmlSerializationGeneratedCode))
					{
						Write295_XmlSerializationGeneratedCode(n, ns, (XmlSerializationGeneratedCode)o, isNullable, needType: true);
					}
					else if (type == typeof(XmlSerializationWriter))
					{
						Write298_XmlSerializationWriter(n, ns, (XmlSerializationWriter)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector2Writer))
					{
						Write299_Vector2Writer(n, ns, (Vector2Writer)o, isNullable, needType: true);
					}
					else if (type == typeof(XmlSerializationReader))
					{
						Write296_XmlSerializationReader(n, ns, (XmlSerializationReader)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector2Reader))
					{
						Write297_Vector2Reader(n, ns, (Vector2Reader)o, isNullable, needType: true);
					}
					else if (type == typeof(RainDrop))
					{
						Write293_RainDrop(n, ns, (RainDrop)o, isNullable, needType: true);
					}
					else if (type == typeof(FarmActivity))
					{
						Write283_FarmActivity(n, ns, (FarmActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(ClearingActivity))
					{
						Write290_ClearingActivity(n, ns, (ClearingActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(TreeActivity))
					{
						Write289_TreeActivity(n, ns, (TreeActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(MailActivity))
					{
						Write288_MailActivity(n, ns, (MailActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(ShrineActivity))
					{
						Write287_ShrineActivity(n, ns, (ShrineActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(FlowerWatchActivity))
					{
						Write286_FlowerWatchActivity(n, ns, (FlowerWatchActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(CropWatchActivity))
					{
						Write285_CropWatchActivity(n, ns, (CropWatchActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(ArtifactSpotWatchActivity))
					{
						Write284_ArtifactSpotWatchActivity(n, ns, (ArtifactSpotWatchActivity)o, isNullable, needType: true);
					}
					else if (type == typeof(MarriageDialogueReference))
					{
						Write282_MarriageDialogueReference(n, ns, (MarriageDialogueReference)o, isNullable, needType: true);
					}
					else if (type == typeof(NutDropRequest))
					{
						Write278_NutDropRequest(n, ns, (NutDropRequest)o, isNullable, needType: true);
					}
					else if (type == typeof(FarmerPair))
					{
						Write277_FarmerPair(n, ns, (FarmerPair)o, needType: true);
					}
					else if (type == typeof(HairStyleMetadata))
					{
						Write276_HairStyleMetadata(n, ns, (HairStyleMetadata)o, isNullable, needType: true);
					}
					else if (type == typeof(PriorityQueue))
					{
						Write275_PriorityQueue(n, ns, (PriorityQueue)o, isNullable, needType: true);
					}
					else if (type == typeof(NameSelect))
					{
						Write274_NameSelect(n, ns, (NameSelect)o, isNullable, needType: true);
					}
					else if (type == typeof(LightSource))
					{
						Write272_LightSource(n, ns, (LightSource)o, isNullable, needType: true);
					}
					else if (type == typeof(GraphicsResource))
					{
						Write269_GraphicsResource(n, ns, (GraphicsResource)o, isNullable, needType: true);
					}
					else if (type == typeof(Texture))
					{
						Write270_Texture(n, ns, (Texture)o, isNullable, needType: true);
					}
					else if (type == typeof(Texture2D))
					{
						Write271_Texture2D(n, ns, (Texture2D)o, isNullable, needType: true);
					}
					else if (type == typeof(NumberSprite))
					{
						Write268_NumberSprite(n, ns, (NumberSprite)o, isNullable, needType: true);
					}
					else if (type == typeof(Noise))
					{
						Write267_Noise(n, ns, (Noise)o, isNullable, needType: true);
					}
					else if (type == typeof(NetLogger))
					{
						Write266_NetLogger(n, ns, (NetLogger)o, isNullable, needType: true);
					}
					else if (type == typeof(Farm.LightningStrikeEvent))
					{
						Write264_LightningStrikeEvent(n, ns, (Farm.LightningStrikeEvent)o, isNullable, needType: true);
					}
					else if (type == typeof(FarmerRenderer))
					{
						Write263_FarmerRenderer(n, ns, (FarmerRenderer)o, isNullable, needType: true);
					}
					else if (type == typeof(Chunk))
					{
						Write262_Chunk(n, ns, (Chunk)o, isNullable, needType: true);
					}
					else if (type == typeof(NetPausableField<Vector2, NetVector2, NetVector2>))
					{
						Write260_Item(n, ns, (NetPausableField<Vector2, NetVector2, NetVector2>)o, isNullable, needType: true);
					}
					else if (type == typeof(NetPosition))
					{
						Write261_NetPosition(n, ns, (NetPosition)o, isNullable, needType: true);
					}
					else if (type == typeof(SandDuggy))
					{
						Write241_SandDuggy(n, ns, (SandDuggy)o, isNullable, needType: true);
					}
					else if (type == typeof(Warp))
					{
						Write216_Warp(n, ns, (Warp)o, isNullable, needType: true);
					}
					else if (type == typeof(Building))
					{
						Write199_Building(n, ns, (Building)o, isNullable, needType: true);
					}
					else if (type == typeof(FishPond))
					{
						Write198_FishPond(n, ns, (FishPond)o, isNullable, needType: true);
					}
					else if (type == typeof(GreenhouseBuilding))
					{
						Write197_GreenhouseBuilding(n, ns, (GreenhouseBuilding)o, isNullable, needType: true);
					}
					else if (type == typeof(ShippingBin))
					{
						Write196_ShippingBin(n, ns, (ShippingBin)o, isNullable, needType: true);
					}
					else if (type == typeof(JunimoHut))
					{
						Write195_JunimoHut(n, ns, (JunimoHut)o, isNullable, needType: true);
					}
					else if (type == typeof(Mill))
					{
						Write194_Mill(n, ns, (Mill)o, isNullable, needType: true);
					}
					else if (type == typeof(Stable))
					{
						Write193_Stable(n, ns, (Stable)o, isNullable, needType: true);
					}
					else if (type == typeof(Barn))
					{
						Write192_Barn(n, ns, (Barn)o, isNullable, needType: true);
					}
					else if (type == typeof(Coop))
					{
						Write191_Coop(n, ns, (Coop)o, isNullable, needType: true);
					}
					else if (type == typeof(GameLocation))
					{
						Write258_GameLocation(n, ns, (GameLocation)o, isNullable, needType: true);
					}
					else if (type == typeof(Bus))
					{
						Write382_Bus(n, ns, (Bus)o, isNullable, needType: true);
					}
					else if (type == typeof(AnimalHouse))
					{
						Write259_AnimalHouse(n, ns, (AnimalHouse)o, isNullable, needType: true);
					}
					else if (type == typeof(BugLand))
					{
						Write257_BugLand(n, ns, (BugLand)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandLocation))
					{
						Write240_IslandLocation(n, ns, (IslandLocation)o, isNullable, needType: true);
					}
					else if (type == typeof(Caldera))
					{
						Write256_Caldera(n, ns, (Caldera)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandSecret))
					{
						Write254_IslandSecret(n, ns, (IslandSecret)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandHut))
					{
						Write252_IslandHut(n, ns, (IslandHut)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandFieldOffice))
					{
						Write251_IslandFieldOffice(n, ns, (IslandFieldOffice)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandWestCave1))
					{
						Write250_IslandWestCave1(n, ns, (IslandWestCave1)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandFarmCave))
					{
						Write249_IslandFarmCave(n, ns, (IslandFarmCave)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandSouthEastCave))
					{
						Write248_IslandSouthEastCave(n, ns, (IslandSouthEastCave)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandSouthEast))
					{
						Write247_IslandSouthEast(n, ns, (IslandSouthEast)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandNorth))
					{
						Write246_IslandNorth(n, ns, (IslandNorth)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandSouth))
					{
						Write245_IslandSouth(n, ns, (IslandSouth)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandForestLocation))
					{
						Write243_IslandForestLocation(n, ns, (IslandForestLocation)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandShrine))
					{
						Write255_IslandShrine(n, ns, (IslandShrine)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandEast))
					{
						Write244_IslandEast(n, ns, (IslandEast)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandWest))
					{
						Write242_IslandWest(n, ns, (IslandWest)o, isNullable, needType: true);
					}
					else if (type == typeof(BoatTunnel))
					{
						Write239_BoatTunnel(n, ns, (BoatTunnel)o, isNullable, needType: true);
					}
					else if (type == typeof(Mine))
					{
						Write237_Mine(n, ns, (Mine)o, isNullable, needType: true);
					}
					else if (type == typeof(AbandonedJojaMart))
					{
						Write236_AbandonedJojaMart(n, ns, (AbandonedJojaMart)o, isNullable, needType: true);
					}
					else if (type == typeof(ManorHouse))
					{
						Write235_ManorHouse(n, ns, (ManorHouse)o, isNullable, needType: true);
					}
					else if (type == typeof(MovieTheater))
					{
						Write234_MovieTheater(n, ns, (MovieTheater)o, isNullable, needType: true);
					}
					else if (type == typeof(BeachNightMarket))
					{
						Write233_BeachNightMarket(n, ns, (BeachNightMarket)o, isNullable, needType: true);
					}
					else if (type == typeof(MermaidHouse))
					{
						Write232_MermaidHouse(n, ns, (MermaidHouse)o, isNullable, needType: true);
					}
					else if (type == typeof(Submarine))
					{
						Write231_Submarine(n, ns, (Submarine)o, isNullable, needType: true);
					}
					else if (type == typeof(Cellar))
					{
						Write230_Cellar(n, ns, (Cellar)o, isNullable, needType: true);
					}
					else if (type == typeof(Town))
					{
						Write229_Town(n, ns, (Town)o, isNullable, needType: true);
					}
					else if (type == typeof(WizardHouse))
					{
						Write228_WizardHouse(n, ns, (WizardHouse)o, isNullable, needType: true);
					}
					else if (type == typeof(Sewer))
					{
						Write227_Sewer(n, ns, (Sewer)o, isNullable, needType: true);
					}
					else if (type == typeof(Mountain))
					{
						Write226_Mountain(n, ns, (Mountain)o, isNullable, needType: true);
					}
					else if (type == typeof(MineShaft))
					{
						Write225_MineShaft(n, ns, (MineShaft)o, isNullable, needType: true);
					}
					else if (type == typeof(JojaMart))
					{
						Write224_JojaMart(n, ns, (JojaMart)o, isNullable, needType: true);
					}
					else if (type == typeof(FarmCave))
					{
						Write223_FarmCave(n, ns, (FarmCave)o, isNullable, needType: true);
					}
					else if (type == typeof(Desert))
					{
						Write222_Desert(n, ns, (Desert)o, isNullable, needType: true);
					}
					else if (type == typeof(CommunityCenter))
					{
						Write221_CommunityCenter(n, ns, (CommunityCenter)o, isNullable, needType: true);
					}
					else if (type == typeof(BusStop))
					{
						Write220_BusStop(n, ns, (BusStop)o, isNullable, needType: true);
					}
					else if (type == typeof(Club))
					{
						Write219_Club(n, ns, (Club)o, isNullable, needType: true);
					}
					else if (type == typeof(BathHousePool))
					{
						Write215_BathHousePool(n, ns, (BathHousePool)o, isNullable, needType: true);
					}
					else if (type == typeof(ShopLocation))
					{
						Write212_ShopLocation(n, ns, (ShopLocation)o, isNullable, needType: true);
					}
					else if (type == typeof(FishShop))
					{
						Write214_FishShop(n, ns, (FishShop)o, isNullable, needType: true);
					}
					else if (type == typeof(SeedShop))
					{
						Write213_SeedShop(n, ns, (SeedShop)o, isNullable, needType: true);
					}
					else if (type == typeof(Forest))
					{
						Write211_Forest(n, ns, (Forest)o, isNullable, needType: true);
					}
					else if (type == typeof(Summit))
					{
						Write210_Summit(n, ns, (Summit)o, isNullable, needType: true);
					}
					else if (type == typeof(Railroad))
					{
						Write209_Railroad(n, ns, (Railroad)o, isNullable, needType: true);
					}
					else if (type == typeof(Woods))
					{
						Write208_Woods(n, ns, (Woods)o, isNullable, needType: true);
					}
					else if (type == typeof(AdventureGuild))
					{
						Write207_AdventureGuild(n, ns, (AdventureGuild)o, isNullable, needType: true);
					}
					else if (type == typeof(LibraryMuseum))
					{
						Write206_LibraryMuseum(n, ns, (LibraryMuseum)o, isNullable, needType: true);
					}
					else if (type == typeof(DecoratableLocation))
					{
						Write204_DecoratableLocation(n, ns, (DecoratableLocation)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandFarmHouse))
					{
						Write253_IslandFarmHouse(n, ns, (IslandFarmHouse)o, isNullable, needType: true);
					}
					else if (type == typeof(FarmHouse))
					{
						Write217_FarmHouse(n, ns, (FarmHouse)o, isNullable, needType: true);
					}
					else if (type == typeof(Cabin))
					{
						Write218_Cabin(n, ns, (Cabin)o, isNullable, needType: true);
					}
					else if (type == typeof(Shed))
					{
						Write205_Shed(n, ns, (Shed)o, isNullable, needType: true);
					}
					else if (type == typeof(SlimeHutch))
					{
						Write203_SlimeHutch(n, ns, (SlimeHutch)o, isNullable, needType: true);
					}
					else if (type == typeof(Beach))
					{
						Write202_Beach(n, ns, (Beach)o, isNullable, needType: true);
					}
					else if (type == typeof(BuildableGameLocation))
					{
						Write200_BuildableGameLocation(n, ns, (BuildableGameLocation)o, isNullable, needType: true);
					}
					else if (type == typeof(Farm))
					{
						Write201_Farm(n, ns, (Farm)o, isNullable, needType: true);
					}
					else if (type == typeof(Friendship))
					{
						Write189_Friendship(n, ns, (Friendship)o, isNullable, needType: true);
					}
					else if (type == typeof(WorldDate))
					{
						Write187_WorldDate(n, ns, (WorldDate)o, isNullable, needType: true);
					}
					else if (type == typeof(MovieViewerLockEvent))
					{
						Write186_MovieViewerLockEvent(n, ns, (MovieViewerLockEvent)o, isNullable, needType: true);
					}
					else if (type == typeof(StartMovieEvent))
					{
						Write185_StartMovieEvent(n, ns, (StartMovieEvent)o, isNullable, needType: true);
					}
					else if (type == typeof(MovieInvitation))
					{
						Write184_MovieInvitation(n, ns, (MovieInvitation)o, isNullable, needType: true);
					}
					else if (type == typeof(AbigailGame.JOTPKProgress))
					{
						Write182_JOTPKProgress(n, ns, (AbigailGame.JOTPKProgress)o, isNullable, needType: true);
					}
					else if (type == typeof(BuildingUpgrade))
					{
						Write181_BuildingUpgrade(n, ns, (BuildingUpgrade)o, isNullable, needType: true);
					}
					else if (type == typeof(Stats))
					{
						Write180_Stats(n, ns, (Stats)o, isNullable, needType: true);
					}
					else if (type == typeof(KeyValuePair<int, SchedulePathDescription>))
					{
						Write167_Item(n, ns, (KeyValuePair<int, SchedulePathDescription>)o, needType: true);
					}
					else if (type == typeof(DescriptionElement))
					{
						Write165_DescriptionElement(n, ns, (DescriptionElement)o, isNullable, needType: true);
					}
					else if (type == typeof(Quest))
					{
						Write179_Quest(n, ns, (Quest)o, isNullable, needType: true);
					}
					else if (type == typeof(SecretLostItemQuest))
					{
						Write178_SecretLostItemQuest(n, ns, (SecretLostItemQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(LostItemQuest))
					{
						Write177_LostItemQuest(n, ns, (LostItemQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(GoSomewhereQuest))
					{
						Write176_GoSomewhereQuest(n, ns, (GoSomewhereQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(FishingQuest))
					{
						Write175_FishingQuest(n, ns, (FishingQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(CraftingQuest))
					{
						Write174_CraftingQuest(n, ns, (CraftingQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(ItemHarvestQuest))
					{
						Write173_ItemHarvestQuest(n, ns, (ItemHarvestQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(ItemDeliveryQuest))
					{
						Write172_ItemDeliveryQuest(n, ns, (ItemDeliveryQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(ResourceCollectionQuest))
					{
						Write171_ResourceCollectionQuest(n, ns, (ResourceCollectionQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(SlayMonsterQuest))
					{
						Write170_SlayMonsterQuest(n, ns, (SlayMonsterQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(SocializeQuest))
					{
						Write166_SocializeQuest(n, ns, (SocializeQuest)o, isNullable, needType: true);
					}
					else if (type == typeof(Character))
					{
						Write164_Character(n, ns, (Character)o, isNullable, needType: true);
					}
					else if (type == typeof(FarmAnimal))
					{
						Write265_FarmAnimal(n, ns, (FarmAnimal)o, isNullable, needType: true);
					}
					else if (type == typeof(NPC))
					{
						Write168_NPC(n, ns, (NPC)o, isNullable, needType: true);
					}
					else if (type == typeof(JunimoHarvester))
					{
						Write391_JunimoHarvester(n, ns, (JunimoHarvester)o, isNullable, needType: true);
					}
					else if (type == typeof(Junimo))
					{
						Write390_Junimo(n, ns, (Junimo)o, isNullable, needType: true);
					}
					else if (type == typeof(Horse))
					{
						Write389_Horse(n, ns, (Horse)o, isNullable, needType: true);
					}
					else if (type == typeof(Child))
					{
						Write387_Child(n, ns, (Child)o, isNullable, needType: true);
					}
					else if (type == typeof(Pet))
					{
						Write385_Pet(n, ns, (Pet)o, isNullable, needType: true);
					}
					else if (type == typeof(Dog))
					{
						Write388_Dog(n, ns, (Dog)o, isNullable, needType: true);
					}
					else if (type == typeof(Cat))
					{
						Write386_Cat(n, ns, (Cat)o, isNullable, needType: true);
					}
					else if (type == typeof(TrashBear))
					{
						Write384_TrashBear(n, ns, (TrashBear)o, isNullable, needType: true);
					}
					else if (type == typeof(Monster))
					{
						Write169_Monster(n, ns, (Monster)o, isNullable, needType: true);
					}
					else if (type == typeof(GreenSlime))
					{
						Write375_GreenSlime(n, ns, (GreenSlime)o, isNullable, needType: true);
					}
					else if (type == typeof(ShadowGuy))
					{
						Write374_ShadowGuy(n, ns, (ShadowGuy)o, isNullable, needType: true);
					}
					else if (type == typeof(Ghost))
					{
						Write372_Ghost(n, ns, (Ghost)o, isNullable, needType: true);
					}
					else if (type == typeof(Duggy))
					{
						Write371_Duggy(n, ns, (Duggy)o, isNullable, needType: true);
					}
					else if (type == typeof(RockCrab))
					{
						Write370_RockCrab(n, ns, (RockCrab)o, isNullable, needType: true);
					}
					else if (type == typeof(LavaCrab))
					{
						Write369_LavaCrab(n, ns, (LavaCrab)o, isNullable, needType: true);
					}
					else if (type == typeof(SquidKid))
					{
						Write368_SquidKid(n, ns, (SquidKid)o, isNullable, needType: true);
					}
					else if (type == typeof(ShadowGirl))
					{
						Write367_ShadowGirl(n, ns, (ShadowGirl)o, isNullable, needType: true);
					}
					else if (type == typeof(RockGolem))
					{
						Write366_RockGolem(n, ns, (RockGolem)o, isNullable, needType: true);
					}
					else if (type == typeof(Grub))
					{
						Write365_Grub(n, ns, (Grub)o, isNullable, needType: true);
					}
					else if (type == typeof(Fly))
					{
						Write364_Fly(n, ns, (Fly)o, isNullable, needType: true);
					}
					else if (type == typeof(Bat))
					{
						Write363_Bat(n, ns, (Bat)o, isNullable, needType: true);
					}
					else if (type == typeof(DustSpirit))
					{
						Write362_DustSpirit(n, ns, (DustSpirit)o, isNullable, needType: true);
					}
					else if (type == typeof(Skeleton))
					{
						Write361_Skeleton(n, ns, (Skeleton)o, isNullable, needType: true);
					}
					else if (type == typeof(ShadowShaman))
					{
						Write360_ShadowShaman(n, ns, (ShadowShaman)o, isNullable, needType: true);
					}
					else if (type == typeof(ShadowBrute))
					{
						Write359_ShadowBrute(n, ns, (ShadowBrute)o, isNullable, needType: true);
					}
					else if (type == typeof(Serpent))
					{
						Write358_Serpent(n, ns, (Serpent)o, isNullable, needType: true);
					}
					else if (type == typeof(Mummy))
					{
						Write356_Mummy(n, ns, (Mummy)o, isNullable, needType: true);
					}
					else if (type == typeof(BigSlime))
					{
						Write355_BigSlime(n, ns, (BigSlime)o, isNullable, needType: true);
					}
					else if (type == typeof(Bug))
					{
						Write354_Bug(n, ns, (Bug)o, isNullable, needType: true);
					}
					else if (type == typeof(DinoMonster))
					{
						Write352_DinoMonster(n, ns, (DinoMonster)o, isNullable, needType: true);
					}
					else if (type == typeof(BlueSquid))
					{
						Write351_BlueSquid(n, ns, (BlueSquid)o, isNullable, needType: true);
					}
					else if (type == typeof(DwarvishSentry))
					{
						Write350_DwarvishSentry(n, ns, (DwarvishSentry)o, isNullable, needType: true);
					}
					else if (type == typeof(Spiker))
					{
						Write349_Spiker(n, ns, (Spiker)o, isNullable, needType: true);
					}
					else if (type == typeof(Shooter))
					{
						Write348_Shooter(n, ns, (Shooter)o, isNullable, needType: true);
					}
					else if (type == typeof(Leaper))
					{
						Write347_Leaper(n, ns, (Leaper)o, isNullable, needType: true);
					}
					else if (type == typeof(LavaLurk))
					{
						Write345_LavaLurk(n, ns, (LavaLurk)o, isNullable, needType: true);
					}
					else if (type == typeof(MetalHead))
					{
						Write343_MetalHead(n, ns, (MetalHead)o, isNullable, needType: true);
					}
					else if (type == typeof(HotHead))
					{
						Write344_HotHead(n, ns, (HotHead)o, isNullable, needType: true);
					}
					else if (type == typeof(AngryRoger))
					{
						Write342_AngryRoger(n, ns, (AngryRoger)o, isNullable, needType: true);
					}
					else if (type == typeof(Farmer))
					{
						Write183_Farmer(n, ns, (Farmer)o, isNullable, needType: true);
					}
					else if (type == typeof(SpecialOrder))
					{
						Write159_SpecialOrder(n, ns, (SpecialOrder)o, isNullable, needType: true);
					}
					else if (type == typeof(OrderReward))
					{
						Write144_OrderReward(n, ns, (OrderReward)o, isNullable, needType: true);
					}
					else if (type == typeof(FriendshipReward))
					{
						Write158_FriendshipReward(n, ns, (FriendshipReward)o, isNullable, needType: true);
					}
					else if (type == typeof(ResetEventReward))
					{
						Write157_ResetEventReward(n, ns, (ResetEventReward)o, isNullable, needType: true);
					}
					else if (type == typeof(GemsReward))
					{
						Write156_GemsReward(n, ns, (GemsReward)o, isNullable, needType: true);
					}
					else if (type == typeof(MoneyReward))
					{
						Write155_MoneyReward(n, ns, (MoneyReward)o, isNullable, needType: true);
					}
					else if (type == typeof(MailReward))
					{
						Write154_MailReward(n, ns, (MailReward)o, isNullable, needType: true);
					}
					else if (type == typeof(Crop))
					{
						Write138_Crop(n, ns, (Crop)o, isNullable, needType: true);
					}
					else if (type == typeof(Lazy<Texture2D>))
					{
						Write127_LazyOfTexture2D(n, ns, (Lazy<Texture2D>)o, isNullable, needType: true);
					}
					else if (type == typeof(TerrainFeature))
					{
						Write137_TerrainFeature(n, ns, (TerrainFeature)o, isNullable, needType: true);
					}
					else if (type == typeof(HoeDirt))
					{
						Write139_HoeDirt(n, ns, (HoeDirt)o, isNullable, needType: true);
					}
					else if (type == typeof(LargeTerrainFeature))
					{
						Write135_LargeTerrainFeature(n, ns, (LargeTerrainFeature)o, isNullable, needType: true);
					}
					else if (type == typeof(Bush))
					{
						Write136_Bush(n, ns, (Bush)o, isNullable, needType: true);
					}
					else if (type == typeof(FruitTree))
					{
						Write134_FruitTree(n, ns, (FruitTree)o, isNullable, needType: true);
					}
					else if (type == typeof(ResourceClump))
					{
						Write132_ResourceClump(n, ns, (ResourceClump)o, isNullable, needType: true);
					}
					else if (type == typeof(GiantCrop))
					{
						Write133_GiantCrop(n, ns, (GiantCrop)o, isNullable, needType: true);
					}
					else if (type == typeof(Flooring))
					{
						Write130_Flooring(n, ns, (Flooring)o, isNullable, needType: true);
					}
					else if (type == typeof(Quartz))
					{
						Write129_Quartz(n, ns, (Quartz)o, isNullable, needType: true);
					}
					else if (type == typeof(Tree))
					{
						Write128_Tree(n, ns, (Tree)o, isNullable, needType: true);
					}
					else if (type == typeof(Grass))
					{
						Write126_Grass(n, ns, (Grass)o, isNullable, needType: true);
					}
					else if (type == typeof(CosmeticPlant))
					{
						Write131_CosmeticPlant(n, ns, (CosmeticPlant)o, isNullable, needType: true);
					}
					else if (type == typeof(BaseEnchantment))
					{
						Write99_BaseEnchantment(n, ns, (BaseEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(FishingRodEnchantment))
					{
						Write87_FishingRodEnchantment(n, ns, (FishingRodEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(PreservingEnchantment))
					{
						Write90_PreservingEnchantment(n, ns, (PreservingEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(AutoHookEnchantment))
					{
						Write89_AutoHookEnchantment(n, ns, (AutoHookEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(MasterEnchantment))
					{
						Write88_MasterEnchantment(n, ns, (MasterEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(PowerfulEnchantment))
					{
						Write85_PowerfulEnchantment(n, ns, (PowerfulEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(EfficientToolEnchantment))
					{
						Write84_EfficientToolEnchantment(n, ns, (EfficientToolEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(ReachingToolEnchantment))
					{
						Write80_ReachingToolEnchantment(n, ns, (ReachingToolEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(SwiftToolEnchantment))
					{
						Write79_SwiftToolEnchantment(n, ns, (SwiftToolEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(PickaxeEnchantment))
					{
						Write78_PickaxeEnchantment(n, ns, (PickaxeEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(HoeEnchantment))
					{
						Write77_HoeEnchantment(n, ns, (HoeEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(GenerousEnchantment))
					{
						Write86_GenerousEnchantment(n, ns, (GenerousEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(ArchaeologistEnchantment))
					{
						Write83_ArchaeologistEnchantment(n, ns, (ArchaeologistEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(AxeEnchantment))
					{
						Write76_AxeEnchantment(n, ns, (AxeEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(ShavingEnchantment))
					{
						Write82_ShavingEnchantment(n, ns, (ShavingEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(WateringCanEnchantment))
					{
						Write75_WateringCanEnchantment(n, ns, (WateringCanEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(BottomlessEnchantment))
					{
						Write81_BottomlessEnchantment(n, ns, (BottomlessEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(PanEnchantment))
					{
						Write74_PanEnchantment(n, ns, (PanEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(MilkPailEnchantment))
					{
						Write73_MilkPailEnchantment(n, ns, (MilkPailEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(ShearsEnchantment))
					{
						Write72_ShearsEnchantment(n, ns, (ShearsEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(BaseWeaponEnchantment))
					{
						Write65_BaseWeaponEnchantment(n, ns, (BaseWeaponEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(GalaxySoulEnchantment))
					{
						Write98_GalaxySoulEnchantment(n, ns, (GalaxySoulEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(DiamondEnchantment))
					{
						Write97_DiamondEnchantment(n, ns, (DiamondEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(RubyEnchantment))
					{
						Write96_RubyEnchantment(n, ns, (RubyEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(EmeraldEnchantment))
					{
						Write95_EmeraldEnchantment(n, ns, (EmeraldEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(JadeEnchantment))
					{
						Write94_JadeEnchantment(n, ns, (JadeEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(AquamarineEnchantment))
					{
						Write93_AquamarineEnchantment(n, ns, (AquamarineEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(TopazEnchantment))
					{
						Write92_TopazEnchantment(n, ns, (TopazEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(AmethystEnchantment))
					{
						Write91_AmethystEnchantment(n, ns, (AmethystEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(CrusaderEnchantment))
					{
						Write71_CrusaderEnchantment(n, ns, (CrusaderEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(VampiricEnchantment))
					{
						Write70_VampiricEnchantment(n, ns, (VampiricEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(MagicEnchantment))
					{
						Write69_MagicEnchantment(n, ns, (MagicEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(HaymakerEnchantment))
					{
						Write68_HaymakerEnchantment(n, ns, (HaymakerEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(BugKillerEnchantment))
					{
						Write67_BugKillerEnchantment(n, ns, (BugKillerEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(ArtfulEnchantment))
					{
						Write66_ArtfulEnchantment(n, ns, (ArtfulEnchantment)o, isNullable, needType: true);
					}
					else if (type == typeof(Rectangle))
					{
						Write51_Rectangle(n, ns, (Rectangle)o, needType: true);
					}
					else if (type == typeof(Item))
					{
						Write143_Item(n, ns, (Item)o, isNullable, needType: true);
					}
					else if (type == typeof(Tool))
					{
						Write112_Tool(n, ns, (Tool)o, isNullable, needType: true);
					}
					else if (type == typeof(Sword))
					{
						Write317_Sword(n, ns, (Sword)o, isNullable, needType: true);
					}
					else if (type == typeof(Stackable))
					{
						Write315_Stackable(n, ns, (Stackable)o, isNullable, needType: true);
					}
					else if (type == typeof(Seeds))
					{
						Write316_Seeds(n, ns, (Seeds)o, isNullable, needType: true);
					}
					else if (type == typeof(Raft))
					{
						Write314_Raft(n, ns, (Raft)o, isNullable, needType: true);
					}
					else if (type == typeof(Lantern))
					{
						Write313_Lantern(n, ns, (Lantern)o, isNullable, needType: true);
					}
					else if (type == typeof(Blueprints))
					{
						Write312_Blueprints(n, ns, (Blueprints)o, isNullable, needType: true);
					}
					else if (type == typeof(MeleeWeapon))
					{
						Write113_MeleeWeapon(n, ns, (MeleeWeapon)o, isNullable, needType: true);
					}
					else if (type == typeof(GenericTool))
					{
						Write111_GenericTool(n, ns, (GenericTool)o, isNullable, needType: true);
					}
					else if (type == typeof(Slingshot))
					{
						Write110_Slingshot(n, ns, (Slingshot)o, isNullable, needType: true);
					}
					else if (type == typeof(WateringCan))
					{
						Write109_WateringCan(n, ns, (WateringCan)o, isNullable, needType: true);
					}
					else if (type == typeof(Pickaxe))
					{
						Write108_Pickaxe(n, ns, (Pickaxe)o, isNullable, needType: true);
					}
					else if (type == typeof(Pan))
					{
						Write107_Pan(n, ns, (Pan)o, isNullable, needType: true);
					}
					else if (type == typeof(FishingRod))
					{
						Write106_FishingRod(n, ns, (FishingRod)o, isNullable, needType: true);
					}
					else if (type == typeof(Hoe))
					{
						Write105_Hoe(n, ns, (Hoe)o, isNullable, needType: true);
					}
					else if (type == typeof(Wand))
					{
						Write104_Wand(n, ns, (Wand)o, isNullable, needType: true);
					}
					else if (type == typeof(Axe))
					{
						Write103_Axe(n, ns, (Axe)o, isNullable, needType: true);
					}
					else if (type == typeof(MilkPail))
					{
						Write102_MilkPail(n, ns, (MilkPail)o, isNullable, needType: true);
					}
					else if (type == typeof(Shears))
					{
						Write101_Shears(n, ns, (Shears)o, isNullable, needType: true);
					}
					else if (type == typeof(MagnifyingGlass))
					{
						Write100_MagnifyingGlass(n, ns, (MagnifyingGlass)o, isNullable, needType: true);
					}
					else if (type == typeof(Ring))
					{
						Write60_Ring(n, ns, (Ring)o, isNullable, needType: true);
					}
					else if (type == typeof(CombinedRing))
					{
						Write61_CombinedRing(n, ns, (CombinedRing)o, isNullable, needType: true);
					}
					else if (type == typeof(Clothing))
					{
						Write59_Clothing(n, ns, (Clothing)o, isNullable, needType: true);
					}
					else if (type == typeof(Hat))
					{
						Write57_Hat(n, ns, (Hat)o, isNullable, needType: true);
					}
					else if (type == typeof(Boots))
					{
						Write56_Boots(n, ns, (Boots)o, isNullable, needType: true);
					}
					else if (type == typeof(SpecialItem))
					{
						Write54_SpecialItem(n, ns, (SpecialItem)o, isNullable, needType: true);
					}
					else if (type == typeof(StardewValley.Object))
					{
						Write142_Object(n, ns, (StardewValley.Object)o, isNullable, needType: true);
					}
					else if (type == typeof(BreakableContainer))
					{
						Write329_BreakableContainer(n, ns, (BreakableContainer)o, isNullable, needType: true);
					}
					else if (type == typeof(Sign))
					{
						Write141_Sign(n, ns, (Sign)o, isNullable, needType: true);
					}
					else if (type == typeof(IndoorPot))
					{
						Write140_IndoorPot(n, ns, (IndoorPot)o, isNullable, needType: true);
					}
					else if (type == typeof(ColoredObject))
					{
						Write125_ColoredObject(n, ns, (ColoredObject)o, isNullable, needType: true);
					}
					else if (type == typeof(SwitchFloor))
					{
						Write124_SwitchFloor(n, ns, (SwitchFloor)o, isNullable, needType: true);
					}
					else if (type == typeof(Cask))
					{
						Write123_Cask(n, ns, (Cask)o, isNullable, needType: true);
					}
					else if (type == typeof(WoodChipper))
					{
						Write122_WoodChipper(n, ns, (WoodChipper)o, isNullable, needType: true);
					}
					else if (type == typeof(Phone))
					{
						Write117_Phone(n, ns, (Phone)o, isNullable, needType: true);
					}
					else if (type == typeof(MiniJukebox))
					{
						Write116_MiniJukebox(n, ns, (MiniJukebox)o, isNullable, needType: true);
					}
					else if (type == typeof(Workbench))
					{
						Write115_Workbench(n, ns, (Workbench)o, isNullable, needType: true);
					}
					else if (type == typeof(Chest))
					{
						Write114_Chest(n, ns, (Chest)o, isNullable, needType: true);
					}
					else if (type == typeof(CrabPot))
					{
						Write64_CrabPot(n, ns, (CrabPot)o, isNullable, needType: true);
					}
					else if (type == typeof(Furniture))
					{
						Write62_Furniture(n, ns, (Furniture)o, isNullable, needType: true);
					}
					else if (type == typeof(BedFurniture))
					{
						Write121_BedFurniture(n, ns, (BedFurniture)o, isNullable, needType: true);
					}
					else if (type == typeof(StorageFurniture))
					{
						Write118_StorageFurniture(n, ns, (StorageFurniture)o, isNullable, needType: true);
					}
					else if (type == typeof(FishTankFurniture))
					{
						Write119_FishTankFurniture(n, ns, (FishTankFurniture)o, isNullable, needType: true);
					}
					else if (type == typeof(TV))
					{
						Write63_TV(n, ns, (TV)o, isNullable, needType: true);
					}
					else if (type == typeof(ItemPedestal))
					{
						Write58_ItemPedestal(n, ns, (ItemPedestal)o, isNullable, needType: true);
					}
					else if (type == typeof(Wallpaper))
					{
						Write55_Wallpaper(n, ns, (Wallpaper)o, isNullable, needType: true);
					}
					else if (type == typeof(Torch))
					{
						Write53_Torch(n, ns, (Torch)o, isNullable, needType: true);
					}
					else if (type == typeof(Fence))
					{
						Write52_Fence(n, ns, (Fence)o, isNullable, needType: true);
					}
					else if (type == typeof(OrderObjective))
					{
						Write50_OrderObjective(n, ns, (OrderObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(DonateObjective))
					{
						Write153_DonateObjective(n, ns, (DonateObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(CollectObjective))
					{
						Write152_CollectObjective(n, ns, (CollectObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(ReachMineFloorObjective))
					{
						Write151_ReachMineFloorObjective(n, ns, (ReachMineFloorObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(JKScoreObjective))
					{
						Write150_JKScoreObjective(n, ns, (JKScoreObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(GiftObjective))
					{
						Write149_GiftObjective(n, ns, (GiftObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(FishObjective))
					{
						Write148_FishObjective(n, ns, (FishObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(DeliverObjective))
					{
						Write147_DeliverObjective(n, ns, (DeliverObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(SlayObjective))
					{
						Write146_SlayObjective(n, ns, (SlayObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(ShipObjective))
					{
						Write145_ShipObjective(n, ns, (ShipObjective)o, isNullable, needType: true);
					}
					else if (type == typeof(MapSeat))
					{
						Write49_MapSeat(n, ns, (MapSeat)o, isNullable, needType: true);
					}
					else if (type == typeof(Options))
					{
						Write48_Options(n, ns, (Options)o, isNullable, needType: true);
					}
					else if (type == typeof(InputButton))
					{
						Write47_InputButton(n, ns, (InputButton)o, needType: true);
					}
					else if (type == typeof(Point))
					{
						Write42_Point(n, ns, (Point)o, needType: true);
					}
					else if (type == typeof(LocationName))
					{
						Write41_LocationName(n, ns, (LocationName)o, isNullable, needType: true);
					}
					else if (type == typeof(LocalMultiplayer))
					{
						Write40_LocalMultiplayer(n, ns, (LocalMultiplayer)o, isNullable, needType: true);
					}
					else if (type == typeof(IslandGemBird))
					{
						Write35_IslandGemBird(n, ns, (IslandGemBird)o, isNullable, needType: true);
					}
					else if (type == typeof(Color))
					{
						Write34_Color(n, ns, (Color)o, needType: true);
					}
					else if (type == typeof(Vector2))
					{
						Write33_Vector2(n, ns, (Vector2)o, needType: true);
					}
					else if (type == typeof(BuildingPaintColor))
					{
						Write30_BuildingPaintColor(n, ns, (BuildingPaintColor)o, isNullable, needType: true);
					}
					else if (type == typeof(BuildingPainter))
					{
						Write31_BuildingPainter(n, ns, (BuildingPainter)o, isNullable, needType: true);
					}
					else if (type == typeof(Tween<Quaternion>))
					{
						Write28_TweenOfQuaternion(n, ns, (Tween<Quaternion>)o, isNullable, needType: true);
					}
					else if (type == typeof(QuaternionTween))
					{
						Write29_QuaternionTween(n, ns, (QuaternionTween)o, isNullable, needType: true);
					}
					else if (type == typeof(Tween<Color>))
					{
						Write26_TweenOfColor(n, ns, (Tween<Color>)o, isNullable, needType: true);
					}
					else if (type == typeof(ColorTween))
					{
						Write27_ColorTween(n, ns, (ColorTween)o, isNullable, needType: true);
					}
					else if (type == typeof(Tween<Vector4>))
					{
						Write24_TweenOfVector4(n, ns, (Tween<Vector4>)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector4Tween))
					{
						Write25_Vector4Tween(n, ns, (Vector4Tween)o, isNullable, needType: true);
					}
					else if (type == typeof(Tween<Vector3>))
					{
						Write22_TweenOfVector3(n, ns, (Tween<Vector3>)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector3Tween))
					{
						Write23_Vector3Tween(n, ns, (Vector3Tween)o, isNullable, needType: true);
					}
					else if (type == typeof(Tween<Vector2>))
					{
						Write20_TweenOfVector2(n, ns, (Tween<Vector2>)o, isNullable, needType: true);
					}
					else if (type == typeof(Vector2Tween))
					{
						Write21_Vector2Tween(n, ns, (Vector2Tween)o, isNullable, needType: true);
					}
					else if (type == typeof(Tween<float>))
					{
						Write18_TweenOfSingle(n, ns, (Tween<float>)o, isNullable, needType: true);
					}
					else if (type == typeof(FloatTween))
					{
						Write19_FloatTween(n, ns, (FloatTween)o, isNullable, needType: true);
					}
					else if (type == typeof(WaterTiles.WaterTileData))
					{
						Write15_WaterTileData(n, ns, (WaterTiles.WaterTileData)o, needType: true);
					}
					else if (type == typeof(Attribute))
					{
						Write13_Attribute(n, ns, (Attribute)o, isNullable, needType: true);
					}
					else if (type == typeof(NonInstancedStatic))
					{
						Write39_NonInstancedStatic(n, ns, (NonInstancedStatic)o, isNullable, needType: true);
					}
					else if (type == typeof(InstancedStatic))
					{
						Write38_InstancedStatic(n, ns, (InstancedStatic)o, isNullable, needType: true);
					}
					else if (type == typeof(InstanceStatics))
					{
						Write37_InstanceStatics(n, ns, (InstanceStatics)o, isNullable, needType: true);
					}
					else if (type == typeof(DontLoadDefaultSetting))
					{
						Write14_DontLoadDefaultSetting(n, ns, (DontLoadDefaultSetting)o, isNullable, needType: true);
					}
					else if (type == typeof(LocationWeather))
					{
						Write12_LocationWeather(n, ns, (LocationWeather)o, isNullable, needType: true);
					}
					else if (type == typeof(FurnitureID))
					{
						Write5_FurnitureID(n, ns, (FurnitureID)o, needType: true);
					}
					else if (type == typeof(BigCraftableID))
					{
						Write4_BigCraftableID(n, ns, (BigCraftableID)o, needType: true);
					}
					else if (type == typeof(ObjectID))
					{
						Write3_ObjectID(n, ns, (ObjectID)o, needType: true);
					}
					else if (type == typeof(WalkDirection))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("WalkDirection", "");
						base.Writer.WriteString(Write1_WalkDirection((WalkDirection)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(MouseCursor))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("MouseCursor", "");
						base.Writer.WriteString(Write6_MouseCursor((MouseCursor)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(TapState))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("TapState", "");
						base.Writer.WriteString(Write7_TapState((TapState)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(DistanceToTarget))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("DistanceToTarget", "");
						base.Writer.WriteString(Write8_DistanceToTarget((DistanceToTarget)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(WeaponControl))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("WeaponControl", "");
						base.Writer.WriteString(Write9_WeaponControl((WeaponControl)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(tutorialType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("tutorialType", "");
						base.Writer.WriteString(Write10_tutorialType((tutorialType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(TutorialShopLocation))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("TutorialShopLocation", "");
						base.Writer.WriteString(Write11_TutorialShopLocation((TutorialShopLocation)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetInt))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfInt", "");
						NetInt netInt = (NetInt)o;
						if (netInt != null)
						{
							IEnumerator enumerator = netInt.GetEnumerator();
							if (enumerator != null)
							{
								while (enumerator.MoveNext())
								{
									int num = (int)enumerator.Current;
									WriteElementStringRaw("int", "", XmlConvert.ToString(num));
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetBool))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfBoolean", "");
						NetBool netBool = (NetBool)o;
						if (netBool != null)
						{
							IEnumerator enumerator2 = netBool.GetEnumerator();
							if (enumerator2 != null)
							{
								while (enumerator2.MoveNext())
								{
									bool flag = (bool)enumerator2.Current;
									WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(TweenState))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("TweenState", "");
						base.Writer.WriteString(Write16_TweenState((TweenState)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(StopBehavior))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("StopBehavior", "");
						base.Writer.WriteString(Write17_StopBehavior((StopBehavior)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetString))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfString", "");
						NetString netString = (NetString)o;
						if (netString != null)
						{
							IEnumerator enumerator3 = netString.GetEnumerator();
							if (enumerator3 != null)
							{
								while (enumerator3.MoveNext())
								{
									string value = (string)enumerator3.Current;
									WriteNullableStringLiteral("string", "", value);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(HouseRenovation.AnimationType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("AnimationType", "");
						base.Writer.WriteString(Write32_AnimationType((HouseRenovation.AnimationType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(IslandGemBird.GemBirdType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("GemBirdType", "");
						base.Writer.WriteString(Write36_GemBirdType((IslandGemBird.GemBirdType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Options.ItemStowingModes))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ItemStowingModes", "");
						base.Writer.WriteString(Write43_ItemStowingModes((Options.ItemStowingModes)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Options.GamepadModes))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("GamepadModes", "");
						base.Writer.WriteString(Write44_GamepadModes((Options.GamepadModes)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(ServerPrivacy))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ServerPrivacy", "");
						base.Writer.WriteString(Write45_ServerPrivacy((ServerPrivacy)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Keys))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("Keys", "");
						base.Writer.WriteString(Write46_Keys((Keys)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(InputButton[]))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfInputButton", "");
						InputButton[] array = (InputButton[])o;
						if (array != null)
						{
							for (int i = 0; i < array.Length; i++)
							{
								Write47_InputButton("InputButton", "", array[i], needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(ModDataDictionary))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfStringString", "");
						ModDataDictionary modDataDictionary = (ModDataDictionary)o;
						if (modDataDictionary != null)
						{
							IEnumerator enumerator4 = modDataDictionary.GetEnumerator();
							if (enumerator4 != null)
							{
								while (enumerator4.MoveNext())
								{
									SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator4.Current;
									WriteSerializable(serializable, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetList<Ring, NetRef<Ring>>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfRing", "");
						NetList<Ring, NetRef<Ring>> netList = (NetList<Ring, NetRef<Ring>>)o;
						if (netList != null)
						{
							IEnumerator enumerator5 = netList.GetEnumerator();
							if (enumerator5 != null)
							{
								while (enumerator5.MoveNext())
								{
									Ring o2 = (Ring)enumerator5.Current;
									Write60_Ring("Ring", "", o2, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetObjectList<Item>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfItem", "");
						NetObjectList<Item> netObjectList = (NetObjectList<Item>)o;
						if (netObjectList != null)
						{
							IEnumerator enumerator6 = netObjectList.GetEnumerator();
							if (enumerator6 != null)
							{
								while (enumerator6.MoveNext())
								{
									Item o3 = (Item)enumerator6.Current;
									Write143_Item("Item", "", o3, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetLongDictionary<NetObjectList<Item>, NetRef<NetObjectList<Item>>>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfInt64NetObjectListOfItem", "");
						NetLongDictionary<NetObjectList<Item>, NetRef<NetObjectList<Item>>> netLongDictionary = (NetLongDictionary<NetObjectList<Item>, NetRef<NetObjectList<Item>>>)o;
						if (netLongDictionary != null)
						{
							IEnumerator enumerator7 = netLongDictionary.GetEnumerator();
							if (enumerator7 != null)
							{
								while (enumerator7.MoveNext())
								{
									SerializableDictionary<long, NetObjectList<Item>> serializable2 = (SerializableDictionary<long, NetObjectList<Item>>)enumerator7.Current;
									WriteSerializable(serializable2, "SerializableDictionaryOfInt64NetObjectListOfItem", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetObjectArray<StardewValley.Object>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfObject", "");
						NetObjectArray<StardewValley.Object> netObjectArray = (NetObjectArray<StardewValley.Object>)o;
						if (netObjectArray != null)
						{
							IEnumerator enumerator8 = netObjectArray.GetEnumerator();
							if (enumerator8 != null)
							{
								while (enumerator8.MoveNext())
								{
									StardewValley.Object o4 = (StardewValley.Object)enumerator8.Current;
									Write142_Object("Object", "", o4, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(BedFurniture.BedType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("BedType", "");
						base.Writer.WriteString(Write120_BedType((BedFurniture.BedType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetFloat))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfFloat", "");
						NetFloat netFloat = (NetFloat)o;
						if (netFloat != null)
						{
							IEnumerator enumerator9 = netFloat.GetEnumerator();
							if (enumerator9 != null)
							{
								while (enumerator9.MoveNext())
								{
									float num2 = (float)enumerator9.Current;
									WriteElementStringRaw("float", "", XmlConvert.ToString(num2));
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(SpecialOrder.QuestState))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("QuestState", "");
						base.Writer.WriteString(Write160_QuestState((SpecialOrder.QuestState)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(SpecialOrder.QuestDuration))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("QuestDuration", "");
						base.Writer.WriteString(Write161_QuestDuration((SpecialOrder.QuestDuration)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(GiftObjective.LikeLevels))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("LikeLevels", "");
						base.Writer.WriteString(Write162_LikeLevels((GiftObjective.LikeLevels)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(StackDrawType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("StackDrawType", "");
						base.Writer.WriteString(Write163_StackDrawType((StackDrawType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<object>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfAnyType", "");
						List<object> list = (List<object>)o;
						if (list != null)
						{
							for (int j = 0; j < ((ICollection)list).Count; j++)
							{
								Write2_Object("anyType", "", list[j], isNullable: true, needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetDescriptionElementList))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfDescriptionElement", "");
						NetDescriptionElementList netDescriptionElementList = (NetDescriptionElementList)o;
						if (netDescriptionElementList != null)
						{
							IEnumerator enumerator10 = netDescriptionElementList.GetEnumerator();
							if (enumerator10 != null)
							{
								while (enumerator10.MoveNext())
								{
									DescriptionElement o5 = (DescriptionElement)enumerator10.Current;
									Write165_DescriptionElement("DescriptionElement", "", o5, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<KeyValuePair<int, SchedulePathDescription>>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfKeyValuePairOfInt32SchedulePathDescription", "");
						List<KeyValuePair<int, SchedulePathDescription>> list2 = (List<KeyValuePair<int, SchedulePathDescription>>)o;
						if (list2 != null)
						{
							for (int k = 0; k < ((ICollection)list2).Count; k++)
							{
								Write167_Item("KeyValuePairOfInt32SchedulePathDescription", "", list2[k], needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetObjectList<Quest>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfQuest", "");
						NetObjectList<Quest> netObjectList2 = (NetObjectList<Quest>)o;
						if (netObjectList2 != null)
						{
							IEnumerator enumerator11 = netObjectList2.GetEnumerator();
							if (enumerator11 != null)
							{
								while (enumerator11.MoveNext())
								{
									Quest o6 = (Quest)enumerator11.Current;
									Write179_Quest("Quest", "", o6, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetList<Point, NetPoint>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfPoint", "");
						NetList<Point, NetPoint> netList2 = (NetList<Point, NetPoint>)o;
						if (netList2 != null)
						{
							IEnumerator enumerator12 = netList2.GetEnumerator();
							if (enumerator12 != null)
							{
								while (enumerator12.MoveNext())
								{
									Point o7 = (Point)enumerator12.Current;
									Write42_Point("Point", "", o7, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetList<Vector2, NetVector2>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfVector2", "");
						NetList<Vector2, NetVector2> netList3 = (NetList<Vector2, NetVector2>)o;
						if (netList3 != null)
						{
							IEnumerator enumerator13 = netList3.GetEnumerator();
							if (enumerator13 != null)
							{
								while (enumerator13.MoveNext())
								{
									Vector2 o8 = (Vector2)enumerator13.Current;
									Write33_Vector2("Vector2", "", o8, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<Character>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfCharacter", "");
						List<Character> list3 = (List<Character>)o;
						if (list3 != null)
						{
							for (int l = 0; l < ((ICollection)list3).Count; l++)
							{
								Write164_Character("Character", "", list3[l], isNullable: true, needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<List<Character>>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfArrayOfCharacter", "");
						List<Character> list4 = (List<Character>)o;
						if (list4 == null)
						{
							WriteNullTagLiteral("ArrayOfCharacter", "");
						}
						else
						{
							WriteStartElement("ArrayOfCharacter", "", null, writePrefixed: false);
							for (int m = 0; m < ((ICollection)list4).Count; m++)
							{
								Write164_Character("Character", "", list4[m], isNullable: true, needType: false);
							}
							WriteEndElement();
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<long>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfLong", "");
						List<long> list5 = (List<long>)o;
						if (list5 != null)
						{
							for (int num3 = 0; num3 < ((ICollection)list5).Count; num3++)
							{
								WriteElementStringRaw("long", "", XmlConvert.ToString(list5[num3]));
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(FriendshipStatus))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("FriendshipStatus", "");
						base.Writer.WriteString(Write188_FriendshipStatus((FriendshipStatus)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(LocalizedContentManager.LanguageCode))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("LanguageCode", "");
						base.Writer.WriteString(Write190_LanguageCode((LocalizedContentManager.LanguageCode)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetCollection<NPC>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfNPC", "");
						NetCollection<NPC> netCollection = (NetCollection<NPC>)o;
						if (netCollection != null)
						{
							IEnumerator enumerator14 = netCollection.GetEnumerator();
							if (enumerator14 != null)
							{
								while (enumerator14.MoveNext())
								{
									NPC o9 = (NPC)enumerator14.Current;
									Write168_NPC("NPC", "", o9, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetCollection<ResourceClump>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfResourceClump", "");
						NetCollection<ResourceClump> netCollection2 = (NetCollection<ResourceClump>)o;
						if (netCollection2 != null)
						{
							IEnumerator enumerator15 = netCollection2.GetEnumerator();
							if (enumerator15 != null)
							{
								while (enumerator15.MoveNext())
								{
									ResourceClump o10 = (ResourceClump)enumerator15.Current;
									Write132_ResourceClump("ResourceClump", "", o10, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetCollection<LargeTerrainFeature>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfLargeTerrainFeature", "");
						NetCollection<LargeTerrainFeature> netCollection3 = (NetCollection<LargeTerrainFeature>)o;
						if (netCollection3 != null)
						{
							IEnumerator enumerator16 = netCollection3.GetEnumerator();
							if (enumerator16 != null)
							{
								while (enumerator16.MoveNext())
								{
									LargeTerrainFeature o11 = (LargeTerrainFeature)enumerator16.Current;
									Write135_LargeTerrainFeature("LargeTerrainFeature", "", o11, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetCollection<Furniture>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfFurniture", "");
						NetCollection<Furniture> netCollection4 = (NetCollection<Furniture>)o;
						if (netCollection4 != null)
						{
							IEnumerator enumerator17 = netCollection4.GetEnumerator();
							if (enumerator17 != null)
							{
								while (enumerator17.MoveNext())
								{
									Furniture o12 = (Furniture)enumerator17.Current;
									Write62_Furniture("Furniture", "", o12, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetColor))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfColor", "");
						NetColor netColor = (NetColor)o;
						if (netColor != null)
						{
							IEnumerator enumerator18 = netColor.GetEnumerator();
							if (enumerator18 != null)
							{
								while (enumerator18.MoveNext())
								{
									Color o13 = (Color)enumerator18.Current;
									Write34_Color("Color", "", o13, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetCollection<Building>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfBuilding", "");
						NetCollection<Building> netCollection5 = (NetCollection<Building>)o;
						if (netCollection5 != null)
						{
							IEnumerator enumerator19 = netCollection5.GetEnumerator();
							if (enumerator19 != null)
							{
								while (enumerator19.MoveNext())
								{
									Building o14 = (Building)enumerator19.Current;
									Write199_Building("Building", "", o14, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetRef<BuildingPaintColor>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfBuildingPaintColor", "");
						NetRef<BuildingPaintColor> netRef = (NetRef<BuildingPaintColor>)o;
						if (netRef != null)
						{
							IEnumerator enumerator20 = netRef.GetEnumerator();
							if (enumerator20 != null)
							{
								while (enumerator20.MoveNext())
								{
									BuildingPaintColor o15 = (BuildingPaintColor)enumerator20.Current;
									Write30_BuildingPaintColor("BuildingPaintColor", "", o15, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfInt64FarmAnimal", "");
						NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>> netLongDictionary2 = (NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>>)o;
						if (netLongDictionary2 != null)
						{
							IEnumerator enumerator21 = netLongDictionary2.GetEnumerator();
							if (enumerator21 != null)
							{
								while (enumerator21.MoveNext())
								{
									SerializableDictionary<long, FarmAnimal> serializable3 = (SerializableDictionary<long, FarmAnimal>)enumerator21.Current;
									WriteSerializable(serializable3, "SerializableDictionaryOfInt64FarmAnimal", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<Warp>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfWarp", "");
						List<Warp> list6 = (List<Warp>)o;
						if (list6 != null)
						{
							for (int num4 = 0; num4 < ((ICollection)list6).Count; num4++)
							{
								Write216_Warp("Warp", "", list6[num4], isNullable: true, needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(BoatTunnel.TunnelAnimationState))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("TunnelAnimationState", "");
						base.Writer.WriteString(Write238_TunnelAnimationState((BoatTunnel.TunnelAnimationState)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(LightSource.LightContext))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("LightContext", "");
						base.Writer.WriteString(Write273_LightContext((LightSource.LightContext)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetIntIntArrayDictionary))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfInt32ArrayOfInt32", "");
						NetIntIntArrayDictionary netIntIntArrayDictionary = (NetIntIntArrayDictionary)o;
						if (netIntIntArrayDictionary != null)
						{
							IEnumerator enumerator22 = netIntIntArrayDictionary.GetEnumerator();
							if (enumerator22 != null)
							{
								while (enumerator22.MoveNext())
								{
									SerializableDictionary<int, int[]> serializable4 = (SerializableDictionary<int, int[]>)enumerator22.Current;
									WriteSerializable(serializable4, "SerializableDictionaryOfInt32ArrayOfInt32", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(FarmerTeam.RemoteBuildingPermissions))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("RemoteBuildingPermissions", "");
						base.Writer.WriteString(Write279_RemoteBuildingPermissions((FarmerTeam.RemoteBuildingPermissions)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(FarmerTeam.SleepAnnounceModes))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("SleepAnnounceModes", "");
						base.Writer.WriteString(Write280_SleepAnnounceModes((FarmerTeam.SleepAnnounceModes)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(InteriorDoorDictionary))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfPointBoolean", "");
						InteriorDoorDictionary interiorDoorDictionary = (InteriorDoorDictionary)o;
						if (interiorDoorDictionary != null)
						{
							IEnumerator enumerator23 = interiorDoorDictionary.GetEnumerator();
							if (enumerator23 != null)
							{
								while (enumerator23.MoveNext())
								{
									SerializableDictionary<Point, bool> serializable5 = (SerializableDictionary<Point, bool>)enumerator23.Current;
									WriteSerializable(serializable5, "SerializableDictionaryOfPointBoolean", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(GameLocation.LocationContext))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("LocationContext", "");
						base.Writer.WriteString(Write281_LocationContext((GameLocation.LocationContext)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(StardewValley.Object.PreserveType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("PreserveType", "");
						base.Writer.WriteString(Write291_PreserveType((StardewValley.Object.PreserveType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(StardewValley.Object.HoneyType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("HoneyType", "");
						base.Writer.WriteString(Write292_HoneyType((StardewValley.Object.HoneyType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(MineChestType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("MineChestType", "");
						base.Writer.WriteString(Write294_MineChestType((MineChestType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<GameLocation>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfGameLocation", "");
						List<GameLocation> list7 = (List<GameLocation>)o;
						if (list7 != null)
						{
							for (int num5 = 0; num5 < ((ICollection)list7).Count; num5++)
							{
								Write258_GameLocation("GameLocation", "", list7[num5], isNullable: true, needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetObjectList<NetLeaderboardsEntry>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfNetLeaderboardsEntry", "");
						NetObjectList<NetLeaderboardsEntry> netObjectList3 = (NetObjectList<NetLeaderboardsEntry>)o;
						if (netObjectList3 != null)
						{
							IEnumerator enumerator24 = netObjectList3.GetEnumerator();
							if (enumerator24 != null)
							{
								while (enumerator24.MoveNext())
								{
									NetLeaderboardsEntry o16 = (NetLeaderboardsEntry)enumerator24.Current;
									Write302_NetLeaderboardsEntry("NetLeaderboardsEntry", "", o16, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<SpecialOrder>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSpecialOrder", "");
						List<SpecialOrder> list8 = (List<SpecialOrder>)o;
						if (list8 != null)
						{
							for (int num6 = 0; num6 < ((ICollection)list8).Count; num6++)
							{
								Write159_SpecialOrder("SpecialOrder", "", list8[num6], isNullable: true, needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<tutorialType>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfTutorialType", "");
						List<tutorialType> list9 = (List<tutorialType>)o;
						if (list9 != null)
						{
							for (int num7 = 0; num7 < ((ICollection)list9).Count; num7++)
							{
								WriteElementString("tutorialType", "", Write10_tutorialType(list9[num7]));
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<TutorialShopLocation>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfTutorialShopLocation", "");
						List<TutorialShopLocation> list10 = (List<TutorialShopLocation>)o;
						if (list10 != null)
						{
							for (int num8 = 0; num8 < ((ICollection)list10).Count; num8++)
							{
								WriteElementString("TutorialShopLocation", "", Write11_TutorialShopLocation(list10[num8]));
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(SaveGame.SaveFixes))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("SaveFixes", "");
						base.Writer.WriteString(Write305_SaveFixes((SaveGame.SaveFixes)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(ChangeType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ChangeType", "");
						base.Writer.WriteString(Write306_ChangeType((ChangeType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(SynchronizedShopStock.SynchedShop))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("SynchedShop", "");
						base.Writer.WriteString(Write324_SynchedShop((SynchronizedShopStock.SynchedShop)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(FishTankFurniture.FishTankCategories))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("FishTankCategories", "");
						base.Writer.WriteString(Write325_FishTankCategories((FishTankFurniture.FishTankCategories)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(TankFish.FishType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("FishType", "");
						base.Writer.WriteString(Write326_FishType((TankFish.FishType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Phone.PhoneCalls))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("PhoneCalls", "");
						base.Writer.WriteString(Write327_PhoneCalls((Phone.PhoneCalls)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Clothing.ClothesType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ClothesType", "");
						base.Writer.WriteString(Write328_ClothesType((Clothing.ClothesType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Chest.SpecialChestTypes))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("SpecialChestTypes", "");
						base.Writer.WriteString(Write330_SpecialChestTypes((Chest.SpecialChestTypes)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Hat.HairDrawType))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("HairDrawType", "");
						base.Writer.WriteString(Write331_HairDrawType((Hat.HairDrawType)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetAudio.SoundContext))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("SoundContext", "");
						base.Writer.WriteString(Write335_SoundContext((NetAudio.SoundContext)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetBundles))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfInt32ArrayOfBoolean", "");
						NetBundles netBundles = (NetBundles)o;
						if (netBundles != null)
						{
							IEnumerator enumerator25 = netBundles.GetEnumerator();
							if (enumerator25 != null)
							{
								while (enumerator25.MoveNext())
								{
									SerializableDictionary<int, bool[]> serializable6 = (SerializableDictionary<int, bool[]>)enumerator25.Current;
									WriteSerializable(serializable6, "SerializableDictionaryOfInt32ArrayOfBoolean", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(NetFarmerCollection))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfFarmer", "");
						NetFarmerCollection netFarmerCollection = (NetFarmerCollection)o;
						if (netFarmerCollection != null)
						{
							IEnumerator enumerator26 = netFarmerCollection.GetEnumerator();
							if (enumerator26 != null)
							{
								while (enumerator26.MoveNext())
								{
									Farmer o17 = (Farmer)enumerator26.Current;
									Write183_Farmer("Farmer", "", o17, isNullable: true, needType: false);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(OverlaidDictionary))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfSerializableDictionaryOfVector2Object", "");
						OverlaidDictionary overlaidDictionary = (OverlaidDictionary)o;
						if (overlaidDictionary != null)
						{
							IEnumerator enumerator27 = overlaidDictionary.GetEnumerator();
							if (enumerator27 != null)
							{
								while (enumerator27.MoveNext())
								{
									SerializableDictionary<Vector2, StardewValley.Object> serializable7 = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator27.Current;
									WriteSerializable(serializable7, "SerializableDictionaryOfVector2Object", "", isNullable: true, wrapped: true);
								}
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(LavaLurk.State))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("LavaLurk.State", "");
						base.Writer.WriteString(Write346_State((LavaLurk.State)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(DinoMonster.AttackState))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("AttackState", "");
						base.Writer.WriteString(Write353_AttackState((DinoMonster.AttackState)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(List<Vector3>))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("ArrayOfVector3", "");
						List<Vector3> list11 = (List<Vector3>)o;
						if (list11 != null)
						{
							for (int num9 = 0; num9 < ((ICollection)list11).Count; num9++)
							{
								Write357_Vector3("Vector3", "", list11[num9], needType: false);
							}
						}
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(Ghost.GhostVariant))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("GhostVariant", "");
						base.Writer.WriteString(Write373_GhostVariant((Ghost.GhostVariant)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(AbigailGame.GameKeys))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("GameKeys", "");
						base.Writer.WriteString(Write376_GameKeys((AbigailGame.GameKeys)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(VolcanoDungeon.TileNeighbors))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("TileNeighbors", "");
						base.Writer.WriteString(Write380_TileNeighbors((VolcanoDungeon.TileNeighbors)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(MovieTheater.MovieStates))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("MovieStates", "");
						base.Writer.WriteString(Write381_MovieStates((MovieTheater.MovieStates)o));
						base.Writer.WriteEndElement();
					}
					else if (type == typeof(SandDuggy.State))
					{
						base.Writer.WriteStartElement(n, ns);
						WriteXsiType("SandDuggy.State", "");
						base.Writer.WriteString(Write392_State((SandDuggy.State)o));
						base.Writer.WriteEndElement();
					}
					else
					{
						WriteTypedPrimitive(n, ns, o, xsiType: true);
					}
					return;
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			WriteEndElement(o);
		}

		private string Write381_MovieStates(MovieTheater.MovieStates v)
		{
			string text = null;
			return v switch
			{
				MovieTheater.MovieStates.Preshow => "Preshow", 
				MovieTheater.MovieStates.Show => "Show", 
				MovieTheater.MovieStates.PostShow => "PostShow", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Locations.MovieTheater.MovieStates"), 
			};
		}

		private string Write380_TileNeighbors(VolcanoDungeon.TileNeighbors v)
		{
			string text = null;
			return v switch
			{
				VolcanoDungeon.TileNeighbors.N => "N", 
				VolcanoDungeon.TileNeighbors.S => "S", 
				VolcanoDungeon.TileNeighbors.E => "E", 
				VolcanoDungeon.TileNeighbors.W => "W", 
				VolcanoDungeon.TileNeighbors.NW => "NW", 
				VolcanoDungeon.TileNeighbors.NE => "NE", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Locations.VolcanoDungeon.TileNeighbors"), 
			};
		}

		private string Write376_GameKeys(AbigailGame.GameKeys v)
		{
			string text = null;
			return v switch
			{
				AbigailGame.GameKeys.MoveLeft => "MoveLeft", 
				AbigailGame.GameKeys.MoveRight => "MoveRight", 
				AbigailGame.GameKeys.MoveUp => "MoveUp", 
				AbigailGame.GameKeys.MoveDown => "MoveDown", 
				AbigailGame.GameKeys.ShootLeft => "ShootLeft", 
				AbigailGame.GameKeys.ShootRight => "ShootRight", 
				AbigailGame.GameKeys.ShootUp => "ShootUp", 
				AbigailGame.GameKeys.ShootDown => "ShootDown", 
				AbigailGame.GameKeys.UsePowerup => "UsePowerup", 
				AbigailGame.GameKeys.SelectOption => "SelectOption", 
				AbigailGame.GameKeys.Exit => "Exit", 
				AbigailGame.GameKeys.MAX => "MAX", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Minigames.AbigailGame.GameKeys"), 
			};
		}

		private string Write373_GhostVariant(Ghost.GhostVariant v)
		{
			string text = null;
			return v switch
			{
				Ghost.GhostVariant.Normal => "Normal", 
				Ghost.GhostVariant.Putrid => "Putrid", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Monsters.Ghost.GhostVariant"), 
			};
		}

		private string Write353_AttackState(DinoMonster.AttackState v)
		{
			string text = null;
			return v switch
			{
				DinoMonster.AttackState.None => "None", 
				DinoMonster.AttackState.Fireball => "Fireball", 
				DinoMonster.AttackState.Charge => "Charge", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Monsters.DinoMonster.AttackState"), 
			};
		}

		private string Write346_State(LavaLurk.State v)
		{
			string text = null;
			return v switch
			{
				LavaLurk.State.Submerged => "Submerged", 
				LavaLurk.State.Lurking => "Lurking", 
				LavaLurk.State.Emerged => "Emerged", 
				LavaLurk.State.Firing => "Firing", 
				LavaLurk.State.Diving => "Diving", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Monsters.LavaLurk.State"), 
			};
		}

		private string Write335_SoundContext(NetAudio.SoundContext v)
		{
			string text = null;
			return v switch
			{
				NetAudio.SoundContext.Default => "Default", 
				NetAudio.SoundContext.NPC => "NPC", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Network.NetAudio.SoundContext"), 
			};
		}

		private string Write331_HairDrawType(Hat.HairDrawType v)
		{
			string text = null;
			return v switch
			{
				Hat.HairDrawType.DrawFullHair => "DrawFullHair", 
				Hat.HairDrawType.DrawObscuredHair => "DrawObscuredHair", 
				Hat.HairDrawType.HideHair => "HideHair", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.Hat.HairDrawType"), 
			};
		}

		private string Write330_SpecialChestTypes(Chest.SpecialChestTypes v)
		{
			string text = null;
			return v switch
			{
				Chest.SpecialChestTypes.None => "None", 
				Chest.SpecialChestTypes.MiniShippingBin => "MiniShippingBin", 
				Chest.SpecialChestTypes.JunimoChest => "JunimoChest", 
				Chest.SpecialChestTypes.AutoLoader => "AutoLoader", 
				Chest.SpecialChestTypes.Enricher => "Enricher", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.Chest.SpecialChestTypes"), 
			};
		}

		private string Write328_ClothesType(Clothing.ClothesType v)
		{
			string text = null;
			return v switch
			{
				Clothing.ClothesType.SHIRT => "SHIRT", 
				Clothing.ClothesType.PANTS => "PANTS", 
				Clothing.ClothesType.ACCESSORY => "ACCESSORY", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.Clothing.ClothesType"), 
			};
		}

		private string Write327_PhoneCalls(Phone.PhoneCalls v)
		{
			string text = null;
			return v switch
			{
				Phone.PhoneCalls.NONE => "NONE", 
				Phone.PhoneCalls.Vincent => "Vincent", 
				Phone.PhoneCalls.Lewis => "Lewis", 
				Phone.PhoneCalls.Pierre => "Pierre", 
				Phone.PhoneCalls.Foreign => "Foreign", 
				Phone.PhoneCalls.Bear => "Bear", 
				Phone.PhoneCalls.Hat => "Hat", 
				Phone.PhoneCalls.Curse => "Curse", 
				Phone.PhoneCalls.Robo => "Robo", 
				Phone.PhoneCalls.MAX => "MAX", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.Phone.PhoneCalls"), 
			};
		}

		private string Write326_FishType(TankFish.FishType v)
		{
			string text = null;
			return v switch
			{
				TankFish.FishType.Normal => "Normal", 
				TankFish.FishType.Eel => "Eel", 
				TankFish.FishType.Cephalopod => "Cephalopod", 
				TankFish.FishType.Float => "Float", 
				TankFish.FishType.Ground => "Ground", 
				TankFish.FishType.Crawl => "Crawl", 
				TankFish.FishType.Static => "Static", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.TankFish.FishType"), 
			};
		}

		private string Write325_FishTankCategories(FishTankFurniture.FishTankCategories v)
		{
			string text = null;
			return v switch
			{
				FishTankFurniture.FishTankCategories.None => "None", 
				FishTankFurniture.FishTankCategories.Swim => "Swim", 
				FishTankFurniture.FishTankCategories.Ground => "Ground", 
				FishTankFurniture.FishTankCategories.Decoration => "Decoration", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Objects.FishTankFurniture.FishTankCategories"), 
			};
		}

		private string Write324_SynchedShop(SynchronizedShopStock.SynchedShop v)
		{
			string text = null;
			return v switch
			{
				SynchronizedShopStock.SynchedShop.Krobus => "Krobus", 
				SynchronizedShopStock.SynchedShop.TravelingMerchant => "TravelingMerchant", 
				SynchronizedShopStock.SynchedShop.Sandy => "Sandy", 
				SynchronizedShopStock.SynchedShop.Saloon => "Saloon", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Util.SynchronizedShopStock.SynchedShop"), 
			};
		}

		private string Write306_ChangeType(ChangeType v)
		{
			string text = null;
			return v switch
			{
				ChangeType.Add => "Add", 
				ChangeType.Remove => "Remove", 
				ChangeType.Clear => "Clear", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.ChangeType"), 
			};
		}

		private string Write305_SaveFixes(SaveGame.SaveFixes v)
		{
			string text = null;
			return v switch
			{
				SaveGame.SaveFixes.NONE => "NONE", 
				SaveGame.SaveFixes.StoredBigCraftablesStackFix => "StoredBigCraftablesStackFix", 
				SaveGame.SaveFixes.PorchedCabinBushesFix => "PorchedCabinBushesFix", 
				SaveGame.SaveFixes.ChangeObeliskFootprintHeight => "ChangeObeliskFootprintHeight", 
				SaveGame.SaveFixes.CreateStorageDressers => "CreateStorageDressers", 
				SaveGame.SaveFixes.InferPreserves => "InferPreserves", 
				SaveGame.SaveFixes.TransferHatSkipHairFlag => "TransferHatSkipHairFlag", 
				SaveGame.SaveFixes.RevealSecretNoteItemTastes => "RevealSecretNoteItemTastes", 
				SaveGame.SaveFixes.TransferHoneyTypeToPreserves => "TransferHoneyTypeToPreserves", 
				SaveGame.SaveFixes.TransferNoteBlockScale => "TransferNoteBlockScale", 
				SaveGame.SaveFixes.FixCropHarvestAmountsAndInferSeedIndex => "FixCropHarvestAmountsAndInferSeedIndex", 
				SaveGame.SaveFixes.Level9PuddingFishingRecipe => "Level9PuddingFishingRecipe", 
				SaveGame.SaveFixes.Level9PuddingFishingRecipe2 => "Level9PuddingFishingRecipe2", 
				SaveGame.SaveFixes.quarryMineBushes => "quarryMineBushes", 
				SaveGame.SaveFixes.MissingQisChallenge => "MissingQisChallenge", 
				SaveGame.SaveFixes.BedsToFurniture => "BedsToFurniture", 
				SaveGame.SaveFixes.ChildBedsToFurniture => "ChildBedsToFurniture", 
				SaveGame.SaveFixes.ModularizeFarmStructures => "ModularizeFarmStructures", 
				SaveGame.SaveFixes.FixFlooringFlags => "FixFlooringFlags", 
				SaveGame.SaveFixes.AddBugSteakRecipe => "AddBugSteakRecipe", 
				SaveGame.SaveFixes.AddBirdie => "AddBirdie", 
				SaveGame.SaveFixes.AddTownBush => "AddTownBush", 
				SaveGame.SaveFixes.AddNewRingRecipes1_5 => "AddNewRingRecipes1_5", 
				SaveGame.SaveFixes.ResetForges => "ResetForges", 
				SaveGame.SaveFixes.AddSquidInkRavioli => "AddSquidInkRavioli", 
				SaveGame.SaveFixes.MakeDarkSwordVampiric => "MakeDarkSwordVampiric", 
				SaveGame.SaveFixes.FixRingSheetIndex => "FixRingSheetIndex", 
				SaveGame.SaveFixes.FixBeachFarmBushes => "FixBeachFarmBushes", 
				SaveGame.SaveFixes.AddCampfireKit => "AddCampfireKit", 
				SaveGame.SaveFixes.Level9PuddingFishingRecipe3 => "Level9PuddingFishingRecipe3", 
				SaveGame.SaveFixes.OstrichIncubatorFragility => "OstrichIncubatorFragility", 
				SaveGame.SaveFixes.FixBotchedBundleData => "FixBotchedBundleData", 
				SaveGame.SaveFixes.LeoChildrenFix => "LeoChildrenFix", 
				SaveGame.SaveFixes.Leo6HeartGermanFix => "Leo6HeartGermanFix", 
				SaveGame.SaveFixes.BirdieQuestRemovedFix => "BirdieQuestRemovedFix", 
				SaveGame.SaveFixes.SkippedSummit => "SkippedSummit", 
				SaveGame.SaveFixes.MAX => "MAX", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.SaveGame.SaveFixes"), 
			};
		}

		private string Write11_TutorialShopLocation(TutorialShopLocation v)
		{
			string text = null;
			return v switch
			{
				TutorialShopLocation.None => "None", 
				TutorialShopLocation.AdventureGuild => "AdventureGuild", 
				TutorialShopLocation.AnimalShop => "AnimalShop", 
				TutorialShopLocation.ArchaeologyHouse => "ArchaeologyHouse", 
				TutorialShopLocation.Blacksmith => "Blacksmith", 
				TutorialShopLocation.Club => "Club", 
				TutorialShopLocation.SandyHouse => "SandyHouse", 
				TutorialShopLocation.FishShop => "FishShop", 
				TutorialShopLocation.Hospital => "Hospital", 
				TutorialShopLocation.JojaMart => "JojaMart", 
				TutorialShopLocation.Saloon => "Saloon", 
				TutorialShopLocation.ScienceHouse => "ScienceHouse", 
				TutorialShopLocation.SeedShop => "SeedShop", 
				TutorialShopLocation.IceCreamStand => "IceCreamStand", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "TutorialShopLocation"), 
			};
		}

		private string Write10_tutorialType(tutorialType v)
		{
			string text = null;
			return v switch
			{
				tutorialType.TUTORIAL_NONE => "TUTORIAL_NONE", 
				tutorialType.CUSTOMIZE => "CUSTOMIZE", 
				tutorialType.GOOD_MORNING => "GOOD_MORNING", 
				tutorialType.DUMMY_PICKUP_HOUSE_ITEM => "DUMMY_PICKUP_HOUSE_ITEM", 
				tutorialType.PLACE_HOUSE_ITEM => "PLACE_HOUSE_ITEM", 
				tutorialType.TAP_MOVE => "TAP_MOVE", 
				tutorialType.TAP_LEAVE_HOUSE => "TAP_LEAVE_HOUSE", 
				tutorialType.TAP_JOURNAL => "TAP_JOURNAL", 
				tutorialType.JOURNAL_INFO => "JOURNAL_INFO", 
				tutorialType.CLOSE_JOURNAL => "CLOSE_JOURNAL", 
				tutorialType.TAP_HOLD_MOVE => "TAP_HOLD_MOVE", 
				tutorialType.TAP_HOLD2 => "TAP_HOLD2", 
				tutorialType.GET_PARSNIPS => "GET_PARSNIPS", 
				tutorialType.SEE_FARM => "SEE_FARM", 
				tutorialType.TAP_FARM => "TAP_FARM", 
				tutorialType.TAP_FARM2 => "TAP_FARM2", 
				tutorialType.SELECT_TOOL => "SELECT_TOOL", 
				tutorialType.USE_HOE => "USE_HOE", 
				tutorialType.PLANT_SEEDS => "PLANT_SEEDS", 
				tutorialType.WATER_GROUND => "WATER_GROUND", 
				tutorialType.INTERACT_SHOP => "INTERACT_SHOP", 
				tutorialType.SELL_SHOP => "SELL_SHOP", 
				tutorialType.DUMMY_REFILL_WATER => "DUMMY_REFILL_WATER", 
				tutorialType.REFILL_WATER => "REFILL_WATER", 
				tutorialType.INVENTORY_DRAG => "INVENTORY_DRAG", 
				tutorialType.SKILLS => "SKILLS", 
				tutorialType.SOCIAL => "SOCIAL", 
				tutorialType.CRAFTING => "CRAFTING", 
				tutorialType.TAP_GAME_MENU => "TAP_GAME_MENU", 
				tutorialType.GO_EXPLORE => "GO_EXPLORE", 
				tutorialType.WATER_REMINDER => "WATER_REMINDER", 
				tutorialType.DUMMY_INVENTORY => "DUMMY_INVENTORY", 
				tutorialType.INVENTORY => "INVENTORY", 
				tutorialType.DUMMY_SKILLS => "DUMMY_SKILLS", 
				tutorialType.DUMMY_SOCIAL => "DUMMY_SOCIAL", 
				tutorialType.DUMMY_MAP => "DUMMY_MAP", 
				tutorialType.MAP => "MAP", 
				tutorialType.DUMMY_CRAFTING => "DUMMY_CRAFTING", 
				tutorialType.DUMMY_COLLECTIONS => "DUMMY_COLLECTIONS", 
				tutorialType.COLLECTIONS => "COLLECTIONS", 
				tutorialType.DUMMY_INTERACT_SHOP => "DUMMY_INTERACT_SHOP", 
				tutorialType.DUMMY_SELL_SHOP => "DUMMY_SELL_SHOP", 
				tutorialType.SELL_SHOP2 => "SELL_SHOP2", 
				tutorialType.DUMMY_PAST_INTRO => "DUMMY_PAST_INTRO", 
				tutorialType.DUMMY_FINISH_CUSTOMIZE => "DUMMY_FINISH_CUSTOMIZE", 
				tutorialType.DUMMY_START_ATTACK => "DUMMY_START_ATTACK", 
				tutorialType.START_ATTACK => "START_ATTACK", 
				tutorialType.GO_BACK_FARMHOUSE => "GO_BACK_FARMHOUSE", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "tutorialType"), 
			};
		}

		private void Write159_SpecialOrder(string n, string ns, SpecialOrder o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SpecialOrder)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SpecialOrder", "");
			}
			NetStringDictionary<int, NetInt> preSelectedItems = o.preSelectedItems;
			if (preSelectedItems != null)
			{
				IEnumerator enumerator = preSelectedItems.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, int> serializable = (SerializableDictionary<string, int>)enumerator.Current;
						WriteSerializable(serializable, "preSelectedItems", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetStringDictionary<int, NetInt> selectedRandomElements = o.selectedRandomElements;
			if (selectedRandomElements != null)
			{
				IEnumerator enumerator2 = selectedRandomElements.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<string, int> serializable2 = (SerializableDictionary<string, int>)enumerator2.Current;
						WriteSerializable(serializable2, "selectedRandomElements", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetList<OrderObjective, NetRef<OrderObjective>> objectives = o.objectives;
			if (objectives != null)
			{
				IEnumerator enumerator3 = objectives.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						OrderObjective o2 = (OrderObjective)enumerator3.Current;
						Write50_OrderObjective("objectives", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt generationSeed = o.generationSeed;
			if (generationSeed != null)
			{
				IEnumerator enumerator4 = generationSeed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num = (int)enumerator4.Current;
						WriteElementStringRaw("generationSeed", "", XmlConvert.ToString(num));
					}
				}
			}
			NetLongDictionary<bool, NetBool> seenParticipants = o.seenParticipants;
			if (seenParticipants != null)
			{
				IEnumerator enumerator5 = seenParticipants.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<long, bool> serializable3 = (SerializableDictionary<long, bool>)enumerator5.Current;
						WriteSerializable(serializable3, "seenParticipantsIDs", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetLongDictionary<bool, NetBool> participants = o.participants;
			if (participants != null)
			{
				IEnumerator enumerator6 = participants.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						SerializableDictionary<long, bool> serializable4 = (SerializableDictionary<long, bool>)enumerator6.Current;
						WriteSerializable(serializable4, "participantsIDs", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetLongDictionary<bool, NetBool> unclaimedRewards = o.unclaimedRewards;
			if (unclaimedRewards != null)
			{
				IEnumerator enumerator7 = unclaimedRewards.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						SerializableDictionary<long, bool> serializable5 = (SerializableDictionary<long, bool>)enumerator7.Current;
						WriteSerializable(serializable5, "unclaimedRewardsIDs", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<Item> donatedItems = o.donatedItems;
			if (donatedItems != null)
			{
				IEnumerator enumerator8 = donatedItems.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Item o3 = (Item)enumerator8.Current;
						Write143_Item("donatedItems", "", o3, isNullable: false, needType: false);
					}
				}
			}
			WriteElementStringRaw("appliedSpecialRules", "", XmlConvert.ToString(o.appliedSpecialRules));
			NetList<OrderReward, NetRef<OrderReward>> rewards = o.rewards;
			if (rewards != null)
			{
				IEnumerator enumerator9 = rewards.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						OrderReward o4 = (OrderReward)enumerator9.Current;
						Write144_OrderReward("rewards", "", o4, isNullable: false, needType: false);
					}
				}
			}
			NetString questKey = o.questKey;
			if (questKey != null)
			{
				IEnumerator enumerator10 = questKey.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						string value = (string)enumerator10.Current;
						WriteElementString("questKey", "", value);
					}
				}
			}
			NetString questName = o.questName;
			if (questName != null)
			{
				IEnumerator enumerator11 = questName.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						string value2 = (string)enumerator11.Current;
						WriteElementString("questName", "", value2);
					}
				}
			}
			NetString questDescription = o.questDescription;
			if (questDescription != null)
			{
				IEnumerator enumerator12 = questDescription.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						string value3 = (string)enumerator12.Current;
						WriteElementString("questDescription", "", value3);
					}
				}
			}
			NetString requester = o.requester;
			if (requester != null)
			{
				IEnumerator enumerator13 = requester.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						string value4 = (string)enumerator13.Current;
						WriteElementString("requester", "", value4);
					}
				}
			}
			NetString orderType = o.orderType;
			if (orderType != null)
			{
				IEnumerator enumerator14 = orderType.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						string value5 = (string)enumerator14.Current;
						WriteElementString("orderType", "", value5);
					}
				}
			}
			NetString specialRule = o.specialRule;
			if (specialRule != null)
			{
				IEnumerator enumerator15 = specialRule.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value6 = (string)enumerator15.Current;
						WriteElementString("specialRule", "", value6);
					}
				}
			}
			NetBool readyForRemoval = o.readyForRemoval;
			if (readyForRemoval != null)
			{
				IEnumerator enumerator16 = readyForRemoval.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						bool flag = (bool)enumerator16.Current;
						WriteElementStringRaw("readyForRemoval", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetInt itemToRemoveOnEnd = o.itemToRemoveOnEnd;
			if (itemToRemoveOnEnd != null)
			{
				IEnumerator enumerator17 = itemToRemoveOnEnd.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num2 = (int)enumerator17.Current;
						WriteElementStringRaw("itemToRemoveOnEnd", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString mailToRemoveOnEnd = o.mailToRemoveOnEnd;
			if (mailToRemoveOnEnd != null)
			{
				IEnumerator enumerator18 = mailToRemoveOnEnd.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						string value7 = (string)enumerator18.Current;
						WriteElementString("mailToRemoveOnEnd", "", value7);
					}
				}
			}
			NetInt dueDate = o.dueDate;
			if (dueDate != null)
			{
				IEnumerator enumerator19 = dueDate.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num3 = (int)enumerator19.Current;
						WriteElementStringRaw("dueDate", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetEnum<SpecialOrder.QuestDuration> questDuration = o.questDuration;
			if (questDuration != null)
			{
				IEnumerator enumerator20 = questDuration.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						string value8 = (string)enumerator20.Current;
						WriteElementString("duration", "", value8);
					}
				}
			}
			NetEnum<SpecialOrder.QuestState> questState = o.questState;
			if (questState != null)
			{
				IEnumerator enumerator21 = questState.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						string value9 = (string)enumerator21.Current;
						WriteElementString("questState", "", value9);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write144_OrderReward(string n, string ns, OrderReward o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(OrderReward)))
				{
					if (type == typeof(FriendshipReward))
					{
						Write158_FriendshipReward(n, ns, (FriendshipReward)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ResetEventReward))
					{
						Write157_ResetEventReward(n, ns, (ResetEventReward)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GemsReward))
					{
						Write156_GemsReward(n, ns, (GemsReward)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MoneyReward))
					{
						Write155_MoneyReward(n, ns, (MoneyReward)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MailReward))
					{
						Write154_MailReward(n, ns, (MailReward)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("OrderReward", "");
			}
			WriteEndElement(o);
		}

		private void Write154_MailReward(string n, string ns, MailReward o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MailReward)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MailReward", "");
			}
			NetBool noLetter = o.noLetter;
			if (noLetter != null)
			{
				WriteStartElement("noLetter", "", null, writePrefixed: false);
				IEnumerator enumerator = noLetter.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						bool flag = (bool)enumerator.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			NetStringList grantedMails = o.grantedMails;
			if (grantedMails != null)
			{
				WriteStartElement("grantedMails", "", null, writePrefixed: false);
				IEnumerator enumerator2 = grantedMails.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value = (string)enumerator2.Current;
						WriteNullableStringLiteral("string", "", value);
					}
				}
				WriteEndElement();
			}
			NetBool host = o.host;
			if (host != null)
			{
				WriteStartElement("host", "", null, writePrefixed: false);
				IEnumerator enumerator3 = host.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write155_MoneyReward(string n, string ns, MoneyReward o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MoneyReward)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MoneyReward", "");
			}
			NetInt amount = o.amount;
			if (amount != null)
			{
				WriteStartElement("amount", "", null, writePrefixed: false);
				IEnumerator enumerator = amount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetFloat multiplier = o.multiplier;
			if (multiplier != null)
			{
				WriteStartElement("multiplier", "", null, writePrefixed: false);
				IEnumerator enumerator2 = multiplier.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						float num2 = (float)enumerator2.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write156_GemsReward(string n, string ns, GemsReward o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GemsReward)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GemsReward", "");
			}
			NetInt amount = o.amount;
			if (amount != null)
			{
				WriteStartElement("amount", "", null, writePrefixed: false);
				IEnumerator enumerator = amount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write157_ResetEventReward(string n, string ns, ResetEventReward o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ResetEventReward)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ResetEventReward", "");
			}
			NetIntList resetEvents = o.resetEvents;
			if (resetEvents != null)
			{
				WriteStartElement("resetEvents", "", null, writePrefixed: false);
				IEnumerator enumerator = resetEvents.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write158_FriendshipReward(string n, string ns, FriendshipReward o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FriendshipReward)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FriendshipReward", "");
			}
			NetString targetName = o.targetName;
			if (targetName != null)
			{
				IEnumerator enumerator = targetName.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("targetName", "", value);
					}
				}
			}
			NetInt amount = o.amount;
			if (amount != null)
			{
				IEnumerator enumerator2 = amount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("amount", "", XmlConvert.ToString(num));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write50_OrderObjective(string n, string ns, OrderObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(OrderObjective)))
				{
					if (type == typeof(DonateObjective))
					{
						Write153_DonateObjective(n, ns, (DonateObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CollectObjective))
					{
						Write152_CollectObjective(n, ns, (CollectObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ReachMineFloorObjective))
					{
						Write151_ReachMineFloorObjective(n, ns, (ReachMineFloorObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(JKScoreObjective))
					{
						Write150_JKScoreObjective(n, ns, (JKScoreObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GiftObjective))
					{
						Write149_GiftObjective(n, ns, (GiftObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FishObjective))
					{
						Write148_FishObjective(n, ns, (FishObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DeliverObjective))
					{
						Write147_DeliverObjective(n, ns, (DeliverObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SlayObjective))
					{
						Write146_SlayObjective(n, ns, (SlayObjective)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShipObjective))
					{
						Write145_ShipObjective(n, ns, (ShipObjective)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("OrderObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write145_ShipObjective(string n, string ns, ShipObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShipObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShipObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetStringList acceptableContextTagSets = o.acceptableContextTagSets;
			if (acceptableContextTagSets != null)
			{
				IEnumerator enumerator5 = acceptableContextTagSets.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("acceptableContextTagSets", "", value2);
					}
				}
			}
			NetBool useShipmentValue = o.useShipmentValue;
			if (useShipmentValue != null)
			{
				IEnumerator enumerator6 = useShipmentValue.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag2 = (bool)enumerator6.Current;
						WriteElementStringRaw("useShipmentValue", "", XmlConvert.ToString(flag2));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write146_SlayObjective(string n, string ns, SlayObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SlayObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SlayObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetStringList targetNames = o.targetNames;
			if (targetNames != null)
			{
				IEnumerator enumerator5 = targetNames.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("targetNames", "", value2);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write147_DeliverObjective(string n, string ns, DeliverObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DeliverObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DeliverObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetStringList acceptableContextTagSets = o.acceptableContextTagSets;
			if (acceptableContextTagSets != null)
			{
				IEnumerator enumerator5 = acceptableContextTagSets.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("acceptableContextTagSets", "", value2);
					}
				}
			}
			NetString targetName = o.targetName;
			if (targetName != null)
			{
				IEnumerator enumerator6 = targetName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value3 = (string)enumerator6.Current;
						WriteElementString("targetName", "", value3);
					}
				}
			}
			NetString message = o.message;
			if (message != null)
			{
				IEnumerator enumerator7 = message.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value4 = (string)enumerator7.Current;
						WriteElementString("message", "", value4);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write148_FishObjective(string n, string ns, FishObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetStringList acceptableContextTagSets = o.acceptableContextTagSets;
			if (acceptableContextTagSets != null)
			{
				IEnumerator enumerator5 = acceptableContextTagSets.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("acceptableContextTagSets", "", value2);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write149_GiftObjective(string n, string ns, GiftObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GiftObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GiftObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetStringList acceptableContextTagSets = o.acceptableContextTagSets;
			if (acceptableContextTagSets != null)
			{
				IEnumerator enumerator5 = acceptableContextTagSets.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("acceptableContextTagSets", "", value2);
					}
				}
			}
			NetEnum<GiftObjective.LikeLevels> minimumLikeLevel = o.minimumLikeLevel;
			if (minimumLikeLevel != null)
			{
				IEnumerator enumerator6 = minimumLikeLevel.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value3 = (string)enumerator6.Current;
						WriteElementString("minimumLikeLevel", "", value3);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write150_JKScoreObjective(string n, string ns, JKScoreObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(JKScoreObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("JKScoreObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write151_ReachMineFloorObjective(string n, string ns, ReachMineFloorObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ReachMineFloorObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ReachMineFloorObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool skullCave = o.skullCave;
			if (skullCave != null)
			{
				WriteStartElement("skullCave", "", null, writePrefixed: false);
				IEnumerator enumerator5 = skullCave.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag2 = (bool)enumerator5.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write152_CollectObjective(string n, string ns, CollectObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CollectObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CollectObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetStringList acceptableContextTagSets = o.acceptableContextTagSets;
			if (acceptableContextTagSets != null)
			{
				IEnumerator enumerator5 = acceptableContextTagSets.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("acceptableContextTagSets", "", value2);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write153_DonateObjective(string n, string ns, DonateObjective o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DonateObjective)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DonateObjective", "");
			}
			NetIntDelta currentCount = o.currentCount;
			if (currentCount != null)
			{
				IEnumerator enumerator = currentCount.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("currentCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt maxCount = o.maxCount;
			if (maxCount != null)
			{
				IEnumerator enumerator2 = maxCount.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("maxCount", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetString description = o.description;
			if (description != null)
			{
				IEnumerator enumerator3 = description.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						string value = (string)enumerator3.Current;
						WriteElementString("description", "", value);
					}
				}
			}
			NetBool failOnCompletion = o.failOnCompletion;
			if (failOnCompletion != null)
			{
				IEnumerator enumerator4 = failOnCompletion.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("failOnCompletion", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetString dropBox = o.dropBox;
			if (dropBox != null)
			{
				IEnumerator enumerator5 = dropBox.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						string value2 = (string)enumerator5.Current;
						WriteElementString("dropBox", "", value2);
					}
				}
			}
			NetString dropBoxGameLocation = o.dropBoxGameLocation;
			if (dropBoxGameLocation != null)
			{
				IEnumerator enumerator6 = dropBoxGameLocation.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value3 = (string)enumerator6.Current;
						WriteElementString("dropBoxGameLocation", "", value3);
					}
				}
			}
			NetVector2 dropBoxTileLocation = o.dropBoxTileLocation;
			if (dropBoxTileLocation != null)
			{
				IEnumerator enumerator7 = dropBoxTileLocation.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator7.Current;
						Write33_Vector2("dropBoxTileLocation", "", o2, needType: false);
					}
				}
			}
			NetStringList acceptableContextTagSets = o.acceptableContextTagSets;
			if (acceptableContextTagSets != null)
			{
				IEnumerator enumerator8 = acceptableContextTagSets.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						string value4 = (string)enumerator8.Current;
						WriteElementString("acceptableContextTagSets", "", value4);
					}
				}
			}
			NetInt minimumCapacity = o.minimumCapacity;
			if (minimumCapacity != null)
			{
				IEnumerator enumerator9 = minimumCapacity.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num3 = (int)enumerator9.Current;
						WriteElementStringRaw("minimumCapacity", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetBool confirmed = o.confirmed;
			if (confirmed != null)
			{
				IEnumerator enumerator10 = confirmed.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("confirmed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write302_NetLeaderboardsEntry(string n, string ns, NetLeaderboardsEntry o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetLeaderboardsEntry)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetLeaderboardsEntry", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				WriteStartElement("name", "", null, writePrefixed: false);
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteNullableStringLiteral("string", "", value);
					}
				}
				WriteEndElement();
			}
			NetInt score = o.score;
			if (score != null)
			{
				WriteStartElement("score", "", null, writePrefixed: false);
				IEnumerator enumerator2 = score.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private string Write294_MineChestType(MineChestType v)
		{
			string text = null;
			return v switch
			{
				MineChestType.Default => "Default", 
				MineChestType.Remixed => "Remixed", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.MineChestType"), 
			};
		}

		private string Write292_HoneyType(StardewValley.Object.HoneyType v)
		{
			string text = null;
			return v switch
			{
				StardewValley.Object.HoneyType.Wild => "Wild", 
				StardewValley.Object.HoneyType.Poppy => "Poppy", 
				StardewValley.Object.HoneyType.Tulip => "Tulip", 
				StardewValley.Object.HoneyType.SummerSpangle => "SummerSpangle", 
				StardewValley.Object.HoneyType.FairyRose => "FairyRose", 
				StardewValley.Object.HoneyType.BlueJazz => "BlueJazz", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Object.HoneyType"), 
			};
		}

		private string Write291_PreserveType(StardewValley.Object.PreserveType v)
		{
			string text = null;
			return v switch
			{
				StardewValley.Object.PreserveType.Wine => "Wine", 
				StardewValley.Object.PreserveType.Jelly => "Jelly", 
				StardewValley.Object.PreserveType.Pickle => "Pickle", 
				StardewValley.Object.PreserveType.Juice => "Juice", 
				StardewValley.Object.PreserveType.Roe => "Roe", 
				StardewValley.Object.PreserveType.AgedRoe => "AgedRoe", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Object.PreserveType"), 
			};
		}

		private string Write281_LocationContext(GameLocation.LocationContext v)
		{
			string text = null;
			return v switch
			{
				GameLocation.LocationContext.Default => "Default", 
				GameLocation.LocationContext.Island => "Island", 
				GameLocation.LocationContext.MAX => "MAX", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.GameLocation.LocationContext"), 
			};
		}

		private string Write280_SleepAnnounceModes(FarmerTeam.SleepAnnounceModes v)
		{
			string text = null;
			return v switch
			{
				FarmerTeam.SleepAnnounceModes.All => "All", 
				FarmerTeam.SleepAnnounceModes.First => "First", 
				FarmerTeam.SleepAnnounceModes.Off => "Off", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.FarmerTeam.SleepAnnounceModes"), 
			};
		}

		private string Write279_RemoteBuildingPermissions(FarmerTeam.RemoteBuildingPermissions v)
		{
			string text = null;
			return v switch
			{
				FarmerTeam.RemoteBuildingPermissions.Off => "Off", 
				FarmerTeam.RemoteBuildingPermissions.OwnedBuildings => "OwnedBuildings", 
				FarmerTeam.RemoteBuildingPermissions.On => "On", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.FarmerTeam.RemoteBuildingPermissions"), 
			};
		}

		private string Write273_LightContext(LightSource.LightContext v)
		{
			string text = null;
			return v switch
			{
				LightSource.LightContext.None => "None", 
				LightSource.LightContext.MapLight => "MapLight", 
				LightSource.LightContext.WindowLight => "WindowLight", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.LightSource.LightContext"), 
			};
		}

		private string Write238_TunnelAnimationState(BoatTunnel.TunnelAnimationState v)
		{
			string text = null;
			return v switch
			{
				BoatTunnel.TunnelAnimationState.Idle => "Idle", 
				BoatTunnel.TunnelAnimationState.MoveWillyToGate => "MoveWillyToGate", 
				BoatTunnel.TunnelAnimationState.OpenGate => "OpenGate", 
				BoatTunnel.TunnelAnimationState.MoveWillyToCockpit => "MoveWillyToCockpit", 
				BoatTunnel.TunnelAnimationState.MoveFarmer => "MoveFarmer", 
				BoatTunnel.TunnelAnimationState.MovePlank => "MovePlank", 
				BoatTunnel.TunnelAnimationState.CloseGate => "CloseGate", 
				BoatTunnel.TunnelAnimationState.MoveBoat => "MoveBoat", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Locations.BoatTunnel.TunnelAnimationState"), 
			};
		}

		private void Write216_Warp(string n, string ns, Warp o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Warp)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Warp", "");
			}
			NetBool flipFarmer = o.flipFarmer;
			if (flipFarmer != null)
			{
				IEnumerator enumerator = flipFarmer.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						bool flag = (bool)enumerator.Current;
						WriteElementStringRaw("flipFarmer", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool npcOnly = o.npcOnly;
			if (npcOnly != null)
			{
				IEnumerator enumerator2 = npcOnly.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag2 = (bool)enumerator2.Current;
						WriteElementStringRaw("npcOnly", "", XmlConvert.ToString(flag2));
					}
				}
			}
			WriteElementStringRaw("TargetX", "", XmlConvert.ToString(o.TargetX));
			WriteElementStringRaw("TargetY", "", XmlConvert.ToString(o.TargetY));
			WriteElementString("TargetName", "", o.TargetName);
			WriteEndElement(o);
		}

		private string Write190_LanguageCode(LocalizedContentManager.LanguageCode v)
		{
			string text = null;
			return v switch
			{
				LocalizedContentManager.LanguageCode.en => "en", 
				LocalizedContentManager.LanguageCode.ja => "ja", 
				LocalizedContentManager.LanguageCode.ru => "ru", 
				LocalizedContentManager.LanguageCode.zh => "zh", 
				LocalizedContentManager.LanguageCode.pt => "pt", 
				LocalizedContentManager.LanguageCode.es => "es", 
				LocalizedContentManager.LanguageCode.de => "de", 
				LocalizedContentManager.LanguageCode.th => "th", 
				LocalizedContentManager.LanguageCode.fr => "fr", 
				LocalizedContentManager.LanguageCode.ko => "ko", 
				LocalizedContentManager.LanguageCode.it => "it", 
				LocalizedContentManager.LanguageCode.tr => "tr", 
				LocalizedContentManager.LanguageCode.hu => "hu", 
				LocalizedContentManager.LanguageCode.mod => "mod", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.LocalizedContentManager.LanguageCode"), 
			};
		}

		private string Write188_FriendshipStatus(FriendshipStatus v)
		{
			string text = null;
			return v switch
			{
				FriendshipStatus.Friendly => "Friendly", 
				FriendshipStatus.Dating => "Dating", 
				FriendshipStatus.Engaged => "Engaged", 
				FriendshipStatus.Married => "Married", 
				FriendshipStatus.Divorced => "Divorced", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.FriendshipStatus"), 
			};
		}

		private void Write164_Character(string n, string ns, Character o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Character)))
				{
					if (type == typeof(FarmAnimal))
					{
						Write265_FarmAnimal(n, ns, (FarmAnimal)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(NPC))
					{
						Write168_NPC(n, ns, (NPC)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(JunimoHarvester))
					{
						Write391_JunimoHarvester(n, ns, (JunimoHarvester)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Junimo))
					{
						Write390_Junimo(n, ns, (Junimo)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Horse))
					{
						Write389_Horse(n, ns, (Horse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Child))
					{
						Write387_Child(n, ns, (Child)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Pet))
					{
						Write385_Pet(n, ns, (Pet)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Dog))
					{
						Write388_Dog(n, ns, (Dog)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cat))
					{
						Write386_Cat(n, ns, (Cat)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TrashBear))
					{
						Write384_TrashBear(n, ns, (TrashBear)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Monster))
					{
						Write169_Monster(n, ns, (Monster)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(GreenSlime))
					{
						Write375_GreenSlime(n, ns, (GreenSlime)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowGuy))
					{
						Write374_ShadowGuy(n, ns, (ShadowGuy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Ghost))
					{
						Write372_Ghost(n, ns, (Ghost)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Duggy))
					{
						Write371_Duggy(n, ns, (Duggy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RockCrab))
					{
						Write370_RockCrab(n, ns, (RockCrab)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LavaCrab))
					{
						Write369_LavaCrab(n, ns, (LavaCrab)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SquidKid))
					{
						Write368_SquidKid(n, ns, (SquidKid)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowGirl))
					{
						Write367_ShadowGirl(n, ns, (ShadowGirl)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(RockGolem))
					{
						Write366_RockGolem(n, ns, (RockGolem)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Grub))
					{
						Write365_Grub(n, ns, (Grub)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Fly))
					{
						Write364_Fly(n, ns, (Fly)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Bat))
					{
						Write363_Bat(n, ns, (Bat)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DustSpirit))
					{
						Write362_DustSpirit(n, ns, (DustSpirit)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Skeleton))
					{
						Write361_Skeleton(n, ns, (Skeleton)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowShaman))
					{
						Write360_ShadowShaman(n, ns, (ShadowShaman)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShadowBrute))
					{
						Write359_ShadowBrute(n, ns, (ShadowBrute)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Serpent))
					{
						Write358_Serpent(n, ns, (Serpent)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Mummy))
					{
						Write356_Mummy(n, ns, (Mummy)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BigSlime))
					{
						Write355_BigSlime(n, ns, (BigSlime)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Bug))
					{
						Write354_Bug(n, ns, (Bug)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DinoMonster))
					{
						Write352_DinoMonster(n, ns, (DinoMonster)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(BlueSquid))
					{
						Write351_BlueSquid(n, ns, (BlueSquid)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(DwarvishSentry))
					{
						Write350_DwarvishSentry(n, ns, (DwarvishSentry)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Spiker))
					{
						Write349_Spiker(n, ns, (Spiker)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Shooter))
					{
						Write348_Shooter(n, ns, (Shooter)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Leaper))
					{
						Write347_Leaper(n, ns, (Leaper)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(LavaLurk))
					{
						Write345_LavaLurk(n, ns, (LavaLurk)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MetalHead))
					{
						Write343_MetalHead(n, ns, (MetalHead)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(HotHead))
					{
						Write344_HotHead(n, ns, (HotHead)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(AngryRoger))
					{
						Write342_AngryRoger(n, ns, (AngryRoger)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Farmer))
					{
						Write183_Farmer(n, ns, (Farmer)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Character", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write265_FarmAnimal(string n, string ns, FarmAnimal o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FarmAnimal)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FarmAnimal", "");
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator = name.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("name", "", value);
					}
				}
			}
			NetBool forceOneTileWide = o.forceOneTileWide;
			if (forceOneTileWide != null)
			{
				IEnumerator enumerator2 = forceOneTileWide.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("forceOneTileWide", "", XmlConvert.ToString(flag));
					}
				}
			}
			WriteElementStringRaw("isEmoting", "", XmlConvert.ToString(o.isEmoting));
			WriteElementStringRaw("isCharging", "", XmlConvert.ToString(o.isCharging));
			WriteElementStringRaw("isGlowing", "", XmlConvert.ToString(o.isGlowing));
			WriteElementStringRaw("coloredBorder", "", XmlConvert.ToString(o.coloredBorder));
			WriteElementStringRaw("flip", "", XmlConvert.ToString(o.flip));
			WriteElementStringRaw("drawOnTop", "", XmlConvert.ToString(o.drawOnTop));
			WriteElementStringRaw("faceTowardFarmer", "", XmlConvert.ToString(o.faceTowardFarmer));
			WriteElementStringRaw("ignoreMovementAnimation", "", XmlConvert.ToString(o.ignoreMovementAnimation));
			NetBool faceAwayFromFarmer = o.faceAwayFromFarmer;
			if (faceAwayFromFarmer != null)
			{
				IEnumerator enumerator3 = faceAwayFromFarmer.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("faceAwayFromFarmer", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				WriteStartElement("scale", "", null, writePrefixed: false);
				IEnumerator enumerator4 = scale.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("timeBeforeAIMovementAgain", "", XmlConvert.ToString(o.timeBeforeAIMovementAgain));
			WriteElementStringRaw("glowingTransparency", "", XmlConvert.ToString(o.glowingTransparency));
			WriteElementStringRaw("glowRate", "", XmlConvert.ToString(o.glowRate));
			WriteElementStringRaw("willDestroyObjectsUnderfoot", "", XmlConvert.ToString(o.willDestroyObjectsUnderfoot));
			Write33_Vector2("Position", "", o.Position, needType: false);
			WriteElementStringRaw("Speed", "", XmlConvert.ToString(o.Speed));
			WriteElementStringRaw("FacingDirection", "", XmlConvert.ToString(o.FacingDirection));
			WriteElementStringRaw("IsEmoting", "", XmlConvert.ToString(o.IsEmoting));
			WriteElementStringRaw("CurrentEmote", "", XmlConvert.ToString(o.CurrentEmote));
			WriteElementStringRaw("Scale", "", XmlConvert.ToString(o.Scale));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator5 = modDataForSerialization.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator5.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetBool isSwimming = o.isSwimming;
			if (isSwimming != null)
			{
				WriteStartElement("isSwimming", "", null, writePrefixed: false);
				IEnumerator enumerator6 = isSwimming.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag3 = (bool)enumerator6.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag3));
					}
				}
				WriteEndElement();
			}
			NetInt defaultProduceIndex = o.defaultProduceIndex;
			if (defaultProduceIndex != null)
			{
				IEnumerator enumerator7 = defaultProduceIndex.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num2 = (int)enumerator7.Current;
						WriteElementStringRaw("defaultProduceIndex", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt deluxeProduceIndex = o.deluxeProduceIndex;
			if (deluxeProduceIndex != null)
			{
				IEnumerator enumerator8 = deluxeProduceIndex.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						int num3 = (int)enumerator8.Current;
						WriteElementStringRaw("deluxeProduceIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt currentProduce = o.currentProduce;
			if (currentProduce != null)
			{
				IEnumerator enumerator9 = currentProduce.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num4 = (int)enumerator9.Current;
						WriteElementStringRaw("currentProduce", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt friendshipTowardFarmer = o.friendshipTowardFarmer;
			if (friendshipTowardFarmer != null)
			{
				IEnumerator enumerator10 = friendshipTowardFarmer.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num5 = (int)enumerator10.Current;
						WriteElementStringRaw("friendshipTowardFarmer", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt daysSinceLastFed = o.daysSinceLastFed;
			if (daysSinceLastFed != null)
			{
				IEnumerator enumerator11 = daysSinceLastFed.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("daysSinceLastFed", "", XmlConvert.ToString(num6));
					}
				}
			}
			WriteElementStringRaw("pushAccumulator", "", XmlConvert.ToString(o.pushAccumulator));
			WriteElementStringRaw("uniqueFrameAccumulator", "", XmlConvert.ToString(o.uniqueFrameAccumulator));
			NetInt age = o.age;
			if (age != null)
			{
				IEnumerator enumerator12 = age.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("age", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt daysOwned = o.daysOwned;
			if (daysOwned != null)
			{
				IEnumerator enumerator13 = daysOwned.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num8 = (int)enumerator13.Current;
						WriteElementStringRaw("daysOwned", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt meatIndex = o.meatIndex;
			if (meatIndex != null)
			{
				IEnumerator enumerator14 = meatIndex.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num9 = (int)enumerator14.Current;
						WriteElementStringRaw("meatIndex", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetInt health = o.health;
			if (health != null)
			{
				IEnumerator enumerator15 = health.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num10 = (int)enumerator15.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetInt price = o.price;
			if (price != null)
			{
				IEnumerator enumerator16 = price.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num11 = (int)enumerator16.Current;
						WriteElementStringRaw("price", "", XmlConvert.ToString(num11));
					}
				}
			}
			NetInt produceQuality = o.produceQuality;
			if (produceQuality != null)
			{
				IEnumerator enumerator17 = produceQuality.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num12 = (int)enumerator17.Current;
						WriteElementStringRaw("produceQuality", "", XmlConvert.ToString(num12));
					}
				}
			}
			NetByte daysToLay = o.daysToLay;
			if (daysToLay != null)
			{
				IEnumerator enumerator18 = daysToLay.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						byte b = (byte)enumerator18.Current;
						WriteElementStringRaw("daysToLay", "", XmlConvert.ToString(b));
					}
				}
			}
			NetByte daysSinceLastLay = o.daysSinceLastLay;
			if (daysSinceLastLay != null)
			{
				IEnumerator enumerator19 = daysSinceLastLay.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						byte b2 = (byte)enumerator19.Current;
						WriteElementStringRaw("daysSinceLastLay", "", XmlConvert.ToString(b2));
					}
				}
			}
			NetByte ageWhenMature = o.ageWhenMature;
			if (ageWhenMature != null)
			{
				IEnumerator enumerator20 = ageWhenMature.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						byte b3 = (byte)enumerator20.Current;
						WriteElementStringRaw("ageWhenMature", "", XmlConvert.ToString(b3));
					}
				}
			}
			NetByte harvestType = o.harvestType;
			if (harvestType != null)
			{
				IEnumerator enumerator21 = harvestType.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						byte b4 = (byte)enumerator21.Current;
						WriteElementStringRaw("harvestType", "", XmlConvert.ToString(b4));
					}
				}
			}
			NetByte happiness = o.happiness;
			if (happiness != null)
			{
				IEnumerator enumerator22 = happiness.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						byte b5 = (byte)enumerator22.Current;
						WriteElementStringRaw("happiness", "", XmlConvert.ToString(b5));
					}
				}
			}
			NetByte fullness = o.fullness;
			if (fullness != null)
			{
				IEnumerator enumerator23 = fullness.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						byte b6 = (byte)enumerator23.Current;
						WriteElementStringRaw("fullness", "", XmlConvert.ToString(b6));
					}
				}
			}
			NetByte happinessDrain = o.happinessDrain;
			if (happinessDrain != null)
			{
				IEnumerator enumerator24 = happinessDrain.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						byte b7 = (byte)enumerator24.Current;
						WriteElementStringRaw("happinessDrain", "", XmlConvert.ToString(b7));
					}
				}
			}
			NetByte fullnessDrain = o.fullnessDrain;
			if (fullnessDrain != null)
			{
				IEnumerator enumerator25 = fullnessDrain.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						byte b8 = (byte)enumerator25.Current;
						WriteElementStringRaw("fullnessDrain", "", XmlConvert.ToString(b8));
					}
				}
			}
			NetBool wasAutoPet = o.wasAutoPet;
			if (wasAutoPet != null)
			{
				IEnumerator enumerator26 = wasAutoPet.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag4 = (bool)enumerator26.Current;
						WriteElementStringRaw("wasAutoPet", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool wasPet = o.wasPet;
			if (wasPet != null)
			{
				IEnumerator enumerator27 = wasPet.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag5 = (bool)enumerator27.Current;
						WriteElementStringRaw("wasPet", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool showDifferentTextureWhenReadyForHarvest = o.showDifferentTextureWhenReadyForHarvest;
			if (showDifferentTextureWhenReadyForHarvest != null)
			{
				IEnumerator enumerator28 = showDifferentTextureWhenReadyForHarvest.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag6 = (bool)enumerator28.Current;
						WriteElementStringRaw("showDifferentTextureWhenReadyForHarvest", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool allowReproduction = o.allowReproduction;
			if (allowReproduction != null)
			{
				IEnumerator enumerator29 = allowReproduction.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag7 = (bool)enumerator29.Current;
						WriteElementStringRaw("allowReproduction", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetString sound = o.sound;
			if (sound != null)
			{
				IEnumerator enumerator30 = sound.GetEnumerator();
				if (enumerator30 != null)
				{
					while (enumerator30.MoveNext())
					{
						string value2 = (string)enumerator30.Current;
						WriteElementString("sound", "", value2);
					}
				}
			}
			NetString type2 = o.type;
			if (type2 != null)
			{
				IEnumerator enumerator31 = type2.GetEnumerator();
				if (enumerator31 != null)
				{
					while (enumerator31.MoveNext())
					{
						string value3 = (string)enumerator31.Current;
						WriteElementString("type", "", value3);
					}
				}
			}
			NetString buildingTypeILiveIn = o.buildingTypeILiveIn;
			if (buildingTypeILiveIn != null)
			{
				IEnumerator enumerator32 = buildingTypeILiveIn.GetEnumerator();
				if (enumerator32 != null)
				{
					while (enumerator32.MoveNext())
					{
						string value4 = (string)enumerator32.Current;
						WriteElementString("buildingTypeILiveIn", "", value4);
					}
				}
			}
			NetString toolUsedForHarvest = o.toolUsedForHarvest;
			if (toolUsedForHarvest != null)
			{
				IEnumerator enumerator33 = toolUsedForHarvest.GetEnumerator();
				if (enumerator33 != null)
				{
					while (enumerator33.MoveNext())
					{
						string value5 = (string)enumerator33.Current;
						WriteElementString("toolUsedForHarvest", "", value5);
					}
				}
			}
			NetRectangle frontBackBoundingBox = o.frontBackBoundingBox;
			if (frontBackBoundingBox != null)
			{
				IEnumerator enumerator34 = frontBackBoundingBox.GetEnumerator();
				if (enumerator34 != null)
				{
					while (enumerator34.MoveNext())
					{
						Rectangle o2 = (Rectangle)enumerator34.Current;
						Write51_Rectangle("frontBackBoundingBox", "", o2, needType: false);
					}
				}
			}
			NetRectangle sidewaysBoundingBox = o.sidewaysBoundingBox;
			if (sidewaysBoundingBox != null)
			{
				IEnumerator enumerator35 = sidewaysBoundingBox.GetEnumerator();
				if (enumerator35 != null)
				{
					while (enumerator35.MoveNext())
					{
						Rectangle o3 = (Rectangle)enumerator35.Current;
						Write51_Rectangle("sidewaysBoundingBox", "", o3, needType: false);
					}
				}
			}
			NetRectangle frontBackSourceRect = o.frontBackSourceRect;
			if (frontBackSourceRect != null)
			{
				IEnumerator enumerator36 = frontBackSourceRect.GetEnumerator();
				if (enumerator36 != null)
				{
					while (enumerator36.MoveNext())
					{
						Rectangle o4 = (Rectangle)enumerator36.Current;
						Write51_Rectangle("frontBackSourceRect", "", o4, needType: false);
					}
				}
			}
			NetRectangle sidewaysSourceRect = o.sidewaysSourceRect;
			if (sidewaysSourceRect != null)
			{
				IEnumerator enumerator37 = sidewaysSourceRect.GetEnumerator();
				if (enumerator37 != null)
				{
					while (enumerator37.MoveNext())
					{
						Rectangle o5 = (Rectangle)enumerator37.Current;
						Write51_Rectangle("sidewaysSourceRect", "", o5, needType: false);
					}
				}
			}
			NetLong myID = o.myID;
			if (myID != null)
			{
				IEnumerator enumerator38 = myID.GetEnumerator();
				if (enumerator38 != null)
				{
					while (enumerator38.MoveNext())
					{
						long num13 = (long)enumerator38.Current;
						WriteElementStringRaw("myID", "", XmlConvert.ToString(num13));
					}
				}
			}
			NetLong ownerID = o.ownerID;
			if (ownerID != null)
			{
				IEnumerator enumerator39 = ownerID.GetEnumerator();
				if (enumerator39 != null)
				{
					while (enumerator39.MoveNext())
					{
						long num14 = (long)enumerator39.Current;
						WriteElementStringRaw("ownerID", "", XmlConvert.ToString(num14));
					}
				}
			}
			NetLong parentId = o.parentId;
			if (parentId != null)
			{
				IEnumerator enumerator40 = parentId.GetEnumerator();
				if (enumerator40 != null)
				{
					while (enumerator40.MoveNext())
					{
						long num15 = (long)enumerator40.Current;
						WriteElementStringRaw("parentId", "", XmlConvert.ToString(num15));
					}
				}
			}
			NetVector2 homeLocation = o.homeLocation;
			if (homeLocation != null)
			{
				IEnumerator enumerator41 = homeLocation.GetEnumerator();
				if (enumerator41 != null)
				{
					while (enumerator41.MoveNext())
					{
						Vector2 o6 = (Vector2)enumerator41.Current;
						Write33_Vector2("homeLocation", "", o6, needType: false);
					}
				}
			}
			NetInt moodMessage = o.moodMessage;
			if (moodMessage != null)
			{
				IEnumerator enumerator42 = moodMessage.GetEnumerator();
				if (enumerator42 != null)
				{
					while (enumerator42.MoveNext())
					{
						int num16 = (int)enumerator42.Current;
						WriteElementStringRaw("moodMessage", "", XmlConvert.ToString(num16));
					}
				}
			}
			NetBool isEating = o.isEating;
			if (isEating != null)
			{
				IEnumerator enumerator43 = isEating.GetEnumerator();
				if (enumerator43 != null)
				{
					while (enumerator43.MoveNext())
					{
						bool flag8 = (bool)enumerator43.Current;
						WriteElementStringRaw("isEating", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteElementString("displayName", "", o.displayName);
			WriteEndElement(o);
		}

		private string Write163_StackDrawType(StackDrawType v)
		{
			string text = null;
			return v switch
			{
				StackDrawType.Hide => "Hide", 
				StackDrawType.Draw => "Draw", 
				StackDrawType.Draw_OneInclusive => "Draw_OneInclusive", 
				StackDrawType.HideButShowQuality => "HideButShowQuality", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.StackDrawType"), 
			};
		}

		private string Write162_LikeLevels(GiftObjective.LikeLevels v)
		{
			string text = null;
			return v switch
			{
				GiftObjective.LikeLevels.None => "None", 
				GiftObjective.LikeLevels.Hated => "Hated", 
				GiftObjective.LikeLevels.Disliked => "Disliked", 
				GiftObjective.LikeLevels.Neutral => "Neutral", 
				GiftObjective.LikeLevels.Liked => "Liked", 
				GiftObjective.LikeLevels.Loved => "Loved", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.GiftObjective.LikeLevels"), 
			};
		}

		private string Write161_QuestDuration(SpecialOrder.QuestDuration v)
		{
			string text = null;
			return v switch
			{
				SpecialOrder.QuestDuration.Week => "Week", 
				SpecialOrder.QuestDuration.Month => "Month", 
				SpecialOrder.QuestDuration.TwoWeeks => "TwoWeeks", 
				SpecialOrder.QuestDuration.TwoDays => "TwoDays", 
				SpecialOrder.QuestDuration.ThreeDays => "ThreeDays", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.SpecialOrder.QuestDuration"), 
			};
		}

		private string Write160_QuestState(SpecialOrder.QuestState v)
		{
			string text = null;
			return v switch
			{
				SpecialOrder.QuestState.InProgress => "InProgress", 
				SpecialOrder.QuestState.Complete => "Complete", 
				SpecialOrder.QuestState.Failed => "Failed", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.SpecialOrder.QuestState"), 
			};
		}

		private void Write47_InputButton(string n, string ns, InputButton o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(InputButton)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("InputButton", "");
			}
			WriteElementString("key", "", Write46_Keys(o.key));
			WriteElementStringRaw("mouseLeft", "", XmlConvert.ToString(o.mouseLeft));
			WriteElementStringRaw("mouseRight", "", XmlConvert.ToString(o.mouseRight));
			WriteEndElement(o);
		}

		private string Write46_Keys(Keys v)
		{
			string text = null;
			return v switch
			{
				Keys.A => "A", 
				Keys.Add => "Add", 
				Keys.Apps => "Apps", 
				Keys.Attn => "Attn", 
				Keys.B => "B", 
				Keys.Back => "Back", 
				Keys.BrowserBack => "BrowserBack", 
				Keys.BrowserFavorites => "BrowserFavorites", 
				Keys.BrowserForward => "BrowserForward", 
				Keys.BrowserHome => "BrowserHome", 
				Keys.BrowserRefresh => "BrowserRefresh", 
				Keys.BrowserSearch => "BrowserSearch", 
				Keys.BrowserStop => "BrowserStop", 
				Keys.C => "C", 
				Keys.CapsLock => "CapsLock", 
				Keys.Crsel => "Crsel", 
				Keys.D => "D", 
				Keys.D0 => "D0", 
				Keys.D1 => "D1", 
				Keys.D2 => "D2", 
				Keys.D3 => "D3", 
				Keys.D4 => "D4", 
				Keys.D5 => "D5", 
				Keys.D6 => "D6", 
				Keys.D7 => "D7", 
				Keys.D8 => "D8", 
				Keys.D9 => "D9", 
				Keys.Decimal => "Decimal", 
				Keys.Delete => "Delete", 
				Keys.Divide => "Divide", 
				Keys.Down => "Down", 
				Keys.E => "E", 
				Keys.End => "End", 
				Keys.Enter => "Enter", 
				Keys.EraseEof => "EraseEof", 
				Keys.Escape => "Escape", 
				Keys.Execute => "Execute", 
				Keys.Exsel => "Exsel", 
				Keys.F => "F", 
				Keys.F1 => "F1", 
				Keys.F10 => "F10", 
				Keys.F11 => "F11", 
				Keys.F12 => "F12", 
				Keys.F13 => "F13", 
				Keys.F14 => "F14", 
				Keys.F15 => "F15", 
				Keys.F16 => "F16", 
				Keys.F17 => "F17", 
				Keys.F18 => "F18", 
				Keys.F19 => "F19", 
				Keys.F2 => "F2", 
				Keys.F20 => "F20", 
				Keys.F21 => "F21", 
				Keys.F22 => "F22", 
				Keys.F23 => "F23", 
				Keys.F24 => "F24", 
				Keys.F3 => "F3", 
				Keys.F4 => "F4", 
				Keys.F5 => "F5", 
				Keys.F6 => "F6", 
				Keys.F7 => "F7", 
				Keys.F8 => "F8", 
				Keys.F9 => "F9", 
				Keys.G => "G", 
				Keys.H => "H", 
				Keys.Help => "Help", 
				Keys.Home => "Home", 
				Keys.I => "I", 
				Keys.ImeConvert => "ImeConvert", 
				Keys.ImeNoConvert => "ImeNoConvert", 
				Keys.Insert => "Insert", 
				Keys.J => "J", 
				Keys.K => "K", 
				Keys.Kana => "Kana", 
				Keys.Kanji => "Kanji", 
				Keys.L => "L", 
				Keys.LaunchApplication1 => "LaunchApplication1", 
				Keys.LaunchApplication2 => "LaunchApplication2", 
				Keys.LaunchMail => "LaunchMail", 
				Keys.LeftControl => "LeftControl", 
				Keys.Left => "Left", 
				Keys.LeftAlt => "LeftAlt", 
				Keys.LeftShift => "LeftShift", 
				Keys.LeftWindows => "LeftWindows", 
				Keys.M => "M", 
				Keys.MediaNextTrack => "MediaNextTrack", 
				Keys.MediaPlayPause => "MediaPlayPause", 
				Keys.MediaPreviousTrack => "MediaPreviousTrack", 
				Keys.MediaStop => "MediaStop", 
				Keys.Multiply => "Multiply", 
				Keys.N => "N", 
				Keys.None => "None", 
				Keys.NumLock => "NumLock", 
				Keys.NumPad0 => "NumPad0", 
				Keys.NumPad1 => "NumPad1", 
				Keys.NumPad2 => "NumPad2", 
				Keys.NumPad3 => "NumPad3", 
				Keys.NumPad4 => "NumPad4", 
				Keys.NumPad5 => "NumPad5", 
				Keys.NumPad6 => "NumPad6", 
				Keys.NumPad7 => "NumPad7", 
				Keys.NumPad8 => "NumPad8", 
				Keys.NumPad9 => "NumPad9", 
				Keys.O => "O", 
				Keys.OemAuto => "OemAuto", 
				Keys.OemCopy => "OemCopy", 
				Keys.OemEnlW => "OemEnlW", 
				Keys.OemSemicolon => "OemSemicolon", 
				Keys.OemBackslash => "OemBackslash", 
				Keys.OemQuestion => "OemQuestion", 
				Keys.OemTilde => "OemTilde", 
				Keys.OemOpenBrackets => "OemOpenBrackets", 
				Keys.OemPipe => "OemPipe", 
				Keys.OemCloseBrackets => "OemCloseBrackets", 
				Keys.OemQuotes => "OemQuotes", 
				Keys.Oem8 => "Oem8", 
				Keys.OemClear => "OemClear", 
				Keys.OemComma => "OemComma", 
				Keys.OemMinus => "OemMinus", 
				Keys.OemPeriod => "OemPeriod", 
				Keys.OemPlus => "OemPlus", 
				Keys.P => "P", 
				Keys.Pa1 => "Pa1", 
				Keys.PageDown => "PageDown", 
				Keys.PageUp => "PageUp", 
				Keys.Pause => "Pause", 
				Keys.Play => "Play", 
				Keys.Print => "Print", 
				Keys.PrintScreen => "PrintScreen", 
				Keys.ProcessKey => "ProcessKey", 
				Keys.Q => "Q", 
				Keys.R => "R", 
				Keys.RightControl => "RightControl", 
				Keys.Right => "Right", 
				Keys.RightAlt => "RightAlt", 
				Keys.RightShift => "RightShift", 
				Keys.RightWindows => "RightWindows", 
				Keys.S => "S", 
				Keys.Scroll => "Scroll", 
				Keys.Select => "Select", 
				Keys.SelectMedia => "SelectMedia", 
				Keys.Separator => "Separator", 
				Keys.Sleep => "Sleep", 
				Keys.Space => "Space", 
				Keys.Subtract => "Subtract", 
				Keys.T => "T", 
				Keys.Tab => "Tab", 
				Keys.U => "U", 
				Keys.Up => "Up", 
				Keys.V => "V", 
				Keys.VolumeDown => "VolumeDown", 
				Keys.VolumeMute => "VolumeMute", 
				Keys.VolumeUp => "VolumeUp", 
				Keys.W => "W", 
				Keys.X => "X", 
				Keys.Y => "Y", 
				Keys.Z => "Z", 
				Keys.Zoom => "Zoom", 
				Keys.ChatPadGreen => "ChatPadGreen", 
				Keys.ChatPadOrange => "ChatPadOrange", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "Microsoft.Xna.Framework.Input.Keys"), 
			};
		}

		private string Write45_ServerPrivacy(ServerPrivacy v)
		{
			string text = null;
			return v switch
			{
				ServerPrivacy.InviteOnly => "InviteOnly", 
				ServerPrivacy.FriendsOnly => "FriendsOnly", 
				ServerPrivacy.Public => "Public", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.ServerPrivacy"), 
			};
		}

		private string Write44_GamepadModes(Options.GamepadModes v)
		{
			string text = null;
			return v switch
			{
				Options.GamepadModes.Auto => "Auto", 
				Options.GamepadModes.ForceOn => "ForceOn", 
				Options.GamepadModes.ForceOff => "ForceOff", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Options.GamepadModes"), 
			};
		}

		private string Write43_ItemStowingModes(Options.ItemStowingModes v)
		{
			string text = null;
			return v switch
			{
				Options.ItemStowingModes.Off => "Off", 
				Options.ItemStowingModes.GamepadOnly => "GamepadOnly", 
				Options.ItemStowingModes.Both => "Both", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.Options.ItemStowingModes"), 
			};
		}

		private string Write36_GemBirdType(IslandGemBird.GemBirdType v)
		{
			string text = null;
			return v switch
			{
				IslandGemBird.GemBirdType.Emerald => "Emerald", 
				IslandGemBird.GemBirdType.Aquamarine => "Aquamarine", 
				IslandGemBird.GemBirdType.Ruby => "Ruby", 
				IslandGemBird.GemBirdType.Amethyst => "Amethyst", 
				IslandGemBird.GemBirdType.Topaz => "Topaz", 
				IslandGemBird.GemBirdType.MAX => "MAX", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.IslandGemBird.GemBirdType"), 
			};
		}

		private string Write32_AnimationType(HouseRenovation.AnimationType v)
		{
			string text = null;
			return v switch
			{
				HouseRenovation.AnimationType.Build => "Build", 
				HouseRenovation.AnimationType.Destroy => "Destroy", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "StardewValley.HouseRenovation.AnimationType"), 
			};
		}

		private string Write17_StopBehavior(StopBehavior v)
		{
			string text = null;
			return v switch
			{
				StopBehavior.AsIs => "AsIs", 
				StopBehavior.ForceComplete => "ForceComplete", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "TinyTween.StopBehavior"), 
			};
		}

		private string Write16_TweenState(TweenState v)
		{
			string text = null;
			return v switch
			{
				TweenState.Running => "Running", 
				TweenState.Paused => "Paused", 
				TweenState.Stopped => "Stopped", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "TinyTween.TweenState"), 
			};
		}

		private string Write9_WeaponControl(WeaponControl v)
		{
			string text = null;
			return v switch
			{
				WeaponControl.AutoAttack => "AutoAttack", 
				WeaponControl.AttackJoystick => "AttackJoystick", 
				WeaponControl.InvisibleJoystick => "InvisibleJoystick", 
				WeaponControl.InvisibleJoystickOneButton => "InvisibleJoystickOneButton", 
				WeaponControl.JoystickAndButtons => "JoystickAndButtons", 
				WeaponControl.JoystickAndButtonsWeaponsOnly => "JoystickAndButtonsWeaponsOnly", 
				WeaponControl.JoystickAndButtonsForWeapons => "JoystickAndButtonsForWeapons", 
				WeaponControl.JoystickOnly => "JoystickOnly", 
				WeaponControl.JoystickAndButtonsNoTapToMove => "JoystickAndButtonsNoTapToMove", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "WeaponControl"), 
			};
		}

		private string Write8_DistanceToTarget(DistanceToTarget v)
		{
			string text = null;
			return v switch
			{
				DistanceToTarget.InRange => "InRange", 
				DistanceToTarget.TooFar => "TooFar", 
				DistanceToTarget.TooClose => "TooClose", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "DistanceToTarget"), 
			};
		}

		private string Write7_TapState(TapState v)
		{
			string text = null;
			return v switch
			{
				TapState.None => "None", 
				TapState.TapDown => "TapDown", 
				TapState.TapHeld => "TapHeld", 
				TapState.TapReleased => "TapReleased", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "TapState"), 
			};
		}

		private string Write6_MouseCursor(MouseCursor v)
		{
			string text = null;
			return v switch
			{
				MouseCursor.None => "None", 
				MouseCursor.Hand => "Hand", 
				MouseCursor.Gift => "Gift", 
				MouseCursor.SpeechBubble => "SpeechBubble", 
				MouseCursor.MagnifyingGlass => "MagnifyingGlass", 
				MouseCursor.ReadyForHarvest => "ReadyForHarvest", 
				MouseCursor.UsingSlingshot => "UsingSlingshot", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "MouseCursor"), 
			};
		}

		private string Write1_WalkDirection(WalkDirection v)
		{
			string text = null;
			return v switch
			{
				WalkDirection.None => "None", 
				WalkDirection.Up => "Up", 
				WalkDirection.Down => "Down", 
				WalkDirection.Left => "Left", 
				WalkDirection.Right => "Right", 
				WalkDirection.UpLeft => "UpLeft", 
				WalkDirection.UpRight => "UpRight", 
				WalkDirection.DownLeft => "DownLeft", 
				WalkDirection.DownRight => "DownRight", 
				_ => throw CreateInvalidEnumValueException(((long)v).ToString(CultureInfo.InvariantCulture), "WalkDirection"), 
			};
		}

		private void Write3_ObjectID(string n, string ns, ObjectID o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ObjectID)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ObjectID", "");
			}
			WriteEndElement(o);
		}

		private void Write4_BigCraftableID(string n, string ns, BigCraftableID o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BigCraftableID)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BigCraftableID", "");
			}
			WriteEndElement(o);
		}

		private void Write5_FurnitureID(string n, string ns, FurnitureID o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FurnitureID)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FurnitureID", "");
			}
			WriteEndElement(o);
		}

		private void Write12_LocationWeather(string n, string ns, LocationWeather o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LocationWeather)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LocationWeather", "");
			}
			NetInt weatherForTomorrow = o.weatherForTomorrow;
			if (weatherForTomorrow != null)
			{
				WriteStartElement("weatherForTomorrow", "", null, writePrefixed: false);
				IEnumerator enumerator = weatherForTomorrow.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetBool isRaining = o.isRaining;
			if (isRaining != null)
			{
				WriteStartElement("isRaining", "", null, writePrefixed: false);
				IEnumerator enumerator2 = isRaining.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			NetBool isSnowing = o.isSnowing;
			if (isSnowing != null)
			{
				WriteStartElement("isSnowing", "", null, writePrefixed: false);
				IEnumerator enumerator3 = isSnowing.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag2 = (bool)enumerator3.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			NetBool isLightning = o.isLightning;
			if (isLightning != null)
			{
				WriteStartElement("isLightning", "", null, writePrefixed: false);
				IEnumerator enumerator4 = isLightning.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag3 = (bool)enumerator4.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag3));
					}
				}
				WriteEndElement();
			}
			NetBool isDebrisWeather = o.isDebrisWeather;
			if (isDebrisWeather != null)
			{
				WriteStartElement("isDebrisWeather", "", null, writePrefixed: false);
				IEnumerator enumerator5 = isDebrisWeather.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag4 = (bool)enumerator5.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag4));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write14_DontLoadDefaultSetting(string n, string ns, DontLoadDefaultSetting o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DontLoadDefaultSetting)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DontLoadDefaultSetting", "");
			}
			WriteEndElement(o);
		}

		private void Write37_InstanceStatics(string n, string ns, InstanceStatics o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(InstanceStatics)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("InstanceStatics", "");
			}
			WriteEndElement(o);
		}

		private void Write38_InstancedStatic(string n, string ns, InstancedStatic o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(InstancedStatic)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("InstancedStatic", "");
			}
			WriteEndElement(o);
		}

		private void Write39_NonInstancedStatic(string n, string ns, NonInstancedStatic o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NonInstancedStatic)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NonInstancedStatic", "");
			}
			WriteEndElement(o);
		}

		private void Write13_Attribute(string n, string ns, Attribute o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(Attribute))
				{
					return;
				}
				if (type == typeof(NonInstancedStatic))
				{
					Write39_NonInstancedStatic(n, ns, (NonInstancedStatic)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(InstancedStatic))
				{
					Write38_InstancedStatic(n, ns, (InstancedStatic)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(InstanceStatics))
				{
					Write37_InstanceStatics(n, ns, (InstanceStatics)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(DontLoadDefaultSetting)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write14_DontLoadDefaultSetting(n, ns, (DontLoadDefaultSetting)o, isNullable, needType: true);
			}
		}

		private void Write15_WaterTileData(string n, string ns, WaterTiles.WaterTileData o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WaterTiles.WaterTileData)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WaterTileData", "");
			}
			WriteElementStringRaw("isWater", "", XmlConvert.ToString(o.isWater));
			WriteElementStringRaw("isVisible", "", XmlConvert.ToString(o.isVisible));
			WriteEndElement(o);
		}

		private void Write19_FloatTween(string n, string ns, FloatTween o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FloatTween)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FloatTween", "");
			}
			WriteEndElement(o);
		}

		private void Write18_TweenOfSingle(string n, string ns, Tween<float> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tween<float>)))
				{
					if (type == typeof(FloatTween))
					{
						Write19_FloatTween(n, ns, (FloatTween)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TweenOfSingle", "");
			}
			WriteEndElement(o);
		}

		private void Write21_Vector2Tween(string n, string ns, Vector2Tween o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector2Tween)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector2Tween", "");
			}
			WriteEndElement(o);
		}

		private void Write20_TweenOfVector2(string n, string ns, Tween<Vector2> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tween<Vector2>)))
				{
					if (type == typeof(Vector2Tween))
					{
						Write21_Vector2Tween(n, ns, (Vector2Tween)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TweenOfVector2", "");
			}
			WriteEndElement(o);
		}

		private void Write23_Vector3Tween(string n, string ns, Vector3Tween o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector3Tween)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector3Tween", "");
			}
			WriteEndElement(o);
		}

		private void Write22_TweenOfVector3(string n, string ns, Tween<Vector3> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tween<Vector3>)))
				{
					if (type == typeof(Vector3Tween))
					{
						Write23_Vector3Tween(n, ns, (Vector3Tween)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TweenOfVector3", "");
			}
			WriteEndElement(o);
		}

		private void Write25_Vector4Tween(string n, string ns, Vector4Tween o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector4Tween)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector4Tween", "");
			}
			WriteEndElement(o);
		}

		private void Write24_TweenOfVector4(string n, string ns, Tween<Vector4> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tween<Vector4>)))
				{
					if (type == typeof(Vector4Tween))
					{
						Write25_Vector4Tween(n, ns, (Vector4Tween)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TweenOfVector4", "");
			}
			WriteEndElement(o);
		}

		private void Write27_ColorTween(string n, string ns, ColorTween o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ColorTween)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ColorTween", "");
			}
			WriteEndElement(o);
		}

		private void Write26_TweenOfColor(string n, string ns, Tween<Color> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tween<Color>)))
				{
					if (type == typeof(ColorTween))
					{
						Write27_ColorTween(n, ns, (ColorTween)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TweenOfColor", "");
			}
			WriteEndElement(o);
		}

		private void Write29_QuaternionTween(string n, string ns, QuaternionTween o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(QuaternionTween)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("QuaternionTween", "");
			}
			WriteEndElement(o);
		}

		private void Write28_TweenOfQuaternion(string n, string ns, Tween<Quaternion> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tween<Quaternion>)))
				{
					if (type == typeof(QuaternionTween))
					{
						Write29_QuaternionTween(n, ns, (QuaternionTween)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TweenOfQuaternion", "");
			}
			WriteEndElement(o);
		}

		private void Write31_BuildingPainter(string n, string ns, BuildingPainter o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BuildingPainter)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BuildingPainter", "");
			}
			WriteEndElement(o);
		}

		private void Write35_IslandGemBird(string n, string ns, IslandGemBird o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandGemBird)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandGemBird", "");
			}
			NetVector2 position = o.position;
			if (position != null)
			{
				IEnumerator enumerator = position.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator.Current;
						Write33_Vector2("position", "", o2, needType: false);
					}
				}
			}
			NetFloat height = o.height;
			if (height != null)
			{
				IEnumerator enumerator2 = height.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						float num = (float)enumerator2.Current;
						WriteElementStringRaw("height", "", XmlConvert.ToString(num));
					}
				}
			}
			NetFloat alpha = o.alpha;
			if (alpha != null)
			{
				IEnumerator enumerator3 = alpha.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						float num2 = (float)enumerator3.Current;
						WriteElementStringRaw("alpha", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetBool flying = o.flying;
			if (flying != null)
			{
				IEnumerator enumerator4 = flying.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("flying", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetColor color = o.color;
			if (color != null)
			{
				IEnumerator enumerator5 = color.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						Color o3 = (Color)enumerator5.Current;
						Write34_Color("color", "", o3, needType: false);
					}
				}
			}
			NetInt itemIndex = o.itemIndex;
			if (itemIndex != null)
			{
				IEnumerator enumerator6 = itemIndex.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num3 = (int)enumerator6.Current;
						WriteElementStringRaw("itemIndex", "", XmlConvert.ToString(num3));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write40_LocalMultiplayer(string n, string ns, LocalMultiplayer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LocalMultiplayer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LocalMultiplayer", "");
			}
			WriteEndElement(o);
		}

		private void Write41_LocationName(string n, string ns, LocationName o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LocationName)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LocationName", "");
			}
			WriteEndElement(o);
		}

		private void Write48_Options(string n, string ns, Options o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Options)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Options", "");
			}
			WriteElementStringRaw("verticalToolbar", "", XmlConvert.ToString(o.verticalToolbar));
			WriteElementStringRaw("autoAttack", "", XmlConvert.ToString(o.autoAttack));
			WriteElementStringRaw("greenSquaresGuide", "", XmlConvert.ToString(o.greenSquaresGuide));
			WriteElementStringRaw("vibrations", "", XmlConvert.ToString(o.vibrations));
			WriteElementStringRaw("bigNumbers", "", XmlConvert.ToString(o.bigNumbers));
			WriteElementStringRaw("autoSave", "", XmlConvert.ToString(o.autoSave));
			WriteElementStringRaw("xEdge", "", XmlConvert.ToString(o.xEdge));
			WriteElementStringRaw("toolbarPadding", "", XmlConvert.ToString(o.toolbarPadding));
			WriteElementStringRaw("weaponControl", "", XmlConvert.ToString(o.weaponControl));
			WriteElementStringRaw("showToggleJoypadButton", "", XmlConvert.ToString(o.showToggleJoypadButton));
			WriteElementStringRaw("pinchZoom", "", XmlConvert.ToString(o.pinchZoom));
			WriteElementStringRaw("invisibleButtonWidth", "", XmlConvert.ToString(o.invisibleButtonWidth));
			WriteElementStringRaw("daysSinceReviewRequest", "", XmlConvert.ToString(o.daysSinceReviewRequest));
			WriteElementStringRaw("reviewGiven", "", XmlConvert.ToString(o.reviewGiven));
			WriteElementStringRaw("toolbarSlotSize", "", XmlConvert.ToString(o.toolbarSlotSize));
			WriteElementStringRaw("dateTimeScale", "", XmlConvert.ToString(o.dateTimeScale));
			WriteElementStringRaw("lastSeenBuildNumber", "", XmlConvert.ToString(o.lastSeenBuildNumber));
			WriteElementStringRaw("showCameraButton", "", XmlConvert.ToString(o.showCameraButton));
			WriteSerializable(o.joystickConfigs, "joystickConfigs", "", isNullable: false, wrapped: true);
			WriteElementStringRaw("sizeJoystick", "", XmlConvert.ToString(o.sizeJoystick));
			WriteElementStringRaw("sizeButtonA", "", XmlConvert.ToString(o.sizeButtonA));
			WriteElementStringRaw("sizeButtonB", "", XmlConvert.ToString(o.sizeButtonB));
			Write42_Point("positionJoystick", "", o.positionJoystick, needType: false);
			Write42_Point("positionButtonA", "", o.positionButtonA, needType: false);
			Write42_Point("positionButtonB", "", o.positionButtonB, needType: false);
			WriteElementStringRaw("autoRun", "", XmlConvert.ToString(o.autoRun));
			WriteElementStringRaw("dialogueTyping", "", XmlConvert.ToString(o.dialogueTyping));
			WriteElementStringRaw("showPortraits", "", XmlConvert.ToString(o.showPortraits));
			WriteElementStringRaw("showMerchantPortraits", "", XmlConvert.ToString(o.showMerchantPortraits));
			WriteElementStringRaw("showMenuBackground", "", XmlConvert.ToString(o.showMenuBackground));
			WriteElementStringRaw("playFootstepSounds", "", XmlConvert.ToString(o.playFootstepSounds));
			WriteElementStringRaw("alwaysShowToolHitLocation", "", XmlConvert.ToString(o.alwaysShowToolHitLocation));
			WriteElementStringRaw("hideToolHitLocationWhenInMotion", "", XmlConvert.ToString(o.hideToolHitLocationWhenInMotion));
			WriteElementStringRaw("pauseWhenOutOfFocus", "", XmlConvert.ToString(o.pauseWhenOutOfFocus));
			WriteElementStringRaw("pinToolbarToggle", "", XmlConvert.ToString(o.pinToolbarToggle));
			WriteElementStringRaw("mouseControls", "", XmlConvert.ToString(o.mouseControls));
			WriteElementStringRaw("keyboardControls", "", XmlConvert.ToString(o.keyboardControls));
			WriteElementStringRaw("gamepadControls", "", XmlConvert.ToString(o.gamepadControls));
			WriteElementStringRaw("rumble", "", XmlConvert.ToString(o.rumble));
			WriteElementStringRaw("ambientOnlyToggle", "", XmlConvert.ToString(o.ambientOnlyToggle));
			WriteElementStringRaw("zoomButtons", "", XmlConvert.ToString(o.zoomButtons));
			WriteElementStringRaw("invertScrollDirection", "", XmlConvert.ToString(o.invertScrollDirection));
			WriteElementStringRaw("screenFlash", "", XmlConvert.ToString(o.screenFlash));
			WriteElementStringRaw("showPlacementTileForGamepad", "", XmlConvert.ToString(o.showPlacementTileForGamepad));
			WriteElementStringRaw("snappyMenus", "", XmlConvert.ToString(o.snappyMenus));
			WriteElementStringRaw("showAdvancedCraftingInformation", "", XmlConvert.ToString(o.showAdvancedCraftingInformation));
			WriteElementStringRaw("showMPEndOfNightReadyStatus", "", XmlConvert.ToString(o.showMPEndOfNightReadyStatus));
			WriteElementStringRaw("muteAnimalSounds", "", XmlConvert.ToString(o.muteAnimalSounds));
			WriteElementStringRaw("vsyncEnabled", "", XmlConvert.ToString(o.vsyncEnabled));
			WriteElementStringRaw("fullscreen", "", XmlConvert.ToString(o.fullscreen));
			WriteElementStringRaw("windowedBorderlessFullscreen", "", XmlConvert.ToString(o.windowedBorderlessFullscreen));
			WriteElementStringRaw("ipConnectionsEnabled", "", XmlConvert.ToString(o.ipConnectionsEnabled));
			WriteElementStringRaw("enableServer", "", XmlConvert.ToString(o.enableServer));
			WriteElementStringRaw("enableFarmhandCreation", "", XmlConvert.ToString(o.enableFarmhandCreation));
			WriteElementString("stowingMode", "", Write43_ItemStowingModes(o.stowingMode));
			WriteElementString("gamepadMode", "", Write44_GamepadModes(o.gamepadMode));
			WriteElementStringRaw("useLegacySlingshotFiring", "", XmlConvert.ToString(o.useLegacySlingshotFiring));
			WriteElementStringRaw("musicVolumeLevel", "", XmlConvert.ToString(o.musicVolumeLevel));
			WriteElementStringRaw("soundVolumeLevel", "", XmlConvert.ToString(o.soundVolumeLevel));
			WriteElementStringRaw("footstepVolumeLevel", "", XmlConvert.ToString(o.footstepVolumeLevel));
			WriteElementStringRaw("ambientVolumeLevel", "", XmlConvert.ToString(o.ambientVolumeLevel));
			WriteElementStringRaw("snowTransparency", "", XmlConvert.ToString(o.snowTransparency));
			WriteElementStringRaw("zoomLevel", "", XmlConvert.ToString(o.singlePlayerBaseZoomLevel));
			WriteElementStringRaw("localCoopBaseZoomLevel", "", XmlConvert.ToString(o.localCoopBaseZoomLevel));
			WriteElementStringRaw("uiScale", "", XmlConvert.ToString(o.singlePlayerDesiredUIScale));
			WriteElementStringRaw("localCoopDesiredUIScale", "", XmlConvert.ToString(o.localCoopDesiredUIScale));
			WriteElementStringRaw("preferredResolutionX", "", XmlConvert.ToString(o.preferredResolutionX));
			WriteElementStringRaw("preferredResolutionY", "", XmlConvert.ToString(o.preferredResolutionY));
			WriteElementStringRaw("lightingQuality", "", XmlConvert.ToString(o.lightingQuality));
			WriteElementString("serverPrivacy", "", Write45_ServerPrivacy(o.serverPrivacy));
			InputButton[] actionButton = o.actionButton;
			if (actionButton != null)
			{
				WriteStartElement("actionButton", "", null, writePrefixed: false);
				for (int i = 0; i < actionButton.Length; i++)
				{
					Write47_InputButton("InputButton", "", actionButton[i], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] cancelButton = o.cancelButton;
			if (cancelButton != null)
			{
				WriteStartElement("cancelButton", "", null, writePrefixed: false);
				for (int j = 0; j < cancelButton.Length; j++)
				{
					Write47_InputButton("InputButton", "", cancelButton[j], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] useToolButton = o.useToolButton;
			if (useToolButton != null)
			{
				WriteStartElement("useToolButton", "", null, writePrefixed: false);
				for (int k = 0; k < useToolButton.Length; k++)
				{
					Write47_InputButton("InputButton", "", useToolButton[k], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] moveUpButton = o.moveUpButton;
			if (moveUpButton != null)
			{
				WriteStartElement("moveUpButton", "", null, writePrefixed: false);
				for (int l = 0; l < moveUpButton.Length; l++)
				{
					Write47_InputButton("InputButton", "", moveUpButton[l], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] moveRightButton = o.moveRightButton;
			if (moveRightButton != null)
			{
				WriteStartElement("moveRightButton", "", null, writePrefixed: false);
				for (int m = 0; m < moveRightButton.Length; m++)
				{
					Write47_InputButton("InputButton", "", moveRightButton[m], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] moveDownButton = o.moveDownButton;
			if (moveDownButton != null)
			{
				WriteStartElement("moveDownButton", "", null, writePrefixed: false);
				for (int num = 0; num < moveDownButton.Length; num++)
				{
					Write47_InputButton("InputButton", "", moveDownButton[num], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] moveLeftButton = o.moveLeftButton;
			if (moveLeftButton != null)
			{
				WriteStartElement("moveLeftButton", "", null, writePrefixed: false);
				for (int num2 = 0; num2 < moveLeftButton.Length; num2++)
				{
					Write47_InputButton("InputButton", "", moveLeftButton[num2], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] menuButton = o.menuButton;
			if (menuButton != null)
			{
				WriteStartElement("menuButton", "", null, writePrefixed: false);
				for (int num3 = 0; num3 < menuButton.Length; num3++)
				{
					Write47_InputButton("InputButton", "", menuButton[num3], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] runButton = o.runButton;
			if (runButton != null)
			{
				WriteStartElement("runButton", "", null, writePrefixed: false);
				for (int num4 = 0; num4 < runButton.Length; num4++)
				{
					Write47_InputButton("InputButton", "", runButton[num4], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] tmpKeyToReplace = o.tmpKeyToReplace;
			if (tmpKeyToReplace != null)
			{
				WriteStartElement("tmpKeyToReplace", "", null, writePrefixed: false);
				for (int num5 = 0; num5 < tmpKeyToReplace.Length; num5++)
				{
					Write47_InputButton("InputButton", "", tmpKeyToReplace[num5], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] chatButton = o.chatButton;
			if (chatButton != null)
			{
				WriteStartElement("chatButton", "", null, writePrefixed: false);
				for (int num6 = 0; num6 < chatButton.Length; num6++)
				{
					Write47_InputButton("InputButton", "", chatButton[num6], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] mapButton = o.mapButton;
			if (mapButton != null)
			{
				WriteStartElement("mapButton", "", null, writePrefixed: false);
				for (int num7 = 0; num7 < mapButton.Length; num7++)
				{
					Write47_InputButton("InputButton", "", mapButton[num7], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] journalButton = o.journalButton;
			if (journalButton != null)
			{
				WriteStartElement("journalButton", "", null, writePrefixed: false);
				for (int num8 = 0; num8 < journalButton.Length; num8++)
				{
					Write47_InputButton("InputButton", "", journalButton[num8], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot = o.inventorySlot1;
			if (inventorySlot != null)
			{
				WriteStartElement("inventorySlot1", "", null, writePrefixed: false);
				for (int num9 = 0; num9 < inventorySlot.Length; num9++)
				{
					Write47_InputButton("InputButton", "", inventorySlot[num9], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot2 = o.inventorySlot2;
			if (inventorySlot2 != null)
			{
				WriteStartElement("inventorySlot2", "", null, writePrefixed: false);
				for (int num10 = 0; num10 < inventorySlot2.Length; num10++)
				{
					Write47_InputButton("InputButton", "", inventorySlot2[num10], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot3 = o.inventorySlot3;
			if (inventorySlot3 != null)
			{
				WriteStartElement("inventorySlot3", "", null, writePrefixed: false);
				for (int num11 = 0; num11 < inventorySlot3.Length; num11++)
				{
					Write47_InputButton("InputButton", "", inventorySlot3[num11], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot4 = o.inventorySlot4;
			if (inventorySlot4 != null)
			{
				WriteStartElement("inventorySlot4", "", null, writePrefixed: false);
				for (int num12 = 0; num12 < inventorySlot4.Length; num12++)
				{
					Write47_InputButton("InputButton", "", inventorySlot4[num12], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot5 = o.inventorySlot5;
			if (inventorySlot5 != null)
			{
				WriteStartElement("inventorySlot5", "", null, writePrefixed: false);
				for (int num13 = 0; num13 < inventorySlot5.Length; num13++)
				{
					Write47_InputButton("InputButton", "", inventorySlot5[num13], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot6 = o.inventorySlot6;
			if (inventorySlot6 != null)
			{
				WriteStartElement("inventorySlot6", "", null, writePrefixed: false);
				for (int num14 = 0; num14 < inventorySlot6.Length; num14++)
				{
					Write47_InputButton("InputButton", "", inventorySlot6[num14], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot7 = o.inventorySlot7;
			if (inventorySlot7 != null)
			{
				WriteStartElement("inventorySlot7", "", null, writePrefixed: false);
				for (int num15 = 0; num15 < inventorySlot7.Length; num15++)
				{
					Write47_InputButton("InputButton", "", inventorySlot7[num15], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot8 = o.inventorySlot8;
			if (inventorySlot8 != null)
			{
				WriteStartElement("inventorySlot8", "", null, writePrefixed: false);
				for (int num16 = 0; num16 < inventorySlot8.Length; num16++)
				{
					Write47_InputButton("InputButton", "", inventorySlot8[num16], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot9 = o.inventorySlot9;
			if (inventorySlot9 != null)
			{
				WriteStartElement("inventorySlot9", "", null, writePrefixed: false);
				for (int num17 = 0; num17 < inventorySlot9.Length; num17++)
				{
					Write47_InputButton("InputButton", "", inventorySlot9[num17], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot10 = o.inventorySlot10;
			if (inventorySlot10 != null)
			{
				WriteStartElement("inventorySlot10", "", null, writePrefixed: false);
				for (int num18 = 0; num18 < inventorySlot10.Length; num18++)
				{
					Write47_InputButton("InputButton", "", inventorySlot10[num18], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot11 = o.inventorySlot11;
			if (inventorySlot11 != null)
			{
				WriteStartElement("inventorySlot11", "", null, writePrefixed: false);
				for (int num19 = 0; num19 < inventorySlot11.Length; num19++)
				{
					Write47_InputButton("InputButton", "", inventorySlot11[num19], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] inventorySlot12 = o.inventorySlot12;
			if (inventorySlot12 != null)
			{
				WriteStartElement("inventorySlot12", "", null, writePrefixed: false);
				for (int num20 = 0; num20 < inventorySlot12.Length; num20++)
				{
					Write47_InputButton("InputButton", "", inventorySlot12[num20], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] toolbarSwap = o.toolbarSwap;
			if (toolbarSwap != null)
			{
				WriteStartElement("toolbarSwap", "", null, writePrefixed: false);
				for (int num21 = 0; num21 < toolbarSwap.Length; num21++)
				{
					Write47_InputButton("InputButton", "", toolbarSwap[num21], needType: false);
				}
				WriteEndElement();
			}
			InputButton[] emoteButton = o.emoteButton;
			if (emoteButton != null)
			{
				WriteStartElement("emoteButton", "", null, writePrefixed: false);
				for (int num22 = 0; num22 < emoteButton.Length; num22++)
				{
					Write47_InputButton("InputButton", "", emoteButton[num22], needType: false);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("joystickSize", "", XmlConvert.ToString(o.joystickSize));
			WriteElementStringRaw("buttonASize", "", XmlConvert.ToString(o.buttonASize));
			WriteElementStringRaw("buttonBSize", "", XmlConvert.ToString(o.buttonBSize));
			Write42_Point("joystickPosition", "", o.joystickPosition, needType: false);
			Write42_Point("buttonAPosition", "", o.buttonAPosition, needType: false);
			Write42_Point("buttonBPosition", "", o.buttonBPosition, needType: false);
			WriteElementStringRaw("hardwareCursor", "", XmlConvert.ToString(o.hardwareCursor));
			WriteEndElement(o);
		}

		private void Write49_MapSeat(string n, string ns, MapSeat o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MapSeat)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MapSeat", "");
			}
			WriteEndElement(o);
		}

		private void Write131_CosmeticPlant(string n, string ns, CosmeticPlant o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CosmeticPlant)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CosmeticPlant", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetByte grassType = o.grassType;
			if (grassType != null)
			{
				IEnumerator enumerator2 = grassType.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						byte b = (byte)enumerator2.Current;
						WriteElementStringRaw("grassType", "", XmlConvert.ToString(b));
					}
				}
			}
			NetInt numberOfWeeds = o.numberOfWeeds;
			if (numberOfWeeds != null)
			{
				IEnumerator enumerator3 = numberOfWeeds.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num = (int)enumerator3.Current;
						WriteElementStringRaw("numberOfWeeds", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt grassSourceOffset = o.grassSourceOffset;
			if (grassSourceOffset != null)
			{
				IEnumerator enumerator4 = grassSourceOffset.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num2 = (int)enumerator4.Current;
						WriteElementStringRaw("grassSourceOffset", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator5 = flipped.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag = (bool)enumerator5.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetFloat scale = o.scale;
			if (scale != null)
			{
				IEnumerator enumerator6 = scale.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						float num3 = (float)enumerator6.Current;
						WriteElementStringRaw("scale", "", XmlConvert.ToString(num3));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write126_Grass(string n, string ns, Grass o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Grass)))
				{
					if (type == typeof(CosmeticPlant))
					{
						Write131_CosmeticPlant(n, ns, (CosmeticPlant)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Grass", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetByte grassType = o.grassType;
			if (grassType != null)
			{
				IEnumerator enumerator2 = grassType.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						byte b = (byte)enumerator2.Current;
						WriteElementStringRaw("grassType", "", XmlConvert.ToString(b));
					}
				}
			}
			NetInt numberOfWeeds = o.numberOfWeeds;
			if (numberOfWeeds != null)
			{
				IEnumerator enumerator3 = numberOfWeeds.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num = (int)enumerator3.Current;
						WriteElementStringRaw("numberOfWeeds", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt grassSourceOffset = o.grassSourceOffset;
			if (grassSourceOffset != null)
			{
				IEnumerator enumerator4 = grassSourceOffset.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num2 = (int)enumerator4.Current;
						WriteElementStringRaw("grassSourceOffset", "", XmlConvert.ToString(num2));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write128_Tree(string n, string ns, Tree o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Tree)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Tree", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write127_LazyOfTexture2D("texture", "", o.texture, isNullable: false, needType: false);
			NetInt growthStage = o.growthStage;
			if (growthStage != null)
			{
				IEnumerator enumerator2 = growthStage.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("growthStage", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt treeType = o.treeType;
			if (treeType != null)
			{
				IEnumerator enumerator3 = treeType.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("treeType", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetFloat health = o.health;
			if (health != null)
			{
				IEnumerator enumerator4 = health.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num3 = (float)enumerator4.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator5 = flipped.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag = (bool)enumerator5.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool stump = o.stump;
			if (stump != null)
			{
				IEnumerator enumerator6 = stump.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag2 = (bool)enumerator6.Current;
						WriteElementStringRaw("stump", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool tapped = o.tapped;
			if (tapped != null)
			{
				IEnumerator enumerator7 = tapped.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag3 = (bool)enumerator7.Current;
						WriteElementStringRaw("tapped", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool hasSeed = o.hasSeed;
			if (hasSeed != null)
			{
				IEnumerator enumerator8 = hasSeed.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag4 = (bool)enumerator8.Current;
						WriteElementStringRaw("hasSeed", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool fertilized = o.fertilized;
			if (fertilized != null)
			{
				IEnumerator enumerator9 = fertilized.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag5 = (bool)enumerator9.Current;
						WriteElementStringRaw("fertilized", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool shakeLeft = o.shakeLeft;
			if (shakeLeft != null)
			{
				IEnumerator enumerator10 = shakeLeft.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag6 = (bool)enumerator10.Current;
						WriteElementStringRaw("shakeLeft", "", XmlConvert.ToString(flag6));
					}
				}
			}
			Write51_Rectangle("treeTopSourceRect", "", o.treeTopSourceRect, needType: false);
			WriteEndElement(o);
		}

		private void Write127_LazyOfTexture2D(string n, string ns, Lazy<Texture2D> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Lazy<Texture2D>)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LazyOfTexture2D", "");
			}
			WriteEndElement(o);
		}

		private void Write129_Quartz(string n, string ns, Quartz o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Quartz)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Quartz", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetFloat health = o.health;
			if (health != null)
			{
				IEnumerator enumerator2 = health.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						float num = (float)enumerator2.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator3 = flipped.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetInt bigness = o.bigness;
			if (bigness != null)
			{
				IEnumerator enumerator4 = bigness.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num2 = (int)enumerator4.Current;
						WriteElementStringRaw("bigness", "", XmlConvert.ToString(num2));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write130_Flooring(string n, string ns, Flooring o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Flooring)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Flooring", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt whichFloor = o.whichFloor;
			if (whichFloor != null)
			{
				IEnumerator enumerator2 = whichFloor.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("whichFloor", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt whichView = o.whichView;
			if (whichView != null)
			{
				IEnumerator enumerator3 = whichView.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("whichView", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetBool isPathway = o.isPathway;
			if (isPathway != null)
			{
				IEnumerator enumerator4 = isPathway.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag = (bool)enumerator4.Current;
						WriteElementStringRaw("isPathway", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isSteppingStone = o.isSteppingStone;
			if (isSteppingStone != null)
			{
				IEnumerator enumerator5 = isSteppingStone.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag2 = (bool)enumerator5.Current;
						WriteElementStringRaw("isSteppingStone", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool drawContouredShadow = o.drawContouredShadow;
			if (drawContouredShadow != null)
			{
				IEnumerator enumerator6 = drawContouredShadow.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag3 = (bool)enumerator6.Current;
						WriteElementStringRaw("drawContouredShadow", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool cornerDecoratedBorders = o.cornerDecoratedBorders;
			if (cornerDecoratedBorders != null)
			{
				IEnumerator enumerator7 = cornerDecoratedBorders.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag4 = (bool)enumerator7.Current;
						WriteElementStringRaw("cornerDecoratedBorders", "", XmlConvert.ToString(flag4));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write134_FruitTree(string n, string ns, FruitTree o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FruitTree)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FruitTree", "");
			}
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator = modDataForSerialization.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						SerializableDictionary<string, string> serializable = (SerializableDictionary<string, string>)enumerator.Current;
						WriteSerializable(serializable, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt growthStage = o.growthStage;
			if (growthStage != null)
			{
				IEnumerator enumerator2 = growthStage.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("growthStage", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt treeType = o.treeType;
			if (treeType != null)
			{
				IEnumerator enumerator3 = treeType.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("treeType", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt indexOfFruit = o.indexOfFruit;
			if (indexOfFruit != null)
			{
				IEnumerator enumerator4 = indexOfFruit.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						int num3 = (int)enumerator4.Current;
						WriteElementStringRaw("indexOfFruit", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysUntilMature = o.daysUntilMature;
			if (daysUntilMature != null)
			{
				IEnumerator enumerator5 = daysUntilMature.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num4 = (int)enumerator5.Current;
						WriteElementStringRaw("daysUntilMature", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt fruitsOnTree = o.fruitsOnTree;
			if (fruitsOnTree != null)
			{
				IEnumerator enumerator6 = fruitsOnTree.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						int num5 = (int)enumerator6.Current;
						WriteElementStringRaw("fruitsOnTree", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetInt struckByLightningCountdown = o.struckByLightningCountdown;
			if (struckByLightningCountdown != null)
			{
				IEnumerator enumerator7 = struckByLightningCountdown.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						int num6 = (int)enumerator7.Current;
						WriteElementStringRaw("struckByLightningCountdown", "", XmlConvert.ToString(num6));
					}
				}
			}
			NetFloat health = o.health;
			if (health != null)
			{
				IEnumerator enumerator8 = health.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						float num7 = (float)enumerator8.Current;
						WriteElementStringRaw("health", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetBool flipped = o.flipped;
			if (flipped != null)
			{
				IEnumerator enumerator9 = flipped.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("flipped", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool stump = o.stump;
			if (stump != null)
			{
				IEnumerator enumerator10 = stump.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("stump", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool greenHouseTree = o.greenHouseTree;
			if (greenHouseTree != null)
			{
				IEnumerator enumerator11 = greenHouseTree.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("greenHouseTree", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool greenHouseTileTree = o.greenHouseTileTree;
			if (greenHouseTileTree != null)
			{
				IEnumerator enumerator12 = greenHouseTileTree.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("greenHouseTileTree", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool shakeLeft = o.shakeLeft;
			if (shakeLeft != null)
			{
				IEnumerator enumerator13 = shakeLeft.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("shakeLeft", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetString fruitSeason = o.fruitSeason;
			if (fruitSeason != null)
			{
				IEnumerator enumerator14 = fruitSeason.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						string value = (string)enumerator14.Current;
						WriteElementString("fruitSeason", "", value);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write137_TerrainFeature(string n, string ns, TerrainFeature o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(TerrainFeature))
				{
					return;
				}
				if (type == typeof(HoeDirt))
				{
					Write139_HoeDirt(n, ns, (HoeDirt)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(LargeTerrainFeature))
				{
					Write135_LargeTerrainFeature(n, ns, (LargeTerrainFeature)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Bush))
				{
					Write136_Bush(n, ns, (Bush)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(FruitTree))
				{
					Write134_FruitTree(n, ns, (FruitTree)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(ResourceClump))
				{
					Write132_ResourceClump(n, ns, (ResourceClump)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(GiantCrop))
				{
					Write133_GiantCrop(n, ns, (GiantCrop)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Flooring))
				{
					Write130_Flooring(n, ns, (Flooring)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Quartz))
				{
					Write129_Quartz(n, ns, (Quartz)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Tree))
				{
					Write128_Tree(n, ns, (Tree)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Grass))
				{
					Write126_Grass(n, ns, (Grass)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(CosmeticPlant)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write131_CosmeticPlant(n, ns, (CosmeticPlant)o, isNullable, needType: true);
			}
		}

		private void Write170_SlayMonsterQuest(string n, string ns, SlayMonsterQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SlayMonsterQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SlayMonsterQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			WriteElementString("targetMessage", "", o.targetMessage);
			NetString monsterName = o.monsterName;
			if (monsterName != null)
			{
				IEnumerator enumerator15 = monsterName.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("monsterName", "", value3);
					}
				}
			}
			NetString target = o.target;
			if (target != null)
			{
				IEnumerator enumerator16 = target.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						string value4 = (string)enumerator16.Current;
						WriteElementString("target", "", value4);
					}
				}
			}
			NetRef<Monster> monster = o.monster;
			if (monster != null)
			{
				IEnumerator enumerator17 = monster.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						Monster o2 = (Monster)enumerator17.Current;
						Write169_Monster("monster", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetInt numberToKill = o.numberToKill;
			if (numberToKill != null)
			{
				IEnumerator enumerator18 = numberToKill.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num7 = (int)enumerator18.Current;
						WriteElementStringRaw("numberToKill", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt reward = o.reward;
			if (reward != null)
			{
				IEnumerator enumerator19 = reward.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num8 = (int)enumerator19.Current;
						WriteElementStringRaw("reward", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt numberKilled = o.numberKilled;
			if (numberKilled != null)
			{
				IEnumerator enumerator20 = numberKilled.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num9 = (int)enumerator20.Current;
						WriteElementStringRaw("numberKilled", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetDescriptionElementList parts = o.parts;
			if (parts != null)
			{
				WriteStartElement("parts", "", null, writePrefixed: false);
				IEnumerator enumerator21 = parts.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						DescriptionElement o3 = (DescriptionElement)enumerator21.Current;
						Write165_DescriptionElement("DescriptionElement", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementList dialogueparts = o.dialogueparts;
			if (dialogueparts != null)
			{
				WriteStartElement("dialogueparts", "", null, writePrefixed: false);
				IEnumerator enumerator22 = dialogueparts.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						DescriptionElement o4 = (DescriptionElement)enumerator22.Current;
						Write165_DescriptionElement("DescriptionElement", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementRef objective = o.objective;
			if (objective != null)
			{
				IEnumerator enumerator23 = objective.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						DescriptionElement o5 = (DescriptionElement)enumerator23.Current;
						Write165_DescriptionElement("objective", "", o5, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write171_ResourceCollectionQuest(string n, string ns, ResourceCollectionQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ResourceCollectionQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ResourceCollectionQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetString target = o.target;
			if (target != null)
			{
				IEnumerator enumerator15 = target.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("target", "", value3);
					}
				}
			}
			NetString targetMessage = o.targetMessage;
			if (targetMessage != null)
			{
				IEnumerator enumerator16 = targetMessage.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						string value4 = (string)enumerator16.Current;
						WriteElementString("targetMessage", "", value4);
					}
				}
			}
			NetInt numberCollected = o.numberCollected;
			if (numberCollected != null)
			{
				IEnumerator enumerator17 = numberCollected.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num7 = (int)enumerator17.Current;
						WriteElementStringRaw("numberCollected", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt number = o.number;
			if (number != null)
			{
				IEnumerator enumerator18 = number.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num8 = (int)enumerator18.Current;
						WriteElementStringRaw("number", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt reward = o.reward;
			if (reward != null)
			{
				IEnumerator enumerator19 = reward.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num9 = (int)enumerator19.Current;
						WriteElementStringRaw("reward", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetInt resource = o.resource;
			if (resource != null)
			{
				IEnumerator enumerator20 = resource.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num10 = (int)enumerator20.Current;
						WriteElementStringRaw("resource", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRef<StardewValley.Object> deliveryItem = o.deliveryItem;
			if (deliveryItem != null)
			{
				IEnumerator enumerator21 = deliveryItem.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator21.Current;
						Write142_Object("deliveryItem", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetDescriptionElementList parts = o.parts;
			if (parts != null)
			{
				WriteStartElement("parts", "", null, writePrefixed: false);
				IEnumerator enumerator22 = parts.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						DescriptionElement o3 = (DescriptionElement)enumerator22.Current;
						Write165_DescriptionElement("DescriptionElement", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementList dialogueparts = o.dialogueparts;
			if (dialogueparts != null)
			{
				WriteStartElement("dialogueparts", "", null, writePrefixed: false);
				IEnumerator enumerator23 = dialogueparts.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						DescriptionElement o4 = (DescriptionElement)enumerator23.Current;
						Write165_DescriptionElement("DescriptionElement", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementRef objective = o.objective;
			if (objective != null)
			{
				IEnumerator enumerator24 = objective.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						DescriptionElement o5 = (DescriptionElement)enumerator24.Current;
						Write165_DescriptionElement("objective", "", o5, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write172_ItemDeliveryQuest(string n, string ns, ItemDeliveryQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ItemDeliveryQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ItemDeliveryQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			WriteElementString("targetMessage", "", o.targetMessage);
			NetString target = o.target;
			if (target != null)
			{
				IEnumerator enumerator15 = target.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("target", "", value3);
					}
				}
			}
			NetInt item = o.item;
			if (item != null)
			{
				IEnumerator enumerator16 = item.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num7 = (int)enumerator16.Current;
						WriteElementStringRaw("item", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt number = o.number;
			if (number != null)
			{
				IEnumerator enumerator17 = number.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num8 = (int)enumerator17.Current;
						WriteElementStringRaw("number", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetRef<StardewValley.Object> deliveryItem = o.deliveryItem;
			if (deliveryItem != null)
			{
				IEnumerator enumerator18 = deliveryItem.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator18.Current;
						Write142_Object("deliveryItem", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetDescriptionElementList parts = o.parts;
			if (parts != null)
			{
				WriteStartElement("parts", "", null, writePrefixed: false);
				IEnumerator enumerator19 = parts.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						DescriptionElement o3 = (DescriptionElement)enumerator19.Current;
						Write165_DescriptionElement("DescriptionElement", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementList dialogueparts = o.dialogueparts;
			if (dialogueparts != null)
			{
				WriteStartElement("dialogueparts", "", null, writePrefixed: false);
				IEnumerator enumerator20 = dialogueparts.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						DescriptionElement o4 = (DescriptionElement)enumerator20.Current;
						Write165_DescriptionElement("DescriptionElement", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementRef objective = o.objective;
			if (objective != null)
			{
				IEnumerator enumerator21 = objective.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						DescriptionElement o5 = (DescriptionElement)enumerator21.Current;
						Write165_DescriptionElement("objective", "", o5, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write173_ItemHarvestQuest(string n, string ns, ItemHarvestQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ItemHarvestQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ItemHarvestQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetInt itemIndex = o.itemIndex;
			if (itemIndex != null)
			{
				IEnumerator enumerator15 = itemIndex.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						int num7 = (int)enumerator15.Current;
						WriteElementStringRaw("itemIndex", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt number = o.number;
			if (number != null)
			{
				IEnumerator enumerator16 = number.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num8 = (int)enumerator16.Current;
						WriteElementStringRaw("number", "", XmlConvert.ToString(num8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write174_CraftingQuest(string n, string ns, CraftingQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CraftingQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CraftingQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetBool isBigCraftable = o.isBigCraftable;
			if (isBigCraftable != null)
			{
				IEnumerator enumerator15 = isBigCraftable.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("isBigCraftable", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetInt indexToCraft = o.indexToCraft;
			if (indexToCraft != null)
			{
				IEnumerator enumerator16 = indexToCraft.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num7 = (int)enumerator16.Current;
						WriteElementStringRaw("indexToCraft", "", XmlConvert.ToString(num7));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write175_FishingQuest(string n, string ns, FishingQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishingQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishingQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetString target = o.target;
			if (target != null)
			{
				IEnumerator enumerator15 = target.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("target", "", value3);
					}
				}
			}
			WriteElementString("targetMessage", "", o.targetMessage);
			NetInt numberToFish = o.numberToFish;
			if (numberToFish != null)
			{
				IEnumerator enumerator16 = numberToFish.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num7 = (int)enumerator16.Current;
						WriteElementStringRaw("numberToFish", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt reward = o.reward;
			if (reward != null)
			{
				IEnumerator enumerator17 = reward.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num8 = (int)enumerator17.Current;
						WriteElementStringRaw("reward", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt numberFished = o.numberFished;
			if (numberFished != null)
			{
				IEnumerator enumerator18 = numberFished.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("numberFished", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetInt whichFish = o.whichFish;
			if (whichFish != null)
			{
				IEnumerator enumerator19 = whichFish.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num10 = (int)enumerator19.Current;
						WriteElementStringRaw("whichFish", "", XmlConvert.ToString(num10));
					}
				}
			}
			NetRef<StardewValley.Object> fish = o.fish;
			if (fish != null)
			{
				IEnumerator enumerator20 = fish.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						StardewValley.Object o2 = (StardewValley.Object)enumerator20.Current;
						Write142_Object("fish", "", o2, isNullable: false, needType: false);
					}
				}
			}
			NetDescriptionElementList parts = o.parts;
			if (parts != null)
			{
				WriteStartElement("parts", "", null, writePrefixed: false);
				IEnumerator enumerator21 = parts.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						DescriptionElement o3 = (DescriptionElement)enumerator21.Current;
						Write165_DescriptionElement("DescriptionElement", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementList dialogueparts = o.dialogueparts;
			if (dialogueparts != null)
			{
				WriteStartElement("dialogueparts", "", null, writePrefixed: false);
				IEnumerator enumerator22 = dialogueparts.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						DescriptionElement o4 = (DescriptionElement)enumerator22.Current;
						Write165_DescriptionElement("DescriptionElement", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetDescriptionElementRef objective = o.objective;
			if (objective != null)
			{
				IEnumerator enumerator23 = objective.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						DescriptionElement o5 = (DescriptionElement)enumerator23.Current;
						Write165_DescriptionElement("objective", "", o5, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write176_GoSomewhereQuest(string n, string ns, GoSomewhereQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(GoSomewhereQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("GoSomewhereQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetString whereToGo = o.whereToGo;
			if (whereToGo != null)
			{
				IEnumerator enumerator15 = whereToGo.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("whereToGo", "", value3);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write177_LostItemQuest(string n, string ns, LostItemQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LostItemQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LostItemQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetString npcName = o.npcName;
			if (npcName != null)
			{
				IEnumerator enumerator15 = npcName.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("npcName", "", value3);
					}
				}
			}
			NetString locationOfItem = o.locationOfItem;
			if (locationOfItem != null)
			{
				IEnumerator enumerator16 = locationOfItem.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						string value4 = (string)enumerator16.Current;
						WriteElementString("locationOfItem", "", value4);
					}
				}
			}
			NetInt itemIndex = o.itemIndex;
			if (itemIndex != null)
			{
				IEnumerator enumerator17 = itemIndex.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num7 = (int)enumerator17.Current;
						WriteElementStringRaw("itemIndex", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt tileX = o.tileX;
			if (tileX != null)
			{
				IEnumerator enumerator18 = tileX.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num8 = (int)enumerator18.Current;
						WriteElementStringRaw("tileX", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt tileY = o.tileY;
			if (tileY != null)
			{
				IEnumerator enumerator19 = tileY.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						int num9 = (int)enumerator19.Current;
						WriteElementStringRaw("tileY", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool itemFound = o.itemFound;
			if (itemFound != null)
			{
				IEnumerator enumerator20 = itemFound.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag7 = (bool)enumerator20.Current;
						WriteElementStringRaw("itemFound", "", XmlConvert.ToString(flag7));
					}
				}
			}
			NetDescriptionElementRef objective = o.objective;
			if (objective != null)
			{
				IEnumerator enumerator21 = objective.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						DescriptionElement o2 = (DescriptionElement)enumerator21.Current;
						Write165_DescriptionElement("objective", "", o2, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write178_SecretLostItemQuest(string n, string ns, SecretLostItemQuest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SecretLostItemQuest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SecretLostItemQuest", "");
			}
			WriteElementString("_currentObjective", "", o._currentObjective);
			WriteElementString("_questDescription", "", o._questDescription);
			WriteElementString("_questTitle", "", o._questTitle);
			NetString rewardDescription = o.rewardDescription;
			if (rewardDescription != null)
			{
				IEnumerator enumerator = rewardDescription.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("rewardDescription", "", value);
					}
				}
			}
			NetString completionString = o.completionString;
			if (completionString != null)
			{
				IEnumerator enumerator2 = completionString.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						string value2 = (string)enumerator2.Current;
						WriteElementString("completionString", "", value2);
					}
				}
			}
			NetBool accepted = o.accepted;
			if (accepted != null)
			{
				IEnumerator enumerator3 = accepted.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						bool flag = (bool)enumerator3.Current;
						WriteElementStringRaw("accepted", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator4 = completed.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						bool flag2 = (bool)enumerator4.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool dailyQuest = o.dailyQuest;
			if (dailyQuest != null)
			{
				IEnumerator enumerator5 = dailyQuest.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag3 = (bool)enumerator5.Current;
						WriteElementStringRaw("dailyQuest", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool showNew = o.showNew;
			if (showNew != null)
			{
				IEnumerator enumerator6 = showNew.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag4 = (bool)enumerator6.Current;
						WriteElementStringRaw("showNew", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool canBeCancelled = o.canBeCancelled;
			if (canBeCancelled != null)
			{
				IEnumerator enumerator7 = canBeCancelled.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag5 = (bool)enumerator7.Current;
						WriteElementStringRaw("canBeCancelled", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool destroy = o.destroy;
			if (destroy != null)
			{
				IEnumerator enumerator8 = destroy.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						bool flag6 = (bool)enumerator8.Current;
						WriteElementStringRaw("destroy", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetInt id = o.id;
			if (id != null)
			{
				IEnumerator enumerator9 = id.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						int num = (int)enumerator9.Current;
						WriteElementStringRaw("id", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt moneyReward = o.moneyReward;
			if (moneyReward != null)
			{
				IEnumerator enumerator10 = moneyReward.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						int num2 = (int)enumerator10.Current;
						WriteElementStringRaw("moneyReward", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetInt questType = o.questType;
			if (questType != null)
			{
				IEnumerator enumerator11 = questType.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num3 = (int)enumerator11.Current;
						WriteElementStringRaw("questType", "", XmlConvert.ToString(num3));
					}
				}
			}
			NetInt daysLeft = o.daysLeft;
			if (daysLeft != null)
			{
				IEnumerator enumerator12 = daysLeft.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num4 = (int)enumerator12.Current;
						WriteElementStringRaw("daysLeft", "", XmlConvert.ToString(num4));
					}
				}
			}
			NetInt dayQuestAccepted = o.dayQuestAccepted;
			if (dayQuestAccepted != null)
			{
				IEnumerator enumerator13 = dayQuestAccepted.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						int num5 = (int)enumerator13.Current;
						WriteElementStringRaw("dayQuestAccepted", "", XmlConvert.ToString(num5));
					}
				}
			}
			NetIntList nextQuests = o.nextQuests;
			if (nextQuests != null)
			{
				WriteStartElement("nextQuests", "", null, writePrefixed: false);
				IEnumerator enumerator14 = nextQuests.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						int num6 = (int)enumerator14.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			WriteElementString("questTitle", "", o.questTitle);
			NetString npcName = o.npcName;
			if (npcName != null)
			{
				IEnumerator enumerator15 = npcName.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						string value3 = (string)enumerator15.Current;
						WriteElementString("npcName", "", value3);
					}
				}
			}
			NetInt friendshipReward = o.friendshipReward;
			if (friendshipReward != null)
			{
				IEnumerator enumerator16 = friendshipReward.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num7 = (int)enumerator16.Current;
						WriteElementStringRaw("friendshipReward", "", XmlConvert.ToString(num7));
					}
				}
			}
			NetInt exclusiveQuestId = o.exclusiveQuestId;
			if (exclusiveQuestId != null)
			{
				IEnumerator enumerator17 = exclusiveQuestId.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						int num8 = (int)enumerator17.Current;
						WriteElementStringRaw("exclusiveQuestId", "", XmlConvert.ToString(num8));
					}
				}
			}
			NetInt itemIndex = o.itemIndex;
			if (itemIndex != null)
			{
				IEnumerator enumerator18 = itemIndex.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						int num9 = (int)enumerator18.Current;
						WriteElementStringRaw("itemIndex", "", XmlConvert.ToString(num9));
					}
				}
			}
			NetBool itemFound = o.itemFound;
			if (itemFound != null)
			{
				IEnumerator enumerator19 = itemFound.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						bool flag7 = (bool)enumerator19.Current;
						WriteElementStringRaw("itemFound", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write184_MovieInvitation(string n, string ns, MovieInvitation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MovieInvitation)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MovieInvitation", "");
			}
			Write183_Farmer("farmer", "", o.farmer, isNullable: false, needType: false);
			Write168_NPC("invitedNPC", "", o.invitedNPC, isNullable: false, needType: false);
			WriteElementStringRaw("fulfilled", "", XmlConvert.ToString(o.fulfilled));
			WriteEndElement(o);
		}

		private void Write185_StartMovieEvent(string n, string ns, StartMovieEvent o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(StartMovieEvent)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("StartMovieEvent", "");
			}
			WriteElementStringRaw("uid", "", XmlConvert.ToString(o.uid));
			List<List<Character>> playerGroups = o.playerGroups;
			if (playerGroups != null)
			{
				WriteStartElement("playerGroups", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)playerGroups).Count; i++)
				{
					List<Character> list = playerGroups[i];
					if (list == null)
					{
						WriteNullTagLiteral("ArrayOfCharacter", "");
						continue;
					}
					WriteStartElement("ArrayOfCharacter", "", null, writePrefixed: false);
					for (int j = 0; j < ((ICollection)list).Count; j++)
					{
						Write164_Character("Character", "", list[j], isNullable: true, needType: false);
					}
					WriteEndElement();
				}
				WriteEndElement();
			}
			List<List<Character>> npcGroups = o.npcGroups;
			if (npcGroups != null)
			{
				WriteStartElement("npcGroups", "", null, writePrefixed: false);
				for (int k = 0; k < ((ICollection)npcGroups).Count; k++)
				{
					List<Character> list2 = npcGroups[k];
					if (list2 == null)
					{
						WriteNullTagLiteral("ArrayOfCharacter", "");
						continue;
					}
					WriteStartElement("ArrayOfCharacter", "", null, writePrefixed: false);
					for (int l = 0; l < ((ICollection)list2).Count; l++)
					{
						Write164_Character("Character", "", list2[l], isNullable: true, needType: false);
					}
					WriteEndElement();
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write186_MovieViewerLockEvent(string n, string ns, MovieViewerLockEvent o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MovieViewerLockEvent)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MovieViewerLockEvent", "");
			}
			List<long> uids = o.uids;
			if (uids != null)
			{
				WriteStartElement("uids", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)uids).Count; i++)
				{
					WriteElementStringRaw("long", "", XmlConvert.ToString(uids[i]));
				}
				WriteEndElement();
			}
			WriteElementStringRaw("movieStartTime", "", XmlConvert.ToString(o.movieStartTime));
			WriteEndElement(o);
		}

		private void Write187_WorldDate(string n, string ns, WorldDate o, bool isNullable, bool needType)
		{
			if ((object)o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WorldDate)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WorldDate", "");
			}
			WriteElementStringRaw("Year", "", XmlConvert.ToString(o.Year));
			WriteElementStringRaw("DayOfMonth", "", XmlConvert.ToString(o.DayOfMonth));
			WriteElementString("Season", "", o.Season);
			WriteElementStringRaw("TotalDays", "", XmlConvert.ToString(o.TotalDays));
			WriteEndElement(o);
		}

		private void Write189_Friendship(string n, string ns, Friendship o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Friendship)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Friendship", "");
			}
			WriteElementStringRaw("Points", "", XmlConvert.ToString(o.Points));
			WriteElementStringRaw("GiftsThisWeek", "", XmlConvert.ToString(o.GiftsThisWeek));
			WriteElementStringRaw("GiftsToday", "", XmlConvert.ToString(o.GiftsToday));
			Write187_WorldDate("LastGiftDate", "", o.LastGiftDate, isNullable: false, needType: false);
			WriteElementStringRaw("TalkedToToday", "", XmlConvert.ToString(o.TalkedToToday));
			WriteElementStringRaw("ProposalRejected", "", XmlConvert.ToString(o.ProposalRejected));
			Write187_WorldDate("WeddingDate", "", o.WeddingDate, isNullable: false, needType: false);
			Write187_WorldDate("NextBirthingDate", "", o.NextBirthingDate, isNullable: false, needType: false);
			WriteElementString("Status", "", Write188_FriendshipStatus(o.Status));
			WriteElementStringRaw("Proposer", "", XmlConvert.ToString(o.Proposer));
			WriteElementStringRaw("RoommateMarriage", "", XmlConvert.ToString(o.RoommateMarriage));
			WriteEndElement(o);
		}

		private void Write217_FarmHouse(string n, string ns, FarmHouse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FarmHouse)))
				{
					if (type == typeof(Cabin))
					{
						Write218_Cabin(n, ns, (Cabin)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FarmHouse", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			DecorationFacade wallPaper = o.wallPaper;
			if (wallPaper != null)
			{
				WriteStartElement("wallPaper", "", null, writePrefixed: false);
				IEnumerator enumerator20 = wallPaper.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedWallpaper = o.appliedWallpaper;
			if (appliedWallpaper != null)
			{
				WriteStartElement("appliedWallpaper", "", null, writePrefixed: false);
				IEnumerator enumerator21 = appliedWallpaper.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						SerializableDictionary<string, string> serializable4 = (SerializableDictionary<string, string>)enumerator21.Current;
						WriteSerializable(serializable4, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			DecorationFacade floor = o.floor;
			if (floor != null)
			{
				WriteStartElement("floor", "", null, writePrefixed: false);
				IEnumerator enumerator22 = floor.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						int num3 = (int)enumerator22.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedFloor = o.appliedFloor;
			if (appliedFloor != null)
			{
				WriteStartElement("appliedFloor", "", null, writePrefixed: false);
				IEnumerator enumerator23 = appliedFloor.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						SerializableDictionary<string, string> serializable5 = (SerializableDictionary<string, string>)enumerator23.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("farmerNumberOfOwner", "", XmlConvert.ToString(o.farmerNumberOfOwner));
			NetBool fireplaceOn = o.fireplaceOn;
			if (fireplaceOn != null)
			{
				IEnumerator enumerator24 = fireplaceOn.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag8 = (bool)enumerator24.Current;
						WriteElementStringRaw("fireplaceOn", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetRef<Chest> fridge = o.fridge;
			if (fridge != null)
			{
				IEnumerator enumerator25 = fridge.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						Chest o7 = (Chest)enumerator25.Current;
						Write114_Chest("fridge", "", o7, isNullable: false, needType: false);
					}
				}
			}
			Write42_Point("fridgePosition", "", o.fridgePosition, needType: false);
			List<Warp> cellarWarps = o.cellarWarps;
			if (cellarWarps != null)
			{
				WriteStartElement("cellarWarps", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)cellarWarps).Count; i++)
				{
					Write216_Warp("Warp", "", cellarWarps[i], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			NetInt cribStyle = o.cribStyle;
			if (cribStyle != null)
			{
				IEnumerator enumerator26 = cribStyle.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						int num4 = (int)enumerator26.Current;
						WriteElementStringRaw("cribStyle", "", XmlConvert.ToString(num4));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write253_IslandFarmHouse(string n, string ns, IslandFarmHouse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandFarmHouse)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandFarmHouse", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			DecorationFacade wallPaper = o.wallPaper;
			if (wallPaper != null)
			{
				WriteStartElement("wallPaper", "", null, writePrefixed: false);
				IEnumerator enumerator20 = wallPaper.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedWallpaper = o.appliedWallpaper;
			if (appliedWallpaper != null)
			{
				WriteStartElement("appliedWallpaper", "", null, writePrefixed: false);
				IEnumerator enumerator21 = appliedWallpaper.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						SerializableDictionary<string, string> serializable4 = (SerializableDictionary<string, string>)enumerator21.Current;
						WriteSerializable(serializable4, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			DecorationFacade floor = o.floor;
			if (floor != null)
			{
				WriteStartElement("floor", "", null, writePrefixed: false);
				IEnumerator enumerator22 = floor.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						int num3 = (int)enumerator22.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedFloor = o.appliedFloor;
			if (appliedFloor != null)
			{
				WriteStartElement("appliedFloor", "", null, writePrefixed: false);
				IEnumerator enumerator23 = appliedFloor.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						SerializableDictionary<string, string> serializable5 = (SerializableDictionary<string, string>)enumerator23.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			NetRef<Chest> fridge = o.fridge;
			if (fridge != null)
			{
				IEnumerator enumerator24 = fridge.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						Chest o7 = (Chest)enumerator24.Current;
						Write114_Chest("fridge", "", o7, isNullable: false, needType: false);
					}
				}
			}
			Write42_Point("fridgePosition", "", o.fridgePosition, needType: false);
			NetBool visited = o.visited;
			if (visited != null)
			{
				WriteStartElement("visited", "", null, writePrefixed: false);
				IEnumerator enumerator25 = visited.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag8 = (bool)enumerator25.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write204_DecoratableLocation(string n, string ns, DecoratableLocation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DecoratableLocation)))
				{
					if (type == typeof(IslandFarmHouse))
					{
						Write253_IslandFarmHouse(n, ns, (IslandFarmHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FarmHouse))
					{
						Write217_FarmHouse(n, ns, (FarmHouse)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Cabin))
					{
						Write218_Cabin(n, ns, (Cabin)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(Shed))
					{
						Write205_Shed(n, ns, (Shed)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DecoratableLocation", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			DecorationFacade wallPaper = o.wallPaper;
			if (wallPaper != null)
			{
				WriteStartElement("wallPaper", "", null, writePrefixed: false);
				IEnumerator enumerator20 = wallPaper.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedWallpaper = o.appliedWallpaper;
			if (appliedWallpaper != null)
			{
				WriteStartElement("appliedWallpaper", "", null, writePrefixed: false);
				IEnumerator enumerator21 = appliedWallpaper.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						SerializableDictionary<string, string> serializable4 = (SerializableDictionary<string, string>)enumerator21.Current;
						WriteSerializable(serializable4, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			DecorationFacade floor = o.floor;
			if (floor != null)
			{
				WriteStartElement("floor", "", null, writePrefixed: false);
				IEnumerator enumerator22 = floor.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						int num3 = (int)enumerator22.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetStringDictionary<string, NetString> appliedFloor = o.appliedFloor;
			if (appliedFloor != null)
			{
				WriteStartElement("appliedFloor", "", null, writePrefixed: false);
				IEnumerator enumerator23 = appliedFloor.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						SerializableDictionary<string, string> serializable5 = (SerializableDictionary<string, string>)enumerator23.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfStringString", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write206_LibraryMuseum(string n, string ns, LibraryMuseum o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LibraryMuseum)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LibraryMuseum", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetVector2Dictionary<int, NetInt> museumPieces = o.museumPieces;
			if (museumPieces != null)
			{
				IEnumerator enumerator20 = museumPieces.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						SerializableDictionary<Vector2, int> serializable4 = (SerializableDictionary<Vector2, int>)enumerator20.Current;
						WriteSerializable(serializable4, "museumPieces", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write207_AdventureGuild(string n, string ns, AdventureGuild o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AdventureGuild)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AdventureGuild", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write208_Woods(string n, string ns, Woods o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Woods)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Woods", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetObjectList<ResourceClump> stumps = o.stumps;
			if (stumps != null)
			{
				WriteStartElement("stumps", "", null, writePrefixed: false);
				IEnumerator enumerator20 = stumps.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						ResourceClump o7 = (ResourceClump)enumerator20.Current;
						Write132_ResourceClump("ResourceClump", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetBool hasUnlockedStatue = o.hasUnlockedStatue;
			if (hasUnlockedStatue != null)
			{
				IEnumerator enumerator21 = hasUnlockedStatue.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("hasUnlockedStatue", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write209_Railroad(string n, string ns, Railroad o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Railroad)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Railroad", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetBool witchStatueGone = o.witchStatueGone;
			if (witchStatueGone != null)
			{
				IEnumerator enumerator20 = witchStatueGone.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag8 = (bool)enumerator20.Current;
						WriteElementStringRaw("witchStatueGone", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write210_Summit(string n, string ns, Summit o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Summit)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Summit", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write211_Forest(string n, string ns, Forest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Forest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Forest", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<ResourceClump> netLog = o.netLog;
			if (netLog != null)
			{
				IEnumerator enumerator20 = netLog.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						ResourceClump o7 = (ResourceClump)enumerator20.Current;
						Write132_ResourceClump("log", "", o7, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write213_SeedShop(string n, string ns, SeedShop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SeedShop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SeedShop", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetObjectList<Item> itemsFromPlayerToSell = o.itemsFromPlayerToSell;
			if (itemsFromPlayerToSell != null)
			{
				WriteStartElement("itemsFromPlayerToSell", "", null, writePrefixed: false);
				IEnumerator enumerator20 = itemsFromPlayerToSell.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Item o7 = (Item)enumerator20.Current;
						Write143_Item("Item", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetObjectList<Item> itemsToStartSellingTomorrow = o.itemsToStartSellingTomorrow;
			if (itemsToStartSellingTomorrow != null)
			{
				WriteStartElement("itemsToStartSellingTomorrow", "", null, writePrefixed: false);
				IEnumerator enumerator21 = itemsToStartSellingTomorrow.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						Item o8 = (Item)enumerator21.Current;
						Write143_Item("Item", "", o8, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write214_FishShop(string n, string ns, FishShop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FishShop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FishShop", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetObjectList<Item> itemsFromPlayerToSell = o.itemsFromPlayerToSell;
			if (itemsFromPlayerToSell != null)
			{
				WriteStartElement("itemsFromPlayerToSell", "", null, writePrefixed: false);
				IEnumerator enumerator20 = itemsFromPlayerToSell.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Item o7 = (Item)enumerator20.Current;
						Write143_Item("Item", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetObjectList<Item> itemsToStartSellingTomorrow = o.itemsToStartSellingTomorrow;
			if (itemsToStartSellingTomorrow != null)
			{
				WriteStartElement("itemsToStartSellingTomorrow", "", null, writePrefixed: false);
				IEnumerator enumerator21 = itemsToStartSellingTomorrow.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						Item o8 = (Item)enumerator21.Current;
						Write143_Item("Item", "", o8, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write212_ShopLocation(string n, string ns, ShopLocation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShopLocation)))
				{
					if (type == typeof(FishShop))
					{
						Write214_FishShop(n, ns, (FishShop)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(SeedShop))
					{
						Write213_SeedShop(n, ns, (SeedShop)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShopLocation", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetObjectList<Item> itemsFromPlayerToSell = o.itemsFromPlayerToSell;
			if (itemsFromPlayerToSell != null)
			{
				WriteStartElement("itemsFromPlayerToSell", "", null, writePrefixed: false);
				IEnumerator enumerator20 = itemsFromPlayerToSell.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						Item o7 = (Item)enumerator20.Current;
						Write143_Item("Item", "", o7, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetObjectList<Item> itemsToStartSellingTomorrow = o.itemsToStartSellingTomorrow;
			if (itemsToStartSellingTomorrow != null)
			{
				WriteStartElement("itemsToStartSellingTomorrow", "", null, writePrefixed: false);
				IEnumerator enumerator21 = itemsToStartSellingTomorrow.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						Item o8 = (Item)enumerator21.Current;
						Write143_Item("Item", "", o8, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write215_BathHousePool(string n, string ns, BathHousePool o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BathHousePool)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BathHousePool", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write219_Club(string n, string ns, Club o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Club)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Club", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write220_BusStop(string n, string ns, BusStop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BusStop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BusStop", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("drivingOff", "", XmlConvert.ToString(o.drivingOff));
			WriteElementStringRaw("drivingBack", "", XmlConvert.ToString(o.drivingBack));
			WriteElementStringRaw("leaving", "", XmlConvert.ToString(o.leaving));
			WriteEndElement(o);
		}

		private void Write221_CommunityCenter(string n, string ns, CommunityCenter o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CommunityCenter)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CommunityCenter", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetArray<bool, NetBool> areasComplete = o.areasComplete;
			if (areasComplete != null)
			{
				WriteStartElement("areasComplete", "", null, writePrefixed: false);
				IEnumerator enumerator20 = areasComplete.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag8 = (bool)enumerator20.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetInt numberOfStarsOnPlaque = o.numberOfStarsOnPlaque;
			if (numberOfStarsOnPlaque != null)
			{
				IEnumerator enumerator21 = numberOfStarsOnPlaque.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						int num2 = (int)enumerator21.Current;
						WriteElementStringRaw("numberOfStarsOnPlaque", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetBundles bundles = o.bundles;
			if (bundles != null)
			{
				IEnumerator enumerator22 = bundles.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						SerializableDictionary<int, bool[]> serializable4 = (SerializableDictionary<int, bool[]>)enumerator22.Current;
						WriteSerializable(serializable4, "bundles", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetIntDictionary<bool, NetBool> bundleRewards = o.bundleRewards;
			if (bundleRewards != null)
			{
				IEnumerator enumerator23 = bundleRewards.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						SerializableDictionary<int, bool> serializable5 = (SerializableDictionary<int, bool>)enumerator23.Current;
						WriteSerializable(serializable5, "bundleRewards", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write222_Desert(string n, string ns, Desert o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Desert)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Desert", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("drivingOff", "", XmlConvert.ToString(o.drivingOff));
			WriteElementStringRaw("drivingBack", "", XmlConvert.ToString(o.drivingBack));
			WriteElementStringRaw("leaving", "", XmlConvert.ToString(o.leaving));
			WriteEndElement(o);
		}

		private void Write223_FarmCave(string n, string ns, FarmCave o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FarmCave)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FarmCave", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write224_JojaMart(string n, string ns, JojaMart o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(JojaMart)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("JojaMart", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write225_MineShaft(string n, string ns, MineShaft o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MineShaft)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MineShaft", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString mapImageSource = o.mapImageSource;
			if (mapImageSource != null)
			{
				WriteStartElement("mapImageSource", "", null, writePrefixed: false);
				IEnumerator enumerator20 = mapImageSource.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						string value4 = (string)enumerator20.Current;
						WriteNullableStringLiteral("string", "", value4);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("mineLevel", "", XmlConvert.ToString(o.mineLevel));
			WriteEndElement(o);
		}

		private void Write226_Mountain(string n, string ns, Mountain o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Mountain)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Mountain", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write227_Sewer(string n, string ns, Sewer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Sewer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Sewer", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write228_WizardHouse(string n, string ns, WizardHouse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WizardHouse)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WizardHouse", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write229_Town(string n, string ns, Town o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Town)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Town", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt daysUntilCommunityUpgrade = o.daysUntilCommunityUpgrade;
			if (daysUntilCommunityUpgrade != null)
			{
				IEnumerator enumerator20 = daysUntilCommunityUpgrade.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("daysUntilCommunityUpgrade", "", XmlConvert.ToString(num2));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write230_Cellar(string n, string ns, Cellar o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Cellar)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Cellar", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetLong ownerUID = o.ownerUID;
			if (ownerUID != null)
			{
				WriteStartElement("ownerUID", "", null, writePrefixed: false);
				IEnumerator enumerator20 = ownerUID.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						long num2 = (long)enumerator20.Current;
						WriteElementStringRaw("long", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write231_Submarine(string n, string ns, Submarine o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Submarine)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Submarine", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetBool submerged = o.submerged;
			if (submerged != null)
			{
				IEnumerator enumerator20 = submerged.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						bool flag8 = (bool)enumerator20.Current;
						WriteElementStringRaw("submerged", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool ascending = o.ascending;
			if (ascending != null)
			{
				IEnumerator enumerator21 = ascending.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag9 = (bool)enumerator21.Current;
						WriteElementStringRaw("ascending", "", XmlConvert.ToString(flag9));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write232_MermaidHouse(string n, string ns, MermaidHouse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MermaidHouse)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MermaidHouse", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write233_BeachNightMarket(string n, string ns, BeachNightMarket o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BeachNightMarket)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BeachNightMarket", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write234_MovieTheater(string n, string ns, MovieTheater o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MovieTheater)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MovieTheater", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt dayFirstEntered = o.dayFirstEntered;
			if (dayFirstEntered != null)
			{
				IEnumerator enumerator20 = dayFirstEntered.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						int num2 = (int)enumerator20.Current;
						WriteElementStringRaw("dayFirstEntered", "", XmlConvert.ToString(num2));
					}
				}
			}
			WriteElementStringRaw("nextRepathTime", "", XmlConvert.ToString(o.nextRepathTime));
			WriteElementStringRaw("repathTimeInterval", "", XmlConvert.ToString(o.repathTimeInterval));
			WriteEndElement(o);
		}

		private void Write235_ManorHouse(string n, string ns, ManorHouse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ManorHouse)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ManorHouse", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write236_AbandonedJojaMart(string n, string ns, AbandonedJojaMart o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AbandonedJojaMart)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AbandonedJojaMart", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write237_Mine(string n, string ns, Mine o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Mine)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Mine", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write239_BoatTunnel(string n, string ns, BoatTunnel o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BoatTunnel)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BoatTunnel", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			Write51_Rectangle("gateRect", "", o.gateRect, needType: false);
			WriteElementStringRaw("_plankPosition", "", XmlConvert.ToString(o._plankPosition));
			WriteElementStringRaw("_plankDirection", "", XmlConvert.ToString(o._plankDirection));
			WriteElementString("animationState", "", Write238_TunnelAnimationState(o.animationState));
			WriteEndElement(o);
		}

		private void Write242_IslandWest(string n, string ns, IslandWest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandWest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandWest", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetRef<SandDuggy> sandDuggy = o.sandDuggy;
			if (sandDuggy != null)
			{
				IEnumerator enumerator21 = sandDuggy.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						SandDuggy o8 = (SandDuggy)enumerator21.Current;
						Write241_SandDuggy("sandDuggy", "", o8, isNullable: false, needType: false);
					}
				}
			}
			NetBool farmhouseRestored = o.farmhouseRestored;
			if (farmhouseRestored != null)
			{
				IEnumerator enumerator22 = farmhouseRestored.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag8 = (bool)enumerator22.Current;
						WriteElementStringRaw("farmhouseRestored", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool farmhouseMailbox = o.farmhouseMailbox;
			if (farmhouseMailbox != null)
			{
				IEnumerator enumerator23 = farmhouseMailbox.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag9 = (bool)enumerator23.Current;
						WriteElementStringRaw("farmhouseMailbox", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool farmObelisk = o.farmObelisk;
			if (farmObelisk != null)
			{
				IEnumerator enumerator24 = farmObelisk.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag10 = (bool)enumerator24.Current;
						WriteElementStringRaw("farmObelisk", "", XmlConvert.ToString(flag10));
					}
				}
			}
			Write42_Point("shippingBinPosition", "", o.shippingBinPosition, needType: false);
			WriteEndElement(o);
		}

		private void Write244_IslandEast(string n, string ns, IslandEast o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandEast)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandEast", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool bananaShrineComplete = o.bananaShrineComplete;
			if (bananaShrineComplete != null)
			{
				WriteStartElement("bananaShrineComplete", "", null, writePrefixed: false);
				IEnumerator enumerator21 = bananaShrineComplete.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool bananaShrineNutAwarded = o.bananaShrineNutAwarded;
			if (bananaShrineNutAwarded != null)
			{
				WriteStartElement("bananaShrineNutAwarded", "", null, writePrefixed: false);
				IEnumerator enumerator22 = bananaShrineNutAwarded.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag9));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write255_IslandShrine(string n, string ns, IslandShrine o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandShrine)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandShrine", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool puzzleFinished = o.puzzleFinished;
			if (puzzleFinished != null)
			{
				IEnumerator enumerator21 = puzzleFinished.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("puzzleFinished", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write243_IslandForestLocation(string n, string ns, IslandForestLocation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandForestLocation)))
				{
					if (type == typeof(IslandShrine))
					{
						Write255_IslandShrine(n, ns, (IslandShrine)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandEast))
					{
						Write244_IslandEast(n, ns, (IslandEast)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandForestLocation", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write245_IslandSouth(string n, string ns, IslandSouth o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandSouth)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandSouth", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool shouldToggleResort = o.shouldToggleResort;
			if (shouldToggleResort != null)
			{
				IEnumerator enumerator21 = shouldToggleResort.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("shouldToggleResort", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool resortOpenToday = o.resortOpenToday;
			if (resortOpenToday != null)
			{
				IEnumerator enumerator22 = resortOpenToday.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("resortOpenToday", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool resortRestored = o.resortRestored;
			if (resortRestored != null)
			{
				IEnumerator enumerator23 = resortRestored.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("resortRestored", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool westernTurtleMoved = o.westernTurtleMoved;
			if (westernTurtleMoved != null)
			{
				IEnumerator enumerator24 = westernTurtleMoved.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("westernTurtleMoved", "", XmlConvert.ToString(flag11));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write246_IslandNorth(string n, string ns, IslandNorth o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandNorth)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandNorth", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool bridgeFixed = o.bridgeFixed;
			if (bridgeFixed != null)
			{
				IEnumerator enumerator21 = bridgeFixed.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("bridgeFixed", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool traderActivated = o.traderActivated;
			if (traderActivated != null)
			{
				IEnumerator enumerator22 = traderActivated.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("traderActivated", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool boulderRemoved = o.boulderRemoved;
			if (boulderRemoved != null)
			{
				IEnumerator enumerator23 = boulderRemoved.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag10 = (bool)enumerator23.Current;
						WriteElementStringRaw("boulderRemoved", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool caveOpened = o.caveOpened;
			if (caveOpened != null)
			{
				IEnumerator enumerator24 = caveOpened.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag11 = (bool)enumerator24.Current;
						WriteElementStringRaw("caveOpened", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool treeNutShot = o.treeNutShot;
			if (treeNutShot != null)
			{
				IEnumerator enumerator25 = treeNutShot.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag12 = (bool)enumerator25.Current;
						WriteElementStringRaw("treeNutShot", "", XmlConvert.ToString(flag12));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write247_IslandSouthEast(string n, string ns, IslandSouthEast o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandSouthEast)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandSouthEast", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool mermaidPuzzleFinished = o.mermaidPuzzleFinished;
			if (mermaidPuzzleFinished != null)
			{
				IEnumerator enumerator21 = mermaidPuzzleFinished.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("mermaidPuzzleFinished", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool fishedWalnut = o.fishedWalnut;
			if (fishedWalnut != null)
			{
				IEnumerator enumerator22 = fishedWalnut.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("fishedWalnut", "", XmlConvert.ToString(flag9));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write248_IslandSouthEastCave(string n, string ns, IslandSouthEastCave o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandSouthEastCave)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandSouthEastCave", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetLongList drinksClaimed = o.drinksClaimed;
			if (drinksClaimed != null)
			{
				WriteStartElement("drinksClaimed", "", null, writePrefixed: false);
				IEnumerator enumerator21 = drinksClaimed.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						long num2 = (long)enumerator21.Current;
						WriteElementStringRaw("long", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write249_IslandFarmCave(string n, string ns, IslandFarmCave o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandFarmCave)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandFarmCave", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetInt gourmandRequestsFulfilled = o.gourmandRequestsFulfilled;
			if (gourmandRequestsFulfilled != null)
			{
				IEnumerator enumerator21 = gourmandRequestsFulfilled.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						int num2 = (int)enumerator21.Current;
						WriteElementStringRaw("gourmandRequestsFulfilled", "", XmlConvert.ToString(num2));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write250_IslandWestCave1(string n, string ns, IslandWestCave1 o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandWestCave1)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandWestCave1", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool completed = o.completed;
			if (completed != null)
			{
				IEnumerator enumerator21 = completed.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("completed", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write251_IslandFieldOffice(string n, string ns, IslandFieldOffice o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandFieldOffice)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandFieldOffice", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetList<Item, NetRef<Item>> uncollectedRewards = o.uncollectedRewards;
			if (uncollectedRewards != null)
			{
				IEnumerator enumerator21 = uncollectedRewards.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						Item o8 = (Item)enumerator21.Current;
						Write143_Item("uncollectedRewards", "", o8, isNullable: false, needType: false);
					}
				}
			}
			NetList<bool, NetBool> piecesDonated = o.piecesDonated;
			if (piecesDonated != null)
			{
				IEnumerator enumerator22 = piecesDonated.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag8 = (bool)enumerator22.Current;
						WriteElementStringRaw("piecesDonated", "", XmlConvert.ToString(flag8));
					}
				}
			}
			NetBool centerSkeletonRestored = o.centerSkeletonRestored;
			if (centerSkeletonRestored != null)
			{
				IEnumerator enumerator23 = centerSkeletonRestored.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						bool flag9 = (bool)enumerator23.Current;
						WriteElementStringRaw("centerSkeletonRestored", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetBool snakeRestored = o.snakeRestored;
			if (snakeRestored != null)
			{
				IEnumerator enumerator24 = snakeRestored.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						bool flag10 = (bool)enumerator24.Current;
						WriteElementStringRaw("snakeRestored", "", XmlConvert.ToString(flag10));
					}
				}
			}
			NetBool batRestored = o.batRestored;
			if (batRestored != null)
			{
				IEnumerator enumerator25 = batRestored.GetEnumerator();
				if (enumerator25 != null)
				{
					while (enumerator25.MoveNext())
					{
						bool flag11 = (bool)enumerator25.Current;
						WriteElementStringRaw("batRestored", "", XmlConvert.ToString(flag11));
					}
				}
			}
			NetBool frogRestored = o.frogRestored;
			if (frogRestored != null)
			{
				IEnumerator enumerator26 = frogRestored.GetEnumerator();
				if (enumerator26 != null)
				{
					while (enumerator26.MoveNext())
					{
						bool flag12 = (bool)enumerator26.Current;
						WriteElementStringRaw("frogRestored", "", XmlConvert.ToString(flag12));
					}
				}
			}
			NetBool plantsRestoredLeft = o.plantsRestoredLeft;
			if (plantsRestoredLeft != null)
			{
				IEnumerator enumerator27 = plantsRestoredLeft.GetEnumerator();
				if (enumerator27 != null)
				{
					while (enumerator27.MoveNext())
					{
						bool flag13 = (bool)enumerator27.Current;
						WriteElementStringRaw("plantsRestoredLeft", "", XmlConvert.ToString(flag13));
					}
				}
			}
			NetBool plantsRestoredRight = o.plantsRestoredRight;
			if (plantsRestoredRight != null)
			{
				IEnumerator enumerator28 = plantsRestoredRight.GetEnumerator();
				if (enumerator28 != null)
				{
					while (enumerator28.MoveNext())
					{
						bool flag14 = (bool)enumerator28.Current;
						WriteElementStringRaw("plantsRestoredRight", "", XmlConvert.ToString(flag14));
					}
				}
			}
			NetBool hasFailedSurveyToday = o.hasFailedSurveyToday;
			if (hasFailedSurveyToday != null)
			{
				WriteStartElement("hasFailedSurveyToday", "", null, writePrefixed: false);
				IEnumerator enumerator29 = hasFailedSurveyToday.GetEnumerator();
				if (enumerator29 != null)
				{
					while (enumerator29.MoveNext())
					{
						bool flag15 = (bool)enumerator29.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag15));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write252_IslandHut(string n, string ns, IslandHut o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandHut)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandHut", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool treeNutObtained = o.treeNutObtained;
			if (treeNutObtained != null)
			{
				WriteStartElement("treeNutObtained", "", null, writePrefixed: false);
				IEnumerator enumerator21 = treeNutObtained.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag8));
					}
				}
				WriteEndElement();
			}
			NetBool firstParrotDone = o.firstParrotDone;
			if (firstParrotDone != null)
			{
				IEnumerator enumerator22 = firstParrotDone.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						bool flag9 = (bool)enumerator22.Current;
						WriteElementStringRaw("firstParrotDone", "", XmlConvert.ToString(flag9));
					}
				}
			}
			NetString hintForToday = o.hintForToday;
			if (hintForToday != null)
			{
				IEnumerator enumerator23 = hintForToday.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						string value4 = (string)enumerator23.Current;
						WriteElementString("hintForToday", "", value4);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write254_IslandSecret(string n, string ns, IslandSecret o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandSecret)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandSecret", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write256_Caldera(string n, string ns, Caldera o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Caldera)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Caldera", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			NetBool visited = o.visited;
			if (visited != null)
			{
				IEnumerator enumerator21 = visited.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						bool flag8 = (bool)enumerator21.Current;
						WriteElementStringRaw("visited", "", XmlConvert.ToString(flag8));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write240_IslandLocation(string n, string ns, IslandLocation o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandLocation)))
				{
					if (type == typeof(Caldera))
					{
						Write256_Caldera(n, ns, (Caldera)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSecret))
					{
						Write254_IslandSecret(n, ns, (IslandSecret)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandHut))
					{
						Write252_IslandHut(n, ns, (IslandHut)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandFieldOffice))
					{
						Write251_IslandFieldOffice(n, ns, (IslandFieldOffice)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandWestCave1))
					{
						Write250_IslandWestCave1(n, ns, (IslandWestCave1)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandFarmCave))
					{
						Write249_IslandFarmCave(n, ns, (IslandFarmCave)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSouthEastCave))
					{
						Write248_IslandSouthEastCave(n, ns, (IslandSouthEastCave)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSouthEast))
					{
						Write247_IslandSouthEast(n, ns, (IslandSouthEast)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandNorth))
					{
						Write246_IslandNorth(n, ns, (IslandNorth)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandSouth))
					{
						Write245_IslandSouth(n, ns, (IslandSouth)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandForestLocation))
					{
						Write243_IslandForestLocation(n, ns, (IslandForestLocation)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandShrine))
					{
						Write255_IslandShrine(n, ns, (IslandShrine)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandEast))
					{
						Write244_IslandEast(n, ns, (IslandEast)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(IslandWest))
					{
						Write242_IslandWest(n, ns, (IslandWest)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IslandLocation", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetRef<IslandGemBird> locationGemBird = o.locationGemBird;
			if (locationGemBird != null)
			{
				IEnumerator enumerator20 = locationGemBird.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						IslandGemBird o7 = (IslandGemBird)enumerator20.Current;
						Write35_IslandGemBird("locationGemBird", "", o7, isNullable: false, needType: false);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write257_BugLand(string n, string ns, BugLand o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BugLand)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BugLand", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteElementStringRaw("hasSpawnedBugsToday", "", XmlConvert.ToString(o.hasSpawnedBugsToday));
			WriteEndElement(o);
		}

		private void Write259_AnimalHouse(string n, string ns, AnimalHouse o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AnimalHouse)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("AnimalHouse", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>> animals = o.animals;
			if (animals != null)
			{
				IEnumerator enumerator20 = animals.GetEnumerator();
				if (enumerator20 != null)
				{
					while (enumerator20.MoveNext())
					{
						SerializableDictionary<long, FarmAnimal> serializable4 = (SerializableDictionary<long, FarmAnimal>)enumerator20.Current;
						WriteSerializable(serializable4, "animals", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetInt animalLimit = o.animalLimit;
			if (animalLimit != null)
			{
				IEnumerator enumerator21 = animalLimit.GetEnumerator();
				if (enumerator21 != null)
				{
					while (enumerator21.MoveNext())
					{
						int num2 = (int)enumerator21.Current;
						WriteElementStringRaw("animalLimit", "", XmlConvert.ToString(num2));
					}
				}
			}
			NetLongList animalsThatLiveHere = o.animalsThatLiveHere;
			if (animalsThatLiveHere != null)
			{
				WriteStartElement("animalsThatLiveHere", "", null, writePrefixed: false);
				IEnumerator enumerator22 = animalsThatLiveHere.GetEnumerator();
				if (enumerator22 != null)
				{
					while (enumerator22.MoveNext())
					{
						long num3 = (long)enumerator22.Current;
						WriteElementStringRaw("long", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetPoint incubatingEgg = o.incubatingEgg;
			if (incubatingEgg != null)
			{
				IEnumerator enumerator23 = incubatingEgg.GetEnumerator();
				if (enumerator23 != null)
				{
					while (enumerator23.MoveNext())
					{
						Point o7 = (Point)enumerator23.Current;
						Write42_Point("incubatingEgg", "", o7, needType: false);
					}
				}
			}
			NetLongDictionary<FarmAnimal, NetRef<FarmAnimal>> animals2 = o.Animals;
			if (animals2 != null)
			{
				WriteStartElement("Animals", "", null, writePrefixed: false);
				IEnumerator enumerator24 = animals2.GetEnumerator();
				if (enumerator24 != null)
				{
					while (enumerator24.MoveNext())
					{
						SerializableDictionary<long, FarmAnimal> serializable5 = (SerializableDictionary<long, FarmAnimal>)enumerator24.Current;
						WriteSerializable(serializable5, "SerializableDictionaryOfInt64FarmAnimal", "", isNullable: true, wrapped: true);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write382_Bus(string n, string ns, Bus o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Bus)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Bus", "");
			}
			NetCollection<NPC> characters = o.characters;
			if (characters != null)
			{
				WriteStartElement("characters", "", null, writePrefixed: false);
				IEnumerator enumerator = characters.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NPC o2 = (NPC)enumerator.Current;
						Write168_NPC("NPC", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			OverlaidDictionary objects = o.objects;
			if (objects != null)
			{
				IEnumerator enumerator2 = objects.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						SerializableDictionary<Vector2, StardewValley.Object> serializable = (SerializableDictionary<Vector2, StardewValley.Object>)enumerator2.Current;
						WriteSerializable(serializable, "objects", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetCollection<ResourceClump> resourceClumps = o.resourceClumps;
			if (resourceClumps != null)
			{
				WriteStartElement("resourceClumps", "", null, writePrefixed: false);
				IEnumerator enumerator3 = resourceClumps.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						ResourceClump o3 = (ResourceClump)enumerator3.Current;
						Write132_ResourceClump("ResourceClump", "", o3, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetCollection<LargeTerrainFeature> largeTerrainFeatures = o.largeTerrainFeatures;
			if (largeTerrainFeatures != null)
			{
				WriteStartElement("largeTerrainFeatures", "", null, writePrefixed: false);
				IEnumerator enumerator4 = largeTerrainFeatures.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						LargeTerrainFeature o4 = (LargeTerrainFeature)enumerator4.Current;
						Write135_LargeTerrainFeature("LargeTerrainFeature", "", o4, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetVector2Dictionary<TerrainFeature, NetRef<TerrainFeature>> terrainFeatures = o.terrainFeatures;
			if (terrainFeatures != null)
			{
				IEnumerator enumerator5 = terrainFeatures.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						SerializableDictionary<Vector2, TerrainFeature> serializable2 = (SerializableDictionary<Vector2, TerrainFeature>)enumerator5.Current;
						WriteSerializable(serializable2, "terrainFeatures", "", isNullable: false, wrapped: true);
					}
				}
			}
			NetString uniqueName = o.uniqueName;
			if (uniqueName != null)
			{
				IEnumerator enumerator6 = uniqueName.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteElementString("uniqueName", "", value);
					}
				}
			}
			NetString name = o.name;
			if (name != null)
			{
				IEnumerator enumerator7 = name.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						string value2 = (string)enumerator7.Current;
						WriteElementString("name", "", value2);
					}
				}
			}
			NetColor waterColor = o.waterColor;
			if (waterColor != null)
			{
				IEnumerator enumerator8 = waterColor.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						Color o5 = (Color)enumerator8.Current;
						Write34_Color("waterColor", "", o5, needType: false);
					}
				}
			}
			NetBool isFarm = o.isFarm;
			if (isFarm != null)
			{
				IEnumerator enumerator9 = isFarm.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						bool flag = (bool)enumerator9.Current;
						WriteElementStringRaw("isFarm", "", XmlConvert.ToString(flag));
					}
				}
			}
			NetBool isOutdoors = o.isOutdoors;
			if (isOutdoors != null)
			{
				IEnumerator enumerator10 = isOutdoors.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag2 = (bool)enumerator10.Current;
						WriteElementStringRaw("isOutdoors", "", XmlConvert.ToString(flag2));
					}
				}
			}
			NetBool isStructure = o.isStructure;
			if (isStructure != null)
			{
				IEnumerator enumerator11 = isStructure.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						bool flag3 = (bool)enumerator11.Current;
						WriteElementStringRaw("isStructure", "", XmlConvert.ToString(flag3));
					}
				}
			}
			NetBool ignoreDebrisWeather = o.ignoreDebrisWeather;
			if (ignoreDebrisWeather != null)
			{
				IEnumerator enumerator12 = ignoreDebrisWeather.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						bool flag4 = (bool)enumerator12.Current;
						WriteElementStringRaw("ignoreDebrisWeather", "", XmlConvert.ToString(flag4));
					}
				}
			}
			NetBool ignoreOutdoorLighting = o.ignoreOutdoorLighting;
			if (ignoreOutdoorLighting != null)
			{
				IEnumerator enumerator13 = ignoreOutdoorLighting.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						bool flag5 = (bool)enumerator13.Current;
						WriteElementStringRaw("ignoreOutdoorLighting", "", XmlConvert.ToString(flag5));
					}
				}
			}
			NetBool ignoreLights = o.ignoreLights;
			if (ignoreLights != null)
			{
				IEnumerator enumerator14 = ignoreLights.GetEnumerator();
				if (enumerator14 != null)
				{
					while (enumerator14.MoveNext())
					{
						bool flag6 = (bool)enumerator14.Current;
						WriteElementStringRaw("ignoreLights", "", XmlConvert.ToString(flag6));
					}
				}
			}
			NetBool treatAsOutdoors = o.treatAsOutdoors;
			if (treatAsOutdoors != null)
			{
				IEnumerator enumerator15 = treatAsOutdoors.GetEnumerator();
				if (enumerator15 != null)
				{
					while (enumerator15.MoveNext())
					{
						bool flag7 = (bool)enumerator15.Current;
						WriteElementStringRaw("treatAsOutdoors", "", XmlConvert.ToString(flag7));
					}
				}
			}
			WriteElementStringRaw("numberOfSpawnedObjectsOnMap", "", XmlConvert.ToString(o.numberOfSpawnedObjectsOnMap));
			NetInt miniJukeboxCount = o.miniJukeboxCount;
			if (miniJukeboxCount != null)
			{
				IEnumerator enumerator16 = miniJukeboxCount.GetEnumerator();
				if (enumerator16 != null)
				{
					while (enumerator16.MoveNext())
					{
						int num = (int)enumerator16.Current;
						WriteElementStringRaw("miniJukeboxCount", "", XmlConvert.ToString(num));
					}
				}
			}
			NetString miniJukeboxTrack = o.miniJukeboxTrack;
			if (miniJukeboxTrack != null)
			{
				IEnumerator enumerator17 = miniJukeboxTrack.GetEnumerator();
				if (enumerator17 != null)
				{
					while (enumerator17.MoveNext())
					{
						string value3 = (string)enumerator17.Current;
						WriteElementString("miniJukeboxTrack", "", value3);
					}
				}
			}
			NetCollection<Furniture> furniture = o.furniture;
			if (furniture != null)
			{
				WriteStartElement("furniture", "", null, writePrefixed: false);
				IEnumerator enumerator18 = furniture.GetEnumerator();
				if (enumerator18 != null)
				{
					while (enumerator18.MoveNext())
					{
						Furniture o6 = (Furniture)enumerator18.Current;
						Write62_Furniture("Furniture", "", o6, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("IsGreenhouse", "", XmlConvert.ToString(o.IsGreenhouse));
			ModDataDictionary modDataForSerialization = o.modDataForSerialization;
			if (modDataForSerialization != null)
			{
				IEnumerator enumerator19 = modDataForSerialization.GetEnumerator();
				if (enumerator19 != null)
				{
					while (enumerator19.MoveNext())
					{
						SerializableDictionary<string, string> serializable3 = (SerializableDictionary<string, string>)enumerator19.Current;
						WriteSerializable(serializable3, "modData", "", isNullable: false, wrapped: true);
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write261_NetPosition(string n, string ns, NetPosition o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetPosition)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetPosition", "");
			}
			NetVector2 field = o.Field;
			if (field != null)
			{
				WriteStartElement("Field", "", null, writePrefixed: false);
				IEnumerator enumerator = field.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator.Current;
						Write33_Vector2("Vector2", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			Write33_Vector2("Value", "", o.Value, needType: false);
			WriteElementStringRaw("Paused", "", XmlConvert.ToString(o.Paused));
			WriteElementStringRaw("ExtrapolationEnabled", "", XmlConvert.ToString(o.ExtrapolationEnabled));
			NetBool moving = o.moving;
			if (moving != null)
			{
				WriteStartElement("moving", "", null, writePrefixed: false);
				IEnumerator enumerator2 = moving.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						bool flag = (bool)enumerator2.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("X", "", XmlConvert.ToString(o.X));
			WriteElementStringRaw("Y", "", XmlConvert.ToString(o.Y));
			WriteEndElement(o);
		}

		private void Write260_Item(string n, string ns, NetPausableField<Vector2, NetVector2, NetVector2> o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetPausableField<Vector2, NetVector2, NetVector2>)))
				{
					if (type == typeof(NetPosition))
					{
						Write261_NetPosition(n, ns, (NetPosition)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetPausableFieldOfVector2NetVector2NetVector2", "");
			}
			NetVector2 field = o.Field;
			if (field != null)
			{
				WriteStartElement("Field", "", null, writePrefixed: false);
				IEnumerator enumerator = field.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator.Current;
						Write33_Vector2("Vector2", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			Write33_Vector2("Value", "", o.Value, needType: false);
			WriteElementStringRaw("Paused", "", XmlConvert.ToString(o.Paused));
			WriteEndElement(o);
		}

		private void Write262_Chunk(string n, string ns, Chunk o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Chunk)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Chunk", "");
			}
			Write261_NetPosition("position", "", o.position, isNullable: false, needType: false);
			NetInt xSpriteSheet = o.xSpriteSheet;
			if (xSpriteSheet != null)
			{
				IEnumerator enumerator = xSpriteSheet.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("xSpriteSheet", "", XmlConvert.ToString(num));
					}
				}
			}
			NetInt ySpriteSheet = o.ySpriteSheet;
			if (ySpriteSheet != null)
			{
				IEnumerator enumerator2 = ySpriteSheet.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num2 = (int)enumerator2.Current;
						WriteElementStringRaw("ySpriteSheet", "", XmlConvert.ToString(num2));
					}
				}
			}
			WriteElementStringRaw("debrisType", "", XmlConvert.ToString(o.debrisType));
			WriteElementStringRaw("scale", "", XmlConvert.ToString(o.scale));
			WriteElementStringRaw("alpha", "", XmlConvert.ToString(o.alpha));
			WriteEndElement(o);
		}

		private void Write263_FarmerRenderer(string n, string ns, FarmerRenderer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FarmerRenderer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FarmerRenderer", "");
			}
			NetString textureName = o.textureName;
			if (textureName != null)
			{
				IEnumerator enumerator = textureName.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						string value = (string)enumerator.Current;
						WriteElementString("textureName", "", value);
					}
				}
			}
			NetInt heightOffset = o.heightOffset;
			if (heightOffset != null)
			{
				IEnumerator enumerator2 = heightOffset.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("heightOffset", "", XmlConvert.ToString(num));
					}
				}
			}
			WriteEndElement(o);
		}

		private void Write264_LightningStrikeEvent(string n, string ns, Farm.LightningStrikeEvent o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Farm.LightningStrikeEvent)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LightningStrikeEvent", "");
			}
			Write33_Vector2("boltPosition", "", o.boltPosition, needType: false);
			WriteElementStringRaw("createBolt", "", XmlConvert.ToString(o.createBolt));
			WriteElementStringRaw("bigFlash", "", XmlConvert.ToString(o.bigFlash));
			WriteElementStringRaw("smallFlash", "", XmlConvert.ToString(o.smallFlash));
			WriteElementStringRaw("destroyedTerrainFeature", "", XmlConvert.ToString(o.destroyedTerrainFeature));
			WriteEndElement(o);
		}

		private void Write266_NetLogger(string n, string ns, NetLogger o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetLogger)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetLogger", "");
			}
			WriteElementStringRaw("IsLogging", "", XmlConvert.ToString(o.IsLogging));
			WriteEndElement(o);
		}

		private void Write267_Noise(string n, string ns, Noise o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Noise)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Noise", "");
			}
			WriteEndElement(o);
		}

		private void Write268_NumberSprite(string n, string ns, NumberSprite o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NumberSprite)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NumberSprite", "");
			}
			WriteEndElement(o);
		}

		private void Write271_Texture2D(string n, string ns, Texture2D o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Texture2D)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Texture2D", "");
			}
			Write2_Object("Tag", "", o.Tag, isNullable: false, needType: false);
			WriteElementString("Name", "", o.Name);
			WriteEndElement(o);
		}

		private void Write270_Texture(string n, string ns, Texture o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (!(type == typeof(Texture)))
				{
					if (!(type == typeof(Texture2D)))
					{
						throw CreateUnknownTypeException(o);
					}
					Write271_Texture2D(n, ns, (Texture2D)o, isNullable, needType: true);
				}
			}
		}

		private void Write269_GraphicsResource(string n, string ns, GraphicsResource o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(GraphicsResource))
				{
					return;
				}
				if (type == typeof(Texture))
				{
					Write270_Texture(n, ns, (Texture)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(Texture2D)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write271_Texture2D(n, ns, (Texture2D)o, isNullable, needType: true);
			}
		}

		private void Write272_LightSource(string n, string ns, LightSource o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LightSource)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LightSource", "");
			}
			NetInt textureIndex = o.textureIndex;
			if (textureIndex != null)
			{
				WriteStartElement("textureIndex", "", null, writePrefixed: false);
				IEnumerator enumerator = textureIndex.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						int num = (int)enumerator.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			Write271_Texture2D("lightTexture", "", o.lightTexture, isNullable: false, needType: false);
			NetVector2 position = o.position;
			if (position != null)
			{
				WriteStartElement("position", "", null, writePrefixed: false);
				IEnumerator enumerator2 = position.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						Vector2 o2 = (Vector2)enumerator2.Current;
						Write33_Vector2("Vector2", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			NetColor color = o.color;
			if (color != null)
			{
				WriteStartElement("color", "", null, writePrefixed: false);
				IEnumerator enumerator3 = color.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						Color o3 = (Color)enumerator3.Current;
						Write34_Color("Color", "", o3, needType: false);
					}
				}
				WriteEndElement();
			}
			NetFloat radius = o.radius;
			if (radius != null)
			{
				WriteStartElement("radius", "", null, writePrefixed: false);
				IEnumerator enumerator4 = radius.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num2 = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			NetInt identifier = o.identifier;
			if (identifier != null)
			{
				WriteStartElement("identifier", "", null, writePrefixed: false);
				IEnumerator enumerator5 = identifier.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						int num3 = (int)enumerator5.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetEnum<LightSource.LightContext> lightContext = o.lightContext;
			if (lightContext != null)
			{
				WriteStartElement("lightContext", "", null, writePrefixed: false);
				IEnumerator enumerator6 = lightContext.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						string value = (string)enumerator6.Current;
						WriteNullableStringLiteral("string", "", value);
					}
				}
				WriteEndElement();
			}
			NetLong playerID = o.playerID;
			if (playerID != null)
			{
				WriteStartElement("playerID", "", null, writePrefixed: false);
				IEnumerator enumerator7 = playerID.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						long num4 = (long)enumerator7.Current;
						WriteElementStringRaw("long", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("Identifier", "", XmlConvert.ToString(o.Identifier));
			WriteElementStringRaw("PlayerID", "", XmlConvert.ToString(o.PlayerID));
			WriteEndElement(o);
		}

		private void Write274_NameSelect(string n, string ns, NameSelect o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NameSelect)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NameSelect", "");
			}
			WriteEndElement(o);
		}

		private void Write275_PriorityQueue(string n, string ns, PriorityQueue o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(PriorityQueue)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("PriorityQueue", "");
			}
			WriteEndElement(o);
		}

		private void Write276_HairStyleMetadata(string n, string ns, HairStyleMetadata o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(HairStyleMetadata)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("HairStyleMetadata", "");
			}
			Write271_Texture2D("texture", "", o.texture, isNullable: false, needType: false);
			WriteElementStringRaw("tileX", "", XmlConvert.ToString(o.tileX));
			WriteElementStringRaw("tileY", "", XmlConvert.ToString(o.tileY));
			WriteElementStringRaw("usesUniqueLeftSprite", "", XmlConvert.ToString(o.usesUniqueLeftSprite));
			WriteElementStringRaw("coveredIndex", "", XmlConvert.ToString(o.coveredIndex));
			WriteElementStringRaw("isBaldStyle", "", XmlConvert.ToString(o.isBaldStyle));
			WriteEndElement(o);
		}

		private void Write277_FarmerPair(string n, string ns, FarmerPair o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FarmerPair)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FarmerPair", "");
			}
			WriteElementStringRaw("Farmer1", "", XmlConvert.ToString(o.Farmer1));
			WriteElementStringRaw("Farmer2", "", XmlConvert.ToString(o.Farmer2));
			WriteEndElement(o);
		}

		private void Write278_NutDropRequest(string n, string ns, NutDropRequest o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NutDropRequest)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NutDropRequest", "");
			}
			WriteElementString("key", "", o.key);
			WriteElementString("locationName", "", o.locationName);
			Write42_Point("position", "", o.position, needType: false);
			WriteElementStringRaw("limit", "", XmlConvert.ToString(o.limit));
			WriteElementStringRaw("rewardAmount", "", XmlConvert.ToString(o.rewardAmount));
			WriteEndElement(o);
		}

		private void Write282_MarriageDialogueReference(string n, string ns, MarriageDialogueReference o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MarriageDialogueReference)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MarriageDialogueReference", "");
			}
			WriteEndElement(o);
		}

		private void Write284_ArtifactSpotWatchActivity(string n, string ns, ArtifactSpotWatchActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ArtifactSpotWatchActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ArtifactSpotWatchActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write285_CropWatchActivity(string n, string ns, CropWatchActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(CropWatchActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CropWatchActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write286_FlowerWatchActivity(string n, string ns, FlowerWatchActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FlowerWatchActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FlowerWatchActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write287_ShrineActivity(string n, string ns, ShrineActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ShrineActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ShrineActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write288_MailActivity(string n, string ns, MailActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MailActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MailActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write289_TreeActivity(string n, string ns, TreeActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(TreeActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("TreeActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write290_ClearingActivity(string n, string ns, ClearingActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ClearingActivity)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ClearingActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write283_FarmActivity(string n, string ns, FarmActivity o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(FarmActivity)))
				{
					if (type == typeof(ClearingActivity))
					{
						Write290_ClearingActivity(n, ns, (ClearingActivity)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(TreeActivity))
					{
						Write289_TreeActivity(n, ns, (TreeActivity)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(MailActivity))
					{
						Write288_MailActivity(n, ns, (MailActivity)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ShrineActivity))
					{
						Write287_ShrineActivity(n, ns, (ShrineActivity)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(FlowerWatchActivity))
					{
						Write286_FlowerWatchActivity(n, ns, (FlowerWatchActivity)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(CropWatchActivity))
					{
						Write285_CropWatchActivity(n, ns, (CropWatchActivity)o, isNullable, needType: true);
						return;
					}
					if (type == typeof(ArtifactSpotWatchActivity))
					{
						Write284_ArtifactSpotWatchActivity(n, ns, (ArtifactSpotWatchActivity)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("FarmActivity", "");
			}
			Write33_Vector2("activityPosition", "", o.activityPosition, needType: false);
			WriteElementStringRaw("activityDirection", "", XmlConvert.ToString(o.activityDirection));
			WriteElementStringRaw("weight", "", XmlConvert.ToString(o.weight));
			WriteEndElement(o);
		}

		private void Write293_RainDrop(string n, string ns, RainDrop o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(RainDrop)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("RainDrop", "");
			}
			WriteElementStringRaw("frame", "", XmlConvert.ToString(o.frame));
			WriteElementStringRaw("accumulator", "", XmlConvert.ToString(o.accumulator));
			Write33_Vector2("position", "", o.position, needType: false);
			WriteEndElement(o);
		}

		private void Write297_Vector2Reader(string n, string ns, Vector2Reader o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector2Reader)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector2Reader", "");
			}
			WriteEndElement(o);
		}

		private void Write296_XmlSerializationReader(string n, string ns, XmlSerializationReader o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (!(type == typeof(XmlSerializationReader)))
				{
					if (!(type == typeof(Vector2Reader)))
					{
						throw CreateUnknownTypeException(o);
					}
					Write297_Vector2Reader(n, ns, (Vector2Reader)o, isNullable, needType: true);
				}
			}
		}

		private void Write299_Vector2Writer(string n, string ns, Vector2Writer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector2Writer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector2Writer", "");
			}
			WriteEndElement(o);
		}

		private void Write298_XmlSerializationWriter(string n, string ns, XmlSerializationWriter o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (!(type == typeof(XmlSerializationWriter)))
				{
					if (!(type == typeof(Vector2Writer)))
					{
						throw CreateUnknownTypeException(o);
					}
					Write299_Vector2Writer(n, ns, (Vector2Writer)o, isNullable, needType: true);
				}
			}
		}

		private void Write295_XmlSerializationGeneratedCode(string n, string ns, XmlSerializationGeneratedCode o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(XmlSerializationGeneratedCode))
				{
					return;
				}
				if (type == typeof(XmlSerializationWriter))
				{
					Write298_XmlSerializationWriter(n, ns, (XmlSerializationWriter)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(Vector2Writer))
				{
					Write299_Vector2Writer(n, ns, (Vector2Writer)o, isNullable, needType: true);
					return;
				}
				if (type == typeof(XmlSerializationReader))
				{
					Write296_XmlSerializationReader(n, ns, (XmlSerializationReader)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(Vector2Reader)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write297_Vector2Reader(n, ns, (Vector2Reader)o, isNullable, needType: true);
			}
		}

		private void Write301_Vector2Serializer(string n, string ns, Vector2Serializer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(Vector2Serializer)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Vector2Serializer", "");
			}
			WriteEndElement(o);
		}

		private void Write300_XmlSerializer(string n, string ns, XmlSerializer o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(XmlSerializer)))
				{
					if (type == typeof(Vector2Serializer))
					{
						Write301_Vector2Serializer(n, ns, (Vector2Serializer)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("XmlSerializer", "");
			}
			WriteEndElement(o);
		}

		private void Write303_NetLeaderboards(string n, string ns, NetLeaderboards o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetLeaderboards)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetLeaderboards", "");
			}
			NetObjectList<NetLeaderboardsEntry> entries = o.entries;
			if (entries != null)
			{
				WriteStartElement("entries", "", null, writePrefixed: false);
				IEnumerator enumerator = entries.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						NetLeaderboardsEntry o2 = (NetLeaderboardsEntry)enumerator.Current;
						Write302_NetLeaderboardsEntry("NetLeaderboardsEntry", "", o2, isNullable: true, needType: false);
					}
				}
				WriteEndElement();
			}
			NetInt maxEntries = o.maxEntries;
			if (maxEntries != null)
			{
				WriteStartElement("maxEntries", "", null, writePrefixed: false);
				IEnumerator enumerator2 = maxEntries.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						int num = (int)enumerator2.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write304_SaveGame(string n, string ns, SaveGame o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SaveGame)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SaveGame", "");
			}
			Write183_Farmer("player", "", o.player, isNullable: false, needType: false);
			List<GameLocation> locations = o.locations;
			if (locations != null)
			{
				WriteStartElement("locations", "", null, writePrefixed: false);
				for (int i = 0; i < ((ICollection)locations).Count; i++)
				{
					Write258_GameLocation("GameLocation", "", locations[i], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			WriteElementString("currentSeason", "", o.currentSeason);
			WriteElementString("samBandName", "", o.samBandName);
			WriteElementString("elliottBookName", "", o.elliottBookName);
			List<string> mailbox = o.mailbox;
			if (mailbox != null)
			{
				WriteStartElement("mailbox", "", null, writePrefixed: false);
				for (int j = 0; j < ((ICollection)mailbox).Count; j++)
				{
					WriteNullableStringLiteral("string", "", mailbox[j]);
				}
				WriteEndElement();
			}
			List<string> broadcastedMail = o.broadcastedMail;
			if (broadcastedMail != null)
			{
				WriteStartElement("broadcastedMail", "", null, writePrefixed: false);
				for (int k = 0; k < ((ICollection)broadcastedMail).Count; k++)
				{
					WriteNullableStringLiteral("string", "", broadcastedMail[k]);
				}
				WriteEndElement();
			}
			List<string> worldStateIDs = o.worldStateIDs;
			if (worldStateIDs != null)
			{
				WriteStartElement("worldStateIDs", "", null, writePrefixed: false);
				for (int l = 0; l < ((ICollection)worldStateIDs).Count; l++)
				{
					WriteNullableStringLiteral("string", "", worldStateIDs[l]);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("lostBooksFound", "", XmlConvert.ToString(o.lostBooksFound));
			WriteElementStringRaw("goldenWalnuts", "", XmlConvert.ToString(o.goldenWalnuts));
			WriteElementStringRaw("goldenWalnutsFound", "", XmlConvert.ToString(o.goldenWalnutsFound));
			WriteElementStringRaw("miniShippingBinsObtained", "", XmlConvert.ToString(o.miniShippingBinsObtained));
			WriteElementStringRaw("mineShrineActivated", "", XmlConvert.ToString(o.mineShrineActivated));
			WriteElementStringRaw("goldenCoconutCracked", "", XmlConvert.ToString(o.goldenCoconutCracked));
			WriteElementStringRaw("parrotPlatformsUnlocked", "", XmlConvert.ToString(o.parrotPlatformsUnlocked));
			WriteElementStringRaw("farmPerfect", "", XmlConvert.ToString(o.farmPerfect));
			List<string> foundBuriedNuts = o.foundBuriedNuts;
			if (foundBuriedNuts != null)
			{
				WriteStartElement("foundBuriedNuts", "", null, writePrefixed: false);
				for (int m = 0; m < ((ICollection)foundBuriedNuts).Count; m++)
				{
					WriteNullableStringLiteral("string", "", foundBuriedNuts[m]);
				}
				WriteEndElement();
			}
			WriteElementStringRaw("visitsUntilY1Guarantee", "", XmlConvert.ToString(o.visitsUntilY1Guarantee));
			WriteElementString("shuffleMineChests", "", Write294_MineChestType(o.shuffleMineChests));
			WriteElementStringRaw("dayOfMonth", "", XmlConvert.ToString(o.dayOfMonth));
			WriteElementStringRaw("year", "", XmlConvert.ToString(o.year));
			WriteElementStringRaw("farmerWallpaper", "", XmlConvert.ToString(o.farmerWallpaper));
			WriteElementStringRaw("FarmerFloor", "", XmlConvert.ToString(o.FarmerFloor));
			WriteElementStringRaw("currentWallpaper", "", XmlConvert.ToString(o.currentWallpaper));
			WriteElementStringRaw("currentFloor", "", XmlConvert.ToString(o.currentFloor));
			WriteElementStringRaw("currentSongIndex", "", XmlConvert.ToString(o.currentSongIndex));
			if (o.countdownToWedding.HasValue)
			{
				WriteNullableStringLiteralRaw("countdownToWedding", "", XmlConvert.ToString(o.countdownToWedding.Value));
			}
			else
			{
				WriteNullTagLiteral("countdownToWedding", "");
			}
			Write42_Point("incubatingEgg", "", o.incubatingEgg, needType: false);
			WriteElementStringRaw("chanceToRainTomorrow", "", XmlConvert.ToString(o.chanceToRainTomorrow));
			WriteElementStringRaw("dailyLuck", "", XmlConvert.ToString(o.dailyLuck));
			WriteElementStringRaw("uniqueIDForThisGame", "", XmlConvert.ToString(o.uniqueIDForThisGame));
			WriteElementStringRaw("weddingToday", "", XmlConvert.ToString(o.weddingToday));
			WriteElementStringRaw("isRaining", "", XmlConvert.ToString(o.isRaining));
			WriteElementStringRaw("isDebrisWeather", "", XmlConvert.ToString(o.isDebrisWeather));
			WriteElementStringRaw("shippingTax", "", XmlConvert.ToString(o.shippingTax));
			WriteElementStringRaw("isLightning", "", XmlConvert.ToString(o.isLightning));
			WriteElementStringRaw("isSnowing", "", XmlConvert.ToString(o.isSnowing));
			WriteElementStringRaw("shouldSpawnMonsters", "", XmlConvert.ToString(o.shouldSpawnMonsters));
			WriteElementStringRaw("hasApplied1_3_UpdateChanges", "", XmlConvert.ToString(o.hasApplied1_3_UpdateChanges));
			WriteElementStringRaw("hasApplied1_4_UpdateChanges", "", XmlConvert.ToString(o.hasApplied1_4_UpdateChanges));
			Write180_Stats("stats", "", o.stats, isNullable: false, needType: false);
			WriteElementStringRaw("musicVolume", "", XmlConvert.ToString(o.musicVolume));
			WriteElementStringRaw("soundVolume", "", XmlConvert.ToString(o.soundVolume));
			int[] cropsOfTheWeek = o.cropsOfTheWeek;
			if (cropsOfTheWeek != null)
			{
				WriteStartElement("cropsOfTheWeek", "", null, writePrefixed: false);
				for (int num = 0; num < cropsOfTheWeek.Length; num++)
				{
					WriteElementStringRaw("int", "", XmlConvert.ToString(cropsOfTheWeek[num]));
				}
				WriteEndElement();
			}
			Write142_Object("dishOfTheDay", "", o.dishOfTheDay, isNullable: false, needType: false);
			WriteElementStringRaw("highestPlayerLimit", "", XmlConvert.ToString(o.highestPlayerLimit));
			WriteElementStringRaw("moveBuildingPermissionMode", "", XmlConvert.ToString(o.moveBuildingPermissionMode));
			WriteSerializable(o.locationWeather, "locationWeather", "", isNullable: false, wrapped: true);
			WriteSerializable(o.bannedUsers, "bannedUsers", "", isNullable: false, wrapped: true);
			WriteSerializable(o.bundleData, "bundleData", "", isNullable: false, wrapped: true);
			WriteSerializable(o.limitedNutDrops, "limitedNutDrops", "", isNullable: false, wrapped: true);
			WriteElementStringRaw("latestID", "", XmlConvert.ToString(o.latestID));
			Write48_Options("options", "", o.options, isNullable: false, needType: false);
			WriteSerializable(o.splitscreenOptions, "splitscreenOptions", "", isNullable: false, wrapped: true);
			WriteSerializable(o.CustomData, "CustomData", "", isNullable: false, wrapped: true);
			WriteSerializable(o.mine_permanentMineChanges, "mine_permanentMineChanges", "", isNullable: false, wrapped: true);
			WriteElementStringRaw("mine_lowestLevelReached", "", XmlConvert.ToString(o.mine_lowestLevelReached));
			WriteElementStringRaw("minecartHighScore", "", XmlConvert.ToString(o.minecartHighScore));
			WriteElementStringRaw("weatherForTomorrow", "", XmlConvert.ToString(o.weatherForTomorrow));
			WriteElementString("whichFarm", "", o.whichFarm);
			WriteElementStringRaw("mine_lowestLevelReachedForOrder", "", XmlConvert.ToString(o.mine_lowestLevelReachedForOrder));
			WriteElementStringRaw("skullCavesDifficulty", "", XmlConvert.ToString(o.skullCavesDifficulty));
			WriteElementStringRaw("minesDifficulty", "", XmlConvert.ToString(o.minesDifficulty));
			WriteElementStringRaw("currentGemBirdIndex", "", XmlConvert.ToString(o.currentGemBirdIndex));
			Write303_NetLeaderboards("junimoKartLeaderboards", "", o.junimoKartLeaderboards, isNullable: false, needType: false);
			List<SpecialOrder> specialOrders = o.specialOrders;
			if (specialOrders != null)
			{
				WriteStartElement("specialOrders", "", null, writePrefixed: false);
				for (int num2 = 0; num2 < ((ICollection)specialOrders).Count; num2++)
				{
					Write159_SpecialOrder("SpecialOrder", "", specialOrders[num2], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			List<SpecialOrder> availableSpecialOrders = o.availableSpecialOrders;
			if (availableSpecialOrders != null)
			{
				WriteStartElement("availableSpecialOrders", "", null, writePrefixed: false);
				for (int num3 = 0; num3 < ((ICollection)availableSpecialOrders).Count; num3++)
				{
					Write159_SpecialOrder("SpecialOrder", "", availableSpecialOrders[num3], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			List<string> completedSpecialOrders = o.completedSpecialOrders;
			if (completedSpecialOrders != null)
			{
				WriteStartElement("completedSpecialOrders", "", null, writePrefixed: false);
				for (int num4 = 0; num4 < ((ICollection)completedSpecialOrders).Count; num4++)
				{
					WriteNullableStringLiteral("string", "", completedSpecialOrders[num4]);
				}
				WriteEndElement();
			}
			List<string> acceptedSpecialOrderTypes = o.acceptedSpecialOrderTypes;
			if (acceptedSpecialOrderTypes != null)
			{
				WriteStartElement("acceptedSpecialOrderTypes", "", null, writePrefixed: false);
				for (int num5 = 0; num5 < ((ICollection)acceptedSpecialOrderTypes).Count; num5++)
				{
					WriteNullableStringLiteral("string", "", acceptedSpecialOrderTypes[num5]);
				}
				WriteEndElement();
			}
			List<Item> returnedDonations = o.returnedDonations;
			if (returnedDonations != null)
			{
				WriteStartElement("returnedDonations", "", null, writePrefixed: false);
				for (int num6 = 0; num6 < ((ICollection)returnedDonations).Count; num6++)
				{
					Write143_Item("Item", "", returnedDonations[num6], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			List<Item> junimoChest = o.junimoChest;
			if (junimoChest != null)
			{
				WriteStartElement("junimoChest", "", null, writePrefixed: false);
				for (int num7 = 0; num7 < ((ICollection)junimoChest).Count; num7++)
				{
					Write143_Item("Item", "", junimoChest[num7], isNullable: true, needType: false);
				}
				WriteEndElement();
			}
			List<string> collectedNutTracker = o.collectedNutTracker;
			if (collectedNutTracker != null)
			{
				WriteStartElement("collectedNutTracker", "", null, writePrefixed: false);
				for (int num8 = 0; num8 < ((ICollection)collectedNutTracker).Count; num8++)
				{
					WriteNullableStringLiteral("string", "", collectedNutTracker[num8]);
				}
				WriteEndElement();
			}
			WriteSerializable(o.farmerFriendships, "farmerFriendships", "", isNullable: false, wrapped: true);
			WriteSerializable(o.cellarAssignments, "cellarAssignments", "", isNullable: false, wrapped: true);
			WriteElementStringRaw("lastAppliedSaveFix", "", XmlConvert.ToString(o.lastAppliedSaveFix));
			WriteElementString("gameVersion", "", o.gameVersion);
			List<tutorialType> tutorialData = o.tutorialData;
			if (tutorialData != null)
			{
				WriteStartElement("tutorialData", "", null, writePrefixed: false);
				for (int num9 = 0; num9 < ((ICollection)tutorialData).Count; num9++)
				{
					WriteElementString("tutorialType", "", Write10_tutorialType(tutorialData[num9]));
				}
				WriteEndElement();
			}
			List<TutorialShopLocation> shopLocationsVisited = o.shopLocationsVisited;
			if (shopLocationsVisited != null)
			{
				WriteStartElement("shopLocationsVisited", "", null, writePrefixed: false);
				for (int num10 = 0; num10 < ((ICollection)shopLocationsVisited).Count; num10++)
				{
					WriteElementString("TutorialShopLocation", "", Write11_TutorialShopLocation(shopLocationsVisited[num10]));
				}
				WriteEndElement();
			}
			WriteElementStringRaw("showTutorials", "", XmlConvert.ToString(o.showTutorials));
			WriteElementString("gameVersionLabel", "", o.gameVersionLabel);
			WriteEndElement(o);
		}

		private void Write307_StartupPreferences(string n, string ns, StartupPreferences o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(StartupPreferences)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("StartupPreferences", "");
			}
			WriteElementStringRaw("startMuted", "", XmlConvert.ToString(o.startMuted));
			WriteElementStringRaw("levelTenFishing", "", XmlConvert.ToString(o.levelTenFishing));
			WriteElementStringRaw("levelTenMining", "", XmlConvert.ToString(o.levelTenMining));
			WriteElementStringRaw("levelTenForaging", "", XmlConvert.ToString(o.levelTenForaging));
			WriteElementStringRaw("levelTenCombat", "", XmlConvert.ToString(o.levelTenCombat));
			WriteElementStringRaw("skipWindowPreparation", "", XmlConvert.ToString(o.skipWindowPreparation));
			WriteElementStringRaw("sawAdvancedCharacterCreationIndicator", "", XmlConvert.ToString(o.sawAdvancedCharacterCreationIndicator));
			WriteElementStringRaw("timesPlayed", "", XmlConvert.ToString(o.timesPlayed));
			WriteElementStringRaw("windowMode", "", XmlConvert.ToString(o.windowMode));
			WriteElementStringRaw("displayIndex", "", XmlConvert.ToString(o.displayIndex));
			WriteElementString("gamepadMode", "", Write44_GamepadModes(o.gamepadMode));
			WriteElementStringRaw("playerLimit", "", XmlConvert.ToString(o.playerLimit));
			WriteElementStringRaw("fullscreenResolutionX", "", XmlConvert.ToString(o.fullscreenResolutionX));
			WriteElementStringRaw("fullscreenResolutionY", "", XmlConvert.ToString(o.fullscreenResolutionY));
			WriteElementString("lastEnteredIP", "", o.lastEnteredIP);
			WriteElementStringRaw("safeRegionSize", "", XmlConvert.ToString(o.safeRegionSize));
			WriteElementString("languageCode", "", o.languageCode);
			Write48_Options("clientOptions", "", o.clientOptions, isNullable: false, needType: false);
			WriteEndElement(o);
		}

		private void Write308_WeatherDebris(string n, string ns, WeatherDebris o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(WeatherDebris)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("WeatherDebris", "");
			}
			Write33_Vector2("position", "", o.position, needType: false);
			Write51_Rectangle("sourceRect", "", o.sourceRect, needType: false);
			WriteElementStringRaw("which", "", XmlConvert.ToString(o.which));
			WriteElementStringRaw("animationIndex", "", XmlConvert.ToString(o.animationIndex));
			WriteElementStringRaw("animationTimer", "", XmlConvert.ToString(o.animationTimer));
			WriteElementStringRaw("animationDirection", "", XmlConvert.ToString(o.animationDirection));
			WriteElementStringRaw("animationIntervalOffset", "", XmlConvert.ToString(o.animationIntervalOffset));
			WriteElementStringRaw("dx", "", XmlConvert.ToString(o.dx));
			WriteElementStringRaw("dy", "", XmlConvert.ToString(o.dy));
			WriteEndElement(o);
		}

		private void Write310_BasicProjectile(string n, string ns, BasicProjectile o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BasicProjectile)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BasicProjectile", "");
			}
			NetFloat startingRotation = o.startingRotation;
			if (startingRotation != null)
			{
				WriteStartElement("startingRotation", "", null, writePrefixed: false);
				IEnumerator enumerator = startingRotation.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						float num = (float)enumerator.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetColor color = o.color;
			if (color != null)
			{
				WriteStartElement("color", "", null, writePrefixed: false);
				IEnumerator enumerator2 = color.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						Color o2 = (Color)enumerator2.Current;
						Write34_Color("Color", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			NetInt maxTravelDistance = o.maxTravelDistance;
			if (maxTravelDistance != null)
			{
				WriteStartElement("maxTravelDistance", "", null, writePrefixed: false);
				IEnumerator enumerator3 = maxTravelDistance.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("travelDistance", "", XmlConvert.ToString(o.travelDistance));
			NetFloat height = o.height;
			if (height != null)
			{
				WriteStartElement("height", "", null, writePrefixed: false);
				IEnumerator enumerator4 = height.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num3 = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetBool ignoreTravelGracePeriod = o.ignoreTravelGracePeriod;
			if (ignoreTravelGracePeriod != null)
			{
				WriteStartElement("ignoreTravelGracePeriod", "", null, writePrefixed: false);
				IEnumerator enumerator5 = ignoreTravelGracePeriod.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag = (bool)enumerator5.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			NetBool ignoreLocationCollision = o.ignoreLocationCollision;
			if (ignoreLocationCollision != null)
			{
				WriteStartElement("ignoreLocationCollision", "", null, writePrefixed: false);
				IEnumerator enumerator6 = ignoreLocationCollision.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag2 = (bool)enumerator6.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			NetBool ignoreMeleeAttacks = o.ignoreMeleeAttacks;
			if (ignoreMeleeAttacks != null)
			{
				WriteStartElement("ignoreMeleeAttacks", "", null, writePrefixed: false);
				IEnumerator enumerator7 = ignoreMeleeAttacks.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag3 = (bool)enumerator7.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag3));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("destroyMe", "", XmlConvert.ToString(o.destroyMe));
			NetFloat startingScale = o.startingScale;
			if (startingScale != null)
			{
				WriteStartElement("startingScale", "", null, writePrefixed: false);
				IEnumerator enumerator8 = startingScale.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						float num4 = (float)enumerator8.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			NetFloat scaleGrow = o.scaleGrow;
			if (scaleGrow != null)
			{
				WriteStartElement("scaleGrow", "", null, writePrefixed: false);
				IEnumerator enumerator9 = scaleGrow.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						float num5 = (float)enumerator9.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num5));
					}
				}
				WriteEndElement();
			}
			NetBool light = o.light;
			if (light != null)
			{
				WriteStartElement("light", "", null, writePrefixed: false);
				IEnumerator enumerator10 = light.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag4 = (bool)enumerator10.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag4));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("hasLit", "", XmlConvert.ToString(o.hasLit));
			WriteElementStringRaw("IgnoreLocationCollision", "", XmlConvert.ToString(o.IgnoreLocationCollision));
			NetInt damageToFarmer = o.damageToFarmer;
			if (damageToFarmer != null)
			{
				WriteStartElement("damageToFarmer", "", null, writePrefixed: false);
				IEnumerator enumerator11 = damageToFarmer.GetEnumerator();
				if (enumerator11 != null)
				{
					while (enumerator11.MoveNext())
					{
						int num6 = (int)enumerator11.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num6));
					}
				}
				WriteEndElement();
			}
			NetInt debuff = o.debuff;
			if (debuff != null)
			{
				WriteStartElement("debuff", "", null, writePrefixed: false);
				IEnumerator enumerator12 = debuff.GetEnumerator();
				if (enumerator12 != null)
				{
					while (enumerator12.MoveNext())
					{
						int num7 = (int)enumerator12.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num7));
					}
				}
				WriteEndElement();
			}
			NetString debuffSound = o.debuffSound;
			if (debuffSound != null)
			{
				WriteStartElement("debuffSound", "", null, writePrefixed: false);
				IEnumerator enumerator13 = debuffSound.GetEnumerator();
				if (enumerator13 != null)
				{
					while (enumerator13.MoveNext())
					{
						string value = (string)enumerator13.Current;
						WriteNullableStringLiteral("string", "", value);
					}
				}
				WriteEndElement();
			}
			WriteEndElement(o);
		}

		private void Write311_DebuffingProjectile(string n, string ns, DebuffingProjectile o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(DebuffingProjectile)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("DebuffingProjectile", "");
			}
			NetFloat startingRotation = o.startingRotation;
			if (startingRotation != null)
			{
				WriteStartElement("startingRotation", "", null, writePrefixed: false);
				IEnumerator enumerator = startingRotation.GetEnumerator();
				if (enumerator != null)
				{
					while (enumerator.MoveNext())
					{
						float num = (float)enumerator.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num));
					}
				}
				WriteEndElement();
			}
			NetColor color = o.color;
			if (color != null)
			{
				WriteStartElement("color", "", null, writePrefixed: false);
				IEnumerator enumerator2 = color.GetEnumerator();
				if (enumerator2 != null)
				{
					while (enumerator2.MoveNext())
					{
						Color o2 = (Color)enumerator2.Current;
						Write34_Color("Color", "", o2, needType: false);
					}
				}
				WriteEndElement();
			}
			NetInt maxTravelDistance = o.maxTravelDistance;
			if (maxTravelDistance != null)
			{
				WriteStartElement("maxTravelDistance", "", null, writePrefixed: false);
				IEnumerator enumerator3 = maxTravelDistance.GetEnumerator();
				if (enumerator3 != null)
				{
					while (enumerator3.MoveNext())
					{
						int num2 = (int)enumerator3.Current;
						WriteElementStringRaw("int", "", XmlConvert.ToString(num2));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("travelDistance", "", XmlConvert.ToString(o.travelDistance));
			NetFloat height = o.height;
			if (height != null)
			{
				WriteStartElement("height", "", null, writePrefixed: false);
				IEnumerator enumerator4 = height.GetEnumerator();
				if (enumerator4 != null)
				{
					while (enumerator4.MoveNext())
					{
						float num3 = (float)enumerator4.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num3));
					}
				}
				WriteEndElement();
			}
			NetBool ignoreTravelGracePeriod = o.ignoreTravelGracePeriod;
			if (ignoreTravelGracePeriod != null)
			{
				WriteStartElement("ignoreTravelGracePeriod", "", null, writePrefixed: false);
				IEnumerator enumerator5 = ignoreTravelGracePeriod.GetEnumerator();
				if (enumerator5 != null)
				{
					while (enumerator5.MoveNext())
					{
						bool flag = (bool)enumerator5.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag));
					}
				}
				WriteEndElement();
			}
			NetBool ignoreLocationCollision = o.ignoreLocationCollision;
			if (ignoreLocationCollision != null)
			{
				WriteStartElement("ignoreLocationCollision", "", null, writePrefixed: false);
				IEnumerator enumerator6 = ignoreLocationCollision.GetEnumerator();
				if (enumerator6 != null)
				{
					while (enumerator6.MoveNext())
					{
						bool flag2 = (bool)enumerator6.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag2));
					}
				}
				WriteEndElement();
			}
			NetBool ignoreMeleeAttacks = o.ignoreMeleeAttacks;
			if (ignoreMeleeAttacks != null)
			{
				WriteStartElement("ignoreMeleeAttacks", "", null, writePrefixed: false);
				IEnumerator enumerator7 = ignoreMeleeAttacks.GetEnumerator();
				if (enumerator7 != null)
				{
					while (enumerator7.MoveNext())
					{
						bool flag3 = (bool)enumerator7.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag3));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("destroyMe", "", XmlConvert.ToString(o.destroyMe));
			NetFloat startingScale = o.startingScale;
			if (startingScale != null)
			{
				WriteStartElement("startingScale", "", null, writePrefixed: false);
				IEnumerator enumerator8 = startingScale.GetEnumerator();
				if (enumerator8 != null)
				{
					while (enumerator8.MoveNext())
					{
						float num4 = (float)enumerator8.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num4));
					}
				}
				WriteEndElement();
			}
			NetFloat scaleGrow = o.scaleGrow;
			if (scaleGrow != null)
			{
				WriteStartElement("scaleGrow", "", null, writePrefixed: false);
				IEnumerator enumerator9 = scaleGrow.GetEnumerator();
				if (enumerator9 != null)
				{
					while (enumerator9.MoveNext())
					{
						float num5 = (float)enumerator9.Current;
						WriteElementStringRaw("float", "", XmlConvert.ToString(num5));
					}
				}
				WriteEndElement();
			}
			NetBool light = o.light;
			if (light != null)
			{
				WriteStartElement("light", "", null, writePrefixed: false);
				IEnumerator enumerator10 = light.GetEnumerator();
				if (enumerator10 != null)
				{
					while (enumerator10.MoveNext())
					{
						bool flag4 = (bool)enumerator10.Current;
						WriteElementStringRaw("boolean", "", XmlConvert.ToString(flag4));
					}
				}
				WriteEndElement();
			}
			WriteElementStringRaw("hasLit", "", XmlConvert.ToString(o.hasLit));
			WriteElementStringRaw("IgnoreLocationCollision", "", XmlConvert.ToString(o.IgnoreLocationCollision));
			WriteEndElement(o);
		}

		private void Write309_Projectile(string n, string ns, Projectile o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
			}
			else
			{
				if (needType)
				{
					return;
				}
				Type type = o.GetType();
				if (type == typeof(Projectile))
				{
					return;
				}
				if (type == typeof(DebuffingProjectile))
				{
					Write311_DebuffingProjectile(n, ns, (DebuffingProjectile)o, isNullable, needType: true);
					return;
				}
				if (!(type == typeof(BasicProjectile)))
				{
					throw CreateUnknownTypeException(o);
				}
				Write310_BasicProjectile(n, ns, (BasicProjectile)o, isNullable, needType: true);
			}
		}

		private void Write318_ToolDescription(string n, string ns, ToolDescription o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ToolDescription)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ToolDescription", "");
			}
			WriteElementStringRaw("index", "", XmlConvert.ToString(o.index));
			WriteElementStringRaw("upgradeLevel", "", XmlConvert.ToString(o.upgradeLevel));
			WriteEndElement(o);
		}

		private void Write319_ToolFactory(string n, string ns, ToolFactory o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ToolFactory)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ToolFactory", "");
			}
			WriteEndElement(o);
		}

		private void Write320_BoundingBoxGroup(string n, string ns, BoundingBoxGroup o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(BoundingBoxGroup)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("BoundingBoxGroup", "");
			}
			WriteEndElement(o);
		}

		private void Write321_ToolSpamInputSimulator(string n, string ns, ToolSpamInputSimulator o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ToolSpamInputSimulator)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ToolSpamInputSimulator", "");
			}
			WriteEndElement(o);
		}

		private void Write322_Item(string n, string ns, LeftRightClickSpamInputSimulator o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(LeftRightClickSpamInputSimulator)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("LeftRightClickSpamInputSimulator", "");
			}
			WriteEndElement(o);
		}

		private void Write323_SynchronizedShopStock(string n, string ns, SynchronizedShopStock o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(SynchronizedShopStock)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("SynchronizedShopStock", "");
			}
			WriteEndElement(o);
		}

		private void Write332_ItemDescription(string n, string ns, ItemDescription o, bool needType)
		{
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ItemDescription)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ItemDescription", "");
			}
			WriteElementStringRaw("type", "", XmlConvert.ToString(o.type));
			WriteElementStringRaw("index", "", XmlConvert.ToString(o.index));
			WriteElementStringRaw("stack", "", XmlConvert.ToString(o.stack));
			WriteEndElement(o);
		}

		private void Write333_ObjectFactory(string n, string ns, ObjectFactory o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(ObjectFactory)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("ObjectFactory", "");
			}
			WriteEndElement(o);
		}

		private void Write334_IncomingMessage(string n, string ns, IncomingMessage o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IncomingMessage)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("IncomingMessage", "");
			}
			WriteEndElement(o);
		}

		private void Write336_NetLocationRef(string n, string ns, NetLocationRef o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetLocationRef)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetLocationRef", "");
			}
			Write258_GameLocation("Value", "", o.Value, isNullable: false, needType: false);
			WriteEndElement(o);
		}

		private void Write337_NetMutex(string n, string ns, NetMutex o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetMutex)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetMutex", "");
			}
			WriteEndElement(o);
		}

		private void Write338_NetWitnessedLock(string n, string ns, NetWitnessedLock o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetWitnessedLock)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetWitnessedLock", "");
			}
			WriteEndElement(o);
		}

		private void Write339_NetNPCRef(string n, string ns, NetNPCRef o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetNPCRef)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetNPCRef", "");
			}
			WriteEndElement(o);
		}

		private void Write340_NetCharacterRef(string n, string ns, NetCharacterRef o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetCharacterRef)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetCharacterRef", "");
			}
			WriteEndElement(o);
		}

		private void Write341_NetDancePartner(string n, string ns, NetDancePartner o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(NetDancePartner)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("NetDancePartner", "");
			}
			Write164_Character("Value", "", o.Value, isNullable: false, needType: false);
			WriteEndElement(o);
		}

		private void Write378_Dracula(string n, string ns, AbigailGame.Dracula o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AbigailGame.Dracula)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("Dracula", "");
			}
			WriteElementStringRaw("health", "", XmlConvert.ToString(o.health));
			WriteElementStringRaw("type", "", XmlConvert.ToString(o.type));
			WriteElementStringRaw("speed", "", XmlConvert.ToString(o.speed));
			WriteElementStringRaw("movementAnimationTimer", "", XmlConvert.ToString(o.movementAnimationTimer));
			Write51_Rectangle("position", "", o.position, needType: false);
			WriteElementStringRaw("movementDirection", "", XmlConvert.ToString(o.movementDirection));
			WriteElementStringRaw("movedLastTurn", "", XmlConvert.ToString(o.movedLastTurn));
			WriteElementStringRaw("oppositeMotionGuy", "", XmlConvert.ToString(o.oppositeMotionGuy));
			WriteElementStringRaw("invisible", "", XmlConvert.ToString(o.invisible));
			WriteElementStringRaw("special", "", XmlConvert.ToString(o.special));
			WriteElementStringRaw("uninterested", "", XmlConvert.ToString(o.uninterested));
			WriteElementStringRaw("flyer", "", XmlConvert.ToString(o.flyer));
			Write34_Color("tint", "", o.tint, needType: false);
			Write34_Color("flashColor", "", o.flashColor, needType: false);
			WriteElementStringRaw("flashColorTimer", "", XmlConvert.ToString(o.flashColorTimer));
			WriteElementStringRaw("ticksSinceLastMovement", "", XmlConvert.ToString(o.ticksSinceLastMovement));
			Write33_Vector2("acceleration", "", o.acceleration, needType: false);
			WriteElementStringRaw("phase", "", XmlConvert.ToString(o.phase));
			WriteElementStringRaw("phaseInternalTimer", "", XmlConvert.ToString(o.phaseInternalTimer));
			WriteElementStringRaw("phaseInternalCounter", "", XmlConvert.ToString(o.phaseInternalCounter));
			WriteElementStringRaw("shootTimer", "", XmlConvert.ToString(o.shootTimer));
			WriteElementStringRaw("fullHealth", "", XmlConvert.ToString(o.fullHealth));
			Write42_Point("homePosition", "", o.homePosition, needType: false);
			WriteEndElement(o);
		}

		private void Write377_CowboyMonster(string n, string ns, AbigailGame.CowboyMonster o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(AbigailGame.CowboyMonster)))
				{
					if (type == typeof(AbigailGame.Dracula))
					{
						Write378_Dracula(n, ns, (AbigailGame.Dracula)o, isNullable, needType: true);
						return;
					}
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CowboyMonster", "");
			}
			WriteElementStringRaw("health", "", XmlConvert.ToString(o.health));
			WriteElementStringRaw("type", "", XmlConvert.ToString(o.type));
			WriteElementStringRaw("speed", "", XmlConvert.ToString(o.speed));
			WriteElementStringRaw("movementAnimationTimer", "", XmlConvert.ToString(o.movementAnimationTimer));
			Write51_Rectangle("position", "", o.position, needType: false);
			WriteElementStringRaw("movementDirection", "", XmlConvert.ToString(o.movementDirection));
			WriteElementStringRaw("movedLastTurn", "", XmlConvert.ToString(o.movedLastTurn));
			WriteElementStringRaw("oppositeMotionGuy", "", XmlConvert.ToString(o.oppositeMotionGuy));
			WriteElementStringRaw("invisible", "", XmlConvert.ToString(o.invisible));
			WriteElementStringRaw("special", "", XmlConvert.ToString(o.special));
			WriteElementStringRaw("uninterested", "", XmlConvert.ToString(o.uninterested));
			WriteElementStringRaw("flyer", "", XmlConvert.ToString(o.flyer));
			Write34_Color("tint", "", o.tint, needType: false);
			Write34_Color("flashColor", "", o.flashColor, needType: false);
			WriteElementStringRaw("flashColorTimer", "", XmlConvert.ToString(o.flashColorTimer));
			WriteElementStringRaw("ticksSinceLastMovement", "", XmlConvert.ToString(o.ticksSinceLastMovement));
			Write33_Vector2("acceleration", "", o.acceleration, needType: false);
			WriteEndElement(o);
		}

		private void Write379_CaveCrystal(string n, string ns, IslandWestCave1.CaveCrystal o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(IslandWestCave1.CaveCrystal)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("CaveCrystal", "");
			}
			Write33_Vector2("tileLocation", "", o.tileLocation, needType: false);
			WriteElementStringRaw("id", "", XmlConvert.ToString(o.id));
			WriteElementStringRaw("pitch", "", XmlConvert.ToString(o.pitch));
			Write34_Color("color", "", o.color, needType: false);
			Write34_Color("currentColor", "", o.currentColor, needType: false);
			WriteElementStringRaw("shakeTimer", "", XmlConvert.ToString(o.shakeTimer));
			WriteElementStringRaw("glowTimer", "", XmlConvert.ToString(o.glowTimer));
			WriteEndElement(o);
		}

		private void Write383_MineInfo(string n, string ns, MineInfo o, bool isNullable, bool needType)
		{
			if (o == null)
			{
				if (isNullable)
				{
					WriteNullTagLiteral(n, ns);
				}
				return;
			}
			if (!needType)
			{
				Type type = o.GetType();
				if (!(type == typeof(MineInfo)))
				{
					throw CreateUnknownTypeException(o);
				}
			}
			WriteStartElement(n, ns, o, writePrefixed: false, null);
			if (needType)
			{
				WriteXsiType("MineInfo", "");
			}
			WriteElementStringRaw("platformContainersLeft", "", XmlConvert.ToString(o.platformContainersLeft));
			WriteElementStringRaw("chestsLeft", "", XmlConvert.ToString(o.chestsLeft));
			WriteElementStringRaw("coalCartsLeft", "", XmlConvert.ToString(o.coalCartsLeft));
			WriteElementStringRaw("elevator", "", XmlConvert.ToString(o.elevator));
			WriteEndElement(o);
		}

		protected override void InitCallbacks()
		{
		}
	}
}
